name: Haskell CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  cabal:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        ghc: ['8.10.1', '8.8.2', '8.6.5']
        cabal: ['3.0']
        os: [ubuntu-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-${{ env.cache-name }}-
          ${{ runner.os }}-${{ matrix.ghc }}-
          ${{ runner.os }}-

    - name: Install system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-bionic.list http://packages.lunarg.com/vulkan/lunarg-vulkan-bionic.list
        sudo apt-get update
        sudo apt-get install libvulkan-dev glslang-tools libsdl2-dev

    - name: Remove examples for 8.6.5
      run: |
        sed -i '/examples/d' cabal.project
      if: matrix.ghc == '8.6.5'

    - name: Remove generator for all but 8.8.2
      run: |
        sed -i '/generate-new/d' cabal.project
      if: matrix.ghc != '8.8.2'

    - run: cabal update

    - run: cabal configure -fgeneric-instances

    - name: Install dependencies
      run: cabal build --only-dependencies --enable-tests --enable-benchmarks all

    - name: Build vulkan
      run: cabal build --enable-tests --enable-benchmarks vulkan

    - name: Build VulkanMemoryAllocator
      run: cabal build --enable-tests --enable-benchmarks VulkanMemoryAllocator

    - name: Build vulkan-utils
      run: cabal build --enable-tests --enable-benchmarks vulkan-utils

    - name: Build vulkan-examples
      run: cabal build --enable-tests --enable-benchmarks vulkan-examples
      if: matrix.ghc != '8.6.5'

  stack:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        stack-args: ['--flag vulkan:generic-instances --flag VulkanMemoryAllocator:generic-instances']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        stack-version: 'latest'

    - name: Cache stack global package db
      id:   stack-global
      uses: actions/cache@v1
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-global-${{ matrix.stack-args }}-${{ hashFiles('**.yaml') }}
        restore-keys: |
          ${{ runner.os }}-stack-global-${{ matrix.stack-args }}
          ${{ runner.os }}-stack-global

    - name: Cache .stack-work
      id: stack-work
      uses: actions/cache@v1
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work-${{ matrix.stack-args }}-${{ hashFiles('**.yaml') }}
        restore-keys: |
          ${{ runner.os }}-stack-work-${{ matrix.stack-args }}
          ${{ runner.os }}-stack-work

    - name: Install system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-bionic.list http://packages.lunarg.com/vulkan/lunarg-vulkan-bionic.list
        sudo apt-get update
        sudo apt-get install libvulkan-dev glslang-tools libsdl2-dev

    - name: Install dependencies
      run: stack build --test --bench --only-dependencies $ARGS
      env:
        ARGS: ${{ matrix.args }}

    - name: Build
      run: stack build $ARGS
      env:
        ARGS: ${{ matrix.args }}

  nix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v8
    - uses: cachix/cachix-action@v6
      with:
        name: vulkan-haskell
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - run: nix-build -A generate-new
    - run: nix-build -A vulkan
    - run: nix-build -A VulkanMemoryAllocator
    - run: nix-build -A vulkan-utils
    - run: nix-build -A vulkan-examples
