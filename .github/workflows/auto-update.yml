name: Auto Update

on:
  schedule:
    - cron: '0 */4 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v8
    - uses: cachix/cachix-action@v6
      with:
        name: vulkan-haskell
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

    - name: Init git
      run: |
        git config user.name 'Three Of Twelve'
        git config user.email 'ThreeOfTwelve@monoid.al'

    - run: |
        message="> $(curl https://home.monoid.al/quote/tuvok --fail || echo "No response. He's deactivated his communication system.")"
        message="${message//'%'/'%25'}"
        message="${message//$'\n'/'%0A'}"
        message="${message//$'\r'/'%0D'}"
        echo "$message" > issue_body
        echo >> issue_body
        echo "::set-env name=pr_message::$message"

    - name: Build dependencies
      run: |
        nix-build -A generate-new
        nix-build -A python3 asciidoctor gnumake nodejs nodePackages.he nodePackages.escape-string-regexp
        nix-build -A haskellPackages.hpack
        nix-build -A doxygen

    - id: update
      run: |
        ./update.sh 2>&1 | tee --append update_output
        code=${PIPESTATUS[0]}

        echo 'log of `generate-new/bin/vk`' >> issue_body
        echo '```' >> issue_body
        cat update_output >> issue_body
        echo '```' >> issue_body

        (exit $code)

    - id: check_pr
      run: |
        echo "::set-output name=create_pr::true"
        hub pr list --state open --head ThreeOfTwelve:vulkan-update-${{ steps.update.outputs.vulkan_version }} --format $'%U\n' | while read u; do
          echo "PR already exists: $u"
          echo "::set-output name=create_pr::false"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.TUVOK_TOKEN }}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      if: steps.check_pr.outputs.create_pr == 'true'
      with:
        token: ${{ secrets.TUVOK_TOKEN }}
        push-to-fork: ThreeOfTwelve/vulkan
        delete-branch: true
        branch: vulkan-update-${{ steps.update.outputs.vulkan_version }}
        title: Update Vulkan to ${{ steps.update.outputs.vulkan_version }}
        body: ${{ env.pr_message }}

    - id: check_issue
      if: ${{ failure() }}
      run: |
        echo "::set-output name=create_issue::true"
        hub issue --state open --format $'%U %t\n' | grep -i 'Failed to regenerate source for Vulkan ${{ steps.update.outputs.vulkan_version }}' | while read u; do
          echo "Issue already exists: $u"
          echo "::set-output name=create_issue::false"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.TUVOK_TOKEN }}

    - name: Create issue for failure
      if: steps.check_issue.outputs.create_issue == 'true'
      uses: peter-evans/create-issue-from-file@v2
      with:
        title: Failed to regenerate source for Vulkan ${{ steps.update.outputs.vulkan_version }}
        content-filepath: issue_body
        token: ${{ secrets.TUVOK_TOKEN }}
