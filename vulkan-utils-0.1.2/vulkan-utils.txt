-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Utils for the vulkan package
--   
--   Utils for the vulkan package
@package vulkan-utils
@version 0.1.2

module Vulkan.Utils.Debug

-- | A debug callback which prints the message prefixed with "Validation: "
--   to stderr.
debugCallbackPtr :: PFN_vkDebugUtilsMessengerCallbackEXT

-- | A debug callback the same as <a>debugCallbackPtr</a> except it will
--   call <tt>abort</tt> when
--   <tt>VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT</tt> is set.
debugCallbackFatalPtr :: PFN_vkDebugUtilsMessengerCallbackEXT

-- | Assign a name to a handle using <a>setDebugUtilsObjectNameEXT</a>,
--   note that the <tt>VK_EXT_debug_utils</tt> extension must be enabled.
nameObject :: (HasObjectType a, MonadIO m) => Device -> a -> ByteString -> m ()

module Vulkan.Utils.FromGL

-- | Convert an OpenGL format enum into a <a>Format</a>
--   
--   <pre>
--   &gt;&gt;&gt; internalFormat 0x8051
--   Just FORMAT_R8G8B8_UNORM
--   </pre>
internalFormat :: (Eq a, Num a) => a -> Maybe Format

module Vulkan.Utils.ShaderQQ

-- | QuasiQuoter for creating a compute shader
comp :: QuasiQuoter

-- | QuasiQuoter for creating a fragment shader
frag :: QuasiQuoter

-- | QuasiQuoter for creating a geometry shader
geom :: QuasiQuoter

-- | QuasiQuoter for creating a tessellation control shader
tesc :: QuasiQuoter

-- | QuasiQuoter for creating a tessellation evaluation shader
tese :: QuasiQuoter

-- | QuasiQuoter for creating a vertex shader
vert :: QuasiQuoter
type GLSLError = String
type GLSLWarning = String

-- | Compile a glsl shader to spir-v using glslangValidator.
--   
--   Messages are converted to GHC warnings or errors depending on
--   compilation success.
compileShaderQ :: String -> String -> Q Exp

-- | Compile a glsl shader to spir-v using glslangValidator
compileShader :: MonadIO m => Maybe Loc -> String -> String -> m ([GLSLWarning], Either [GLSLError] ByteString)
processValidatorMessages :: ByteString -> ([GLSLWarning], [GLSLError])
