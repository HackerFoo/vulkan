-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Bindings to the OpenXR API
--   
--   Bindings to the OpenXR API
@package openxr
@version 0.1

module OpenXR.CStruct

-- | A class for types which can be marshalled into a C style structure.
class ToCStruct a

-- | Allocates a C type structure and all dependencies and passes it to a
--   continuation. The space is deallocated when this continuation returns
--   and the C type structure must not be returned out of it.
withCStruct :: ToCStruct a => a -> (Ptr a -> IO b) -> IO b

-- | Write a C type struct into some existing memory and run a
--   continuation. The pointed to structure is not necessarily valid
--   outside the continuation as additional allocations may have been made.
pokeCStruct :: ToCStruct a => Ptr a -> a -> IO b -> IO b

-- | Allocate space for an "empty" <tt>a</tt> and populate any univalued
--   members with their value.
withZeroCStruct :: ToCStruct a => (Ptr a -> IO b) -> IO b

-- | And populate any univalued members with their value, run a function
--   and then clean up any allocated resources.
pokeZeroCStruct :: ToCStruct a => Ptr a -> IO b -> IO b

-- | The size of this struct, note that this doesn't account for any extra
--   pointed-to data
cStructSize :: ToCStruct a => Int

-- | The required memory alignment for this type
cStructAlignment :: ToCStruct a => Int

-- | A class for types which can be marshalled from a C style structure.
class FromCStruct a

-- | Read an <tt>a</tt> and any other pointed to data from memory
peekCStruct :: FromCStruct a => Ptr a -> IO a

module OpenXR.CStruct.Utils

-- | Store a <a>ByteString</a> in a fixed amount of space, truncating if
--   necessary.
--   
--   If the <a>ByteString</a> is not long enough to fill the space the
--   remaining bytes are unchanged
pokeFixedLengthByteString :: forall n. KnownNat n => Ptr (FixedArray n Word8) -> ByteString -> IO ()

-- | Store a <a>ByteString</a> in a fixed amount of space inserting a null
--   character at the end and truncating if necessary.
--   
--   If the <a>ByteString</a> is not long enough to fill the space the
--   remaining bytes are unchanged
--   
--   Note that if the <a>ByteString</a> is exactly long enough the last
--   byte will still be replaced with 0
pokeFixedLengthNullTerminatedByteString :: forall n. KnownNat n => Ptr (FixedArray n CChar) -> ByteString -> IO ()

-- | Peek a <a>ByteString</a> from a fixed sized array of bytes
peekByteStringFromSizedVectorPtr :: forall n. KnownNat n => Ptr (FixedArray n Word8) -> IO ByteString

-- | Allocate a zero array with the size specified by the <a>FixedArray</a>
--   return type. Make sure to release the memory with <tt>free</tt>
callocFixedArray :: forall n a. (KnownNat n, Storable a) => IO (Ptr (FixedArray n a))

-- | Get the pointer to the first element in the array
lowerArrayPtr :: forall a n. Ptr (FixedArray n a) -> Ptr a

-- | A type restricted <a>plusPtr</a>
advancePtrBytes :: Ptr a -> Int -> Ptr a

-- | An unpopulated type intended to be used as in <tt><a>Ptr</a>
--   (FixedArray n a)</tt> to indicate that the pointer points to an array
--   of <tt>n</tt> <tt>a</tt>s
data FixedArray (n :: Nat) (a :: Type)

module OpenXR.Core10.FuncPointers

-- | PFN_xrVoidFunction - Generic function pointer type returned by queries
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li>no parameters.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   <a>PFN_xrVoidFunction</a> is a generic function pointer type returned
--   by queries, specifically those to <a>getInstanceProcAddr</a>.
--   
--   <h1>See Also</h1>
--   
--   <a>getInstanceProcAddr</a>
type PFN_xrVoidFunction = FunPtr FN_xrVoidFunction
type FN_xrVoidFunction = () -> IO ()


-- | <h1>Name</h1>
--   
--   XR_EXT_hp_mixed_reality_controller - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_hp_mixed_reality_controller</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   96
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_hp_mixed_reality_controller
type EXT_hp_mixed_reality_controller_SPEC_VERSION = 1
pattern EXT_hp_mixed_reality_controller_SPEC_VERSION :: forall a. Integral a => a
type EXT_HP_MIXED_REALITY_CONTROLLER_EXTENSION_NAME = "XR_EXT_hp_mixed_reality_controller"
pattern EXT_HP_MIXED_REALITY_CONTROLLER_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_EXT_samsung_odyssey_controller - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_samsung_odyssey_controller</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   95
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_samsung_odyssey_controller
type EXT_samsung_odyssey_controller_SPEC_VERSION = 1
pattern EXT_samsung_odyssey_controller_SPEC_VERSION :: forall a. Integral a => a
type EXT_SAMSUNG_ODYSSEY_CONTROLLER_EXTENSION_NAME = "XR_EXT_samsung_odyssey_controller"
pattern EXT_SAMSUNG_ODYSSEY_CONTROLLER_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_EXT_win32_appcontainer_compatible - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_win32_appcontainer_compatible</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   58
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_win32_appcontainer_compatible
type EXT_win32_appcontainer_compatible_SPEC_VERSION = 1
pattern EXT_win32_appcontainer_compatible_SPEC_VERSION :: forall a. Integral a => a
type EXT_WIN32_APPCONTAINER_COMPATIBLE_EXTENSION_NAME = "XR_EXT_win32_appcontainer_compatible"
pattern EXT_WIN32_APPCONTAINER_COMPATIBLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_HTC_vive_cosmos_controller_interaction - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_HTC_vive_cosmos_controller_interaction</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   103
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_HTC_vive_cosmos_controller_interaction
type HTC_vive_cosmos_controller_interaction_SPEC_VERSION = 1
pattern HTC_vive_cosmos_controller_interaction_SPEC_VERSION :: forall a. Integral a => a
type HTC_VIVE_COSMOS_CONTROLLER_INTERACTION_EXTENSION_NAME = "XR_HTC_vive_cosmos_controller_interaction"
pattern HTC_VIVE_COSMOS_CONTROLLER_INTERACTION_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_HUAWEI_controller_interaction - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_HUAWEI_controller_interaction</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   70
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_HUAWEI_controller_interaction
type HUAWEI_controller_interaction_SPEC_VERSION = 1
pattern HUAWEI_controller_interaction_SPEC_VERSION :: forall a. Integral a => a
type HUAWEI_CONTROLLER_INTERACTION_EXTENSION_NAME = "XR_HUAWEI_controller_interaction"
pattern HUAWEI_CONTROLLER_INTERACTION_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_MND_headless - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MND_headless</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   43
--   
--   <h1>Revision</h1>
--   
--   2
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MND_headless
type MND_headless_SPEC_VERSION = 2
pattern MND_headless_SPEC_VERSION :: forall a. Integral a => a
type MND_HEADLESS_EXTENSION_NAME = "XR_MND_headless"
pattern MND_HEADLESS_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_MSFT_first_person_observer - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_first_person_observer</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   55
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <ul>
--   <li>Requires @@</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_first_person_observer
type MSFT_first_person_observer_SPEC_VERSION = 1
pattern MSFT_first_person_observer_SPEC_VERSION :: forall a. Integral a => a
type MSFT_FIRST_PERSON_OBSERVER_EXTENSION_NAME = "XR_MSFT_first_person_observer"
pattern MSFT_FIRST_PERSON_OBSERVER_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_MSFT_hand_interaction - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_hand_interaction</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   51
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_hand_interaction
type MSFT_hand_interaction_SPEC_VERSION = 1
pattern MSFT_hand_interaction_SPEC_VERSION :: forall a. Integral a => a
type MSFT_HAND_INTERACTION_EXTENSION_NAME = "XR_MSFT_hand_interaction"
pattern MSFT_HAND_INTERACTION_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_MSFT_unbounded_reference_space - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_unbounded_reference_space</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   39
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_unbounded_reference_space
type MSFT_unbounded_reference_space_SPEC_VERSION = 1
pattern MSFT_unbounded_reference_space_SPEC_VERSION :: forall a. Integral a => a
type MSFT_UNBOUNDED_REFERENCE_SPACE_EXTENSION_NAME = "XR_MSFT_unbounded_reference_space"
pattern MSFT_UNBOUNDED_REFERENCE_SPACE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_OCULUS_android_session_state_enable - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_OCULUS_android_session_state_enable</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   45
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_OCULUS_android_session_state_enable
type OCULUS_android_session_state_enable_SPEC_VERSION = 1
pattern OCULUS_android_session_state_enable_SPEC_VERSION :: forall a. Integral a => a
type OCULUS_ANDROID_SESSION_STATE_ENABLE_EXTENSION_NAME = "XR_OCULUS_android_session_state_enable"
pattern OCULUS_ANDROID_SESSION_STATE_ENABLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a


-- | <h1>Name</h1>
--   
--   XR_VARJO_quad_views - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_VARJO_quad_views</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   38
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_VARJO_quad_views
type VARJO_quad_views_SPEC_VERSION = 1
pattern VARJO_quad_views_SPEC_VERSION :: forall a. Integral a => a
type VARJO_QUAD_VIEWS_EXTENSION_NAME = "XR_VARJO_quad_views"
pattern VARJO_QUAD_VIEWS_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a

module OpenXR.Internal.Utils

-- | The common bits of enumeration and bitmask read instances
enumReadPrec :: Read i => String -> [(a, String)] -> String -> (i -> a) -> ReadPrec a

-- | The common bits of enumeration and bitmask show instances
enumShowsPrec :: Eq a => String -> [(a, String)] -> String -> (a -> i) -> (i -> ShowS) -> Int -> a -> ShowS

-- | Wrap an IO action with a pair of <a>traceEventIO</a> using the
--   specified message with "begin" or "end" appended.
traceAroundEvent :: String -> IO a -> IO a

module OpenXR.NamedType

-- | Annotate a type with a name
type (name :: k) ::: a = a

module OpenXR.VulkanTypes

-- | An opaque type for representing pointers to VkInstance handles
data Instance_T

-- | An opaque type for representing pointers to VkPhysicalDevice handles
data PhysicalDevice_T

-- | An opaque type for representing pointers to VkDevice handles
data Device_T

-- | VkImage - Opaque handle to an image object
--   
--   <h1>See Also</h1>
--   
--   <a>BindImageMemoryInfo</a>, <a>BlitImageInfo2KHR</a>,
--   <a>CopyBufferToImageInfo2KHR</a>, <a>CopyImageInfo2KHR</a>,
--   <a>CopyImageToBufferInfo2KHR</a>,
--   <a>DedicatedAllocationMemoryAllocateInfoNV</a>,
--   <a>ImageMemoryBarrier</a>, <a>ImageMemoryRequirementsInfo2</a>,
--   <a>ImageSparseMemoryRequirementsInfo2</a>, <a>ImageViewCreateInfo</a>,
--   <a>MemoryDedicatedAllocateInfo</a>, <a>ResolveImageInfo2KHR</a>,
--   <a>SparseImageMemoryBindInfo</a>,
--   <a>SparseImageOpaqueMemoryBindInfo</a>, <a>bindImageMemory</a>,
--   <a>cmdBlitImage</a>, <a>cmdClearColorImage</a>,
--   <a>cmdClearDepthStencilImage</a>, <a>cmdCopyBufferToImage</a>,
--   <a>cmdCopyImage</a>, <a>cmdCopyImageToBuffer</a>,
--   <a>cmdResolveImage</a>, <a>createImage</a>, <a>destroyImage</a>,
--   <a>getImageDrmFormatModifierPropertiesEXT</a>,
--   <a>getImageMemoryRequirements</a>,
--   <a>getImageSparseMemoryRequirements</a>,
--   <a>getImageSubresourceLayout</a>, <a>getSwapchainImagesKHR</a>
newtype Image
Image :: Word64 -> Image

-- | VkResult - Vulkan command return codes
--   
--   <h1>Description</h1>
--   
--   If a command returns a runtime error, unless otherwise specified any
--   output parameters will have undefined contents, except that if the
--   output parameter is a structure with <tt>sType</tt> and <tt>pNext</tt>
--   fields, those fields will be unmodified. Any structures chained from
--   <tt>pNext</tt> will also have undefined contents, except that
--   <tt>sType</tt> and <tt>pNext</tt> will be unmodified.
--   
--   <tt>VK_ERROR_OUT_OF_*_MEMORY</tt> errors do not modify any currently
--   existing Vulkan objects. Objects that have already been successfully
--   created <i>can</i> still be used by the application.
--   
--   Note
--   
--   As a general rule, <tt>Free</tt>, <tt>Release</tt>, and <tt>Reset</tt>
--   commands do not return <a>ERROR_OUT_OF_HOST_MEMORY</a>, while any
--   other command with a return code <i>may</i> return it. Any exceptions
--   from this rule are described for those commands.
--   
--   <a>ERROR_UNKNOWN</a> will be returned by an implementation when an
--   unexpected error occurs that cannot be attributed to valid behavior of
--   the application and implementation. Under these conditions, it
--   <i>may</i> be returned from any command returning a <a>Result</a>.
--   
--   Note
--   
--   <a>ERROR_UNKNOWN</a> is not expected to ever be returned if the
--   application behavior is valid, and if the implementation is bug-free.
--   If <a>ERROR_UNKNOWN</a> is received, the application should be checked
--   against the latest validation layers to verify correct behavior as
--   much as possible. If no issues are identified it could be an
--   implementation issue, and the implementor should be contacted for
--   support.
--   
--   Performance-critical commands generally do not have return codes. If a
--   runtime error occurs in such commands, the implementation will defer
--   reporting the error until a specified point. For commands that record
--   into command buffers (<tt>vkCmd*</tt>) runtime errors are reported by
--   <a>endCommandBuffer</a>.
--   
--   <h1>See Also</h1>
--   
--   <a>PresentInfoKHR</a>
newtype Result
Result :: Int32 -> Result

-- | <a>PIPELINE_COMPILE_REQUIRED_EXT</a> A requested pipeline creation
--   would have required compilation, but the application requested
--   compilation to not be performed.
pattern PIPELINE_COMPILE_REQUIRED_EXT :: Result

-- | <a>ERROR_OUT_OF_HOST_MEMORY</a> A host memory allocation has failed.
pattern ERROR_OUT_OF_HOST_MEMORY :: Result

-- | <a>ERROR_FORMAT_NOT_SUPPORTED</a> A requested format is not supported
--   on this device.
pattern ERROR_FORMAT_NOT_SUPPORTED :: Result

-- | <a>ERROR_DEVICE_LOST</a> The logical or physical device has been lost.
--   See <a>Lost Device</a>
pattern ERROR_DEVICE_LOST :: Result

-- | <a>ERROR_OUT_OF_POOL_MEMORY</a> A pool memory allocation has failed.
--   This <i>must</i> only be returned if no attempt to allocate host or
--   device memory was made to accommodate the new allocation. If the
--   failure was definitely due to fragmentation of the pool,
--   <a>ERROR_FRAGMENTED_POOL</a> <i>should</i> be returned instead.
pattern ERROR_OUT_OF_POOL_MEMORY :: Result

-- | <a>ERROR_INVALID_EXTERNAL_HANDLE</a> An external handle is not a valid
--   handle of the specified type.
pattern ERROR_INVALID_EXTERNAL_HANDLE :: Result

-- | <a>ERROR_FRAGMENTATION</a> A descriptor pool creation has failed due
--   to fragmentation.
pattern ERROR_FRAGMENTATION :: Result

-- | <a>ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS</a> A buffer creation or
--   memory allocation failed because the requested address is not
--   available. A shader group handle assignment failed because the
--   requested shader group handle information is no longer valid.
pattern ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS :: Result

-- | <a>ERROR_SURFACE_LOST_KHR</a> A surface is no longer available.
pattern ERROR_SURFACE_LOST_KHR :: Result

-- | <a>ERROR_NATIVE_WINDOW_IN_USE_KHR</a> The requested window is already
--   in use by Vulkan or another API in a manner which prevents it from
--   being used again.
pattern ERROR_NATIVE_WINDOW_IN_USE_KHR :: Result

-- | <a>SUBOPTIMAL_KHR</a> A swapchain no longer matches the surface
--   properties exactly, but <i>can</i> still be used to present to the
--   surface successfully.
pattern SUBOPTIMAL_KHR :: Result

-- | <a>ERROR_OUT_OF_DATE_KHR</a> A surface has changed in such a way that
--   it is no longer compatible with the swapchain, and further
--   presentation requests using the swapchain will fail. Applications
--   <i>must</i> query the new surface properties and recreate their
--   swapchain if they wish to continue presenting to the surface.
pattern ERROR_OUT_OF_DATE_KHR :: Result

-- | <a>ERROR_INCOMPATIBLE_DISPLAY_KHR</a> The display used by a swapchain
--   does not use the same presentable image layout, or is incompatible in
--   a way that prevents sharing an image.
pattern ERROR_INCOMPATIBLE_DISPLAY_KHR :: Result
pattern ERROR_VALIDATION_FAILED_EXT :: Result

-- | <a>ERROR_INVALID_SHADER_NV</a> One or more shaders failed to compile
--   or link. More details are reported back to the application via
--   <tt>VK_EXT_debug_report</tt> if enabled.
pattern ERROR_INVALID_SHADER_NV :: Result
pattern ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT :: Result
pattern ERROR_NOT_PERMITTED_EXT :: Result

-- | <a>ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT</a> An operation on a
--   swapchain created with
--   <a>FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT</a> failed as it
--   did not have exlusive full-screen access. This <i>may</i> occur due to
--   implementation-dependent reasons, outside of the application’s
--   control.
pattern ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT :: Result

-- | <a>THREAD_IDLE_KHR</a> A deferred operation is not complete but there
--   is currently no work for this thread to do at the time of this call.
pattern THREAD_IDLE_KHR :: Result

-- | <a>THREAD_DONE_KHR</a> A deferred operation is not complete but there
--   is no work remaining to assign to additional threads.
pattern THREAD_DONE_KHR :: Result

-- | <a>OPERATION_DEFERRED_KHR</a> A deferred operation was requested and
--   at least some of the work was deferred.
pattern OPERATION_DEFERRED_KHR :: Result

-- | <a>OPERATION_NOT_DEFERRED_KHR</a> A deferred operation was requested
--   and no operations were deferred.
pattern OPERATION_NOT_DEFERRED_KHR :: Result

-- | <a>ERROR_UNKNOWN</a> An unknown error has occurred; either the
--   application has provided invalid input, or an implementation failure
--   has occurred.
pattern ERROR_UNKNOWN :: Result

-- | <a>ERROR_FRAGMENTED_POOL</a> A pool allocation has failed due to
--   fragmentation of the pool’s memory. This <i>must</i> only be returned
--   if no attempt to allocate host or device memory was made to
--   accommodate the new allocation. This <i>should</i> be returned in
--   preference to <a>ERROR_OUT_OF_POOL_MEMORY</a>, but only if the
--   implementation is certain that the pool allocation failure was due to
--   fragmentation.
pattern ERROR_FRAGMENTED_POOL :: Result

-- | <a>ERROR_TOO_MANY_OBJECTS</a> Too many objects of the type have
--   already been created.
pattern ERROR_TOO_MANY_OBJECTS :: Result

-- | <a>ERROR_INCOMPATIBLE_DRIVER</a> The requested version of Vulkan is
--   not supported by the driver or is otherwise incompatible for
--   implementation-specific reasons.
pattern ERROR_INCOMPATIBLE_DRIVER :: Result

-- | <a>ERROR_FEATURE_NOT_PRESENT</a> A requested feature is not supported.
pattern ERROR_FEATURE_NOT_PRESENT :: Result

-- | <a>ERROR_EXTENSION_NOT_PRESENT</a> A requested extension is not
--   supported.
pattern ERROR_EXTENSION_NOT_PRESENT :: Result

-- | <a>ERROR_LAYER_NOT_PRESENT</a> A requested layer is not present or
--   could not be loaded.
pattern ERROR_LAYER_NOT_PRESENT :: Result

-- | <a>ERROR_MEMORY_MAP_FAILED</a> Mapping of a memory object has failed.
pattern ERROR_MEMORY_MAP_FAILED :: Result

-- | <a>ERROR_INITIALIZATION_FAILED</a> Initialization of an object could
--   not be completed for implementation-specific reasons.
pattern ERROR_INITIALIZATION_FAILED :: Result

-- | <a>ERROR_OUT_OF_DEVICE_MEMORY</a> A device memory allocation has
--   failed.
pattern ERROR_OUT_OF_DEVICE_MEMORY :: Result

-- | <a>INCOMPLETE</a> A return array was too small for the result
pattern INCOMPLETE :: Result

-- | <a>EVENT_RESET</a> An event is unsignaled
pattern EVENT_RESET :: Result

-- | <a>EVENT_SET</a> An event is signaled
pattern EVENT_SET :: Result

-- | <a>TIMEOUT</a> A wait operation has not completed in the specified
--   time
pattern TIMEOUT :: Result

-- | <a>NOT_READY</a> A fence or query has not yet completed
pattern NOT_READY :: Result

-- | <a>SUCCESS</a> Command successfully completed
pattern SUCCESS :: Result

-- | VkFormat - Available image formats
--   
--   <h1>See Also</h1>
--   
--   <a>AccelerationStructureGeometryTrianglesDataKHR</a>,
--   <a>AndroidHardwareBufferFormatPropertiesANDROID</a>,
--   <a>AttachmentDescription</a>, <a>AttachmentDescription2</a>,
--   <a>BufferViewCreateInfo</a>, <a>FramebufferAttachmentImageInfo</a>,
--   <a>GeometryTrianglesNV</a>, <a>ImageCreateInfo</a>,
--   <a>ImageFormatListCreateInfo</a>, <a>ImageViewASTCDecodeModeEXT</a>,
--   <a>ImageViewCreateInfo</a>, <a>PhysicalDeviceImageFormatInfo2</a>,
--   <a>PhysicalDeviceSparseImageFormatInfo2</a>,
--   <a>SamplerCustomBorderColorCreateInfoEXT</a>,
--   <a>SamplerYcbcrConversionCreateInfo</a>, <a>SurfaceFormatKHR</a>,
--   <a>SwapchainCreateInfoKHR</a>, <a>VertexInputAttributeDescription</a>,
--   <a>getPhysicalDeviceExternalImageFormatPropertiesNV</a>,
--   <a>getPhysicalDeviceFormatProperties</a>,
--   <a>getPhysicalDeviceFormatProperties2</a>,
--   <a>getPhysicalDeviceFormatProperties2KHR</a>,
--   <a>getPhysicalDeviceImageFormatProperties</a>,
--   <a>getPhysicalDeviceSparseImageFormatProperties</a>
newtype Format
Format :: Int32 -> Format

-- | <a>FORMAT_R8G8B8A8_UNORM</a> specifies a four-component, 32-bit
--   unsigned normalized format that has an 8-bit R component in byte 0, an
--   8-bit G component in byte 1, an 8-bit B component in byte 2, and an
--   8-bit A component in byte 3.
pattern FORMAT_R8G8B8A8_UNORM :: Format

-- | <a>FORMAT_R8_UINT</a> specifies a one-component, 8-bit unsigned
--   integer format that has a single 8-bit R component.
pattern FORMAT_R8_UINT :: Format

-- | <a>FORMAT_R8_SINT</a> specifies a one-component, 8-bit signed integer
--   format that has a single 8-bit R component.
pattern FORMAT_R8_SINT :: Format

-- | <a>FORMAT_R16_UINT</a> specifies a one-component, 16-bit unsigned
--   integer format that has a single 16-bit R component.
pattern FORMAT_R16_UINT :: Format

-- | <a>FORMAT_R16_SINT</a> specifies a one-component, 16-bit signed
--   integer format that has a single 16-bit R component.
pattern FORMAT_R16_SINT :: Format

-- | <a>FORMAT_R32_UINT</a> specifies a one-component, 32-bit unsigned
--   integer format that has a single 32-bit R component.
pattern FORMAT_R32_UINT :: Format

-- | <a>FORMAT_R32_SINT</a> specifies a one-component, 32-bit signed
--   integer format that has a single 32-bit R component.
pattern FORMAT_R32_SINT :: Format

-- | <a>FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 5×4 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 5×5 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 6×5 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 6×6 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 8×5 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 8×6 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 8×8 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 10×5 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 10×6 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 10×8 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 10×10 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 12×10 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT</a> specifies a four-component,
--   ASTC compressed format where each 128-bit compressed texel block
--   encodes a 12×12 rectangle of signed floating-point RGBA texel data.
pattern FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT :: Format

-- | <a>FORMAT_A4R4G4B4_UNORM_PACK16_EXT</a> specifies a four-component,
--   16-bit packed unsigned normalized format that has a 4-bit A component
--   in bits 12..15, a 4-bit R component in bits 8..11, a 4-bit G component
--   in bits 4..7, and a 4-bit B component in bits 0..3.
pattern FORMAT_A4R4G4B4_UNORM_PACK16_EXT :: Format

-- | <a>FORMAT_A4B4G4R4_UNORM_PACK16_EXT</a> specifies a four-component,
--   16-bit packed unsigned normalized format that has a 4-bit A component
--   in bits 12..15, a 4-bit B component in bits 8..11, a 4-bit G component
--   in bits 4..7, and a 4-bit R component in bits 0..3.
pattern FORMAT_A4B4G4R4_UNORM_PACK16_EXT :: Format

-- | <a>FORMAT_R16G16B16A16_SFLOAT</a> specifies a four-component, 64-bit
--   signed floating-point format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in
--   bytes 4..5, and a 16-bit A component in bytes 6..7.
pattern FORMAT_R16G16B16A16_SFLOAT :: Format

-- | <a>FORMAT_E5B9G9R9_UFLOAT_PACK32</a> specifies a three-component,
--   32-bit packed unsigned floating-point format that has a 5-bit shared
--   exponent in bits 27..31, a 9-bit B component mantissa in bits 18..26,
--   a 9-bit G component mantissa in bits 9..17, and a 9-bit R component
--   mantissa in bits 0..8.
pattern FORMAT_E5B9G9R9_UFLOAT_PACK32 :: Format

-- | <a>FORMAT_UNDEFINED</a> specifies that the format is not specified.
pattern FORMAT_UNDEFINED :: Format

-- | <a>FORMAT_R32G32B32_SFLOAT</a> specifies a three-component, 96-bit
--   signed floating-point format that has a 32-bit R component in bytes
--   0..3, a 32-bit G component in bytes 4..7, and a 32-bit B component in
--   bytes 8..11.
pattern FORMAT_R32G32B32_SFLOAT :: Format

-- | <a>FORMAT_R32G32_SFLOAT</a> specifies a two-component, 64-bit signed
--   floating-point format that has a 32-bit R component in bytes 0..3, and
--   a 32-bit G component in bytes 4..7.
pattern FORMAT_R32G32_SFLOAT :: Format

-- | <a>FORMAT_R16G16B16_SFLOAT</a> specifies a three-component, 48-bit
--   signed floating-point format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in
--   bytes 4..5.
pattern FORMAT_R16G16B16_SFLOAT :: Format

-- | <a>FORMAT_R16G16_SFLOAT</a> specifies a two-component, 32-bit signed
--   floating-point format that has a 16-bit R component in bytes 0..1, and
--   a 16-bit G component in bytes 2..3.
pattern FORMAT_R16G16_SFLOAT :: Format

-- | <a>FORMAT_R16G16_SNORM</a> specifies a two-component, 32-bit signed
--   normalized format that has a 16-bit R component in bytes 0..1, and a
--   16-bit G component in bytes 2..3.
pattern FORMAT_R16G16_SNORM :: Format

-- | <a>FORMAT_R16G16B16_SNORM</a> specifies a three-component, 48-bit
--   signed normalized format that has a 16-bit R component in bytes 0..1,
--   a 16-bit G component in bytes 2..3, and a 16-bit B component in bytes
--   4..5.
pattern FORMAT_R16G16B16_SNORM :: Format

-- | <a>FORMAT_G8_B8R8_2PLANE_420_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has an 8-bit G component in
--   plane 0, and a two-component, 16-bit BR plane 1 consisting of an 8-bit
--   B component in byte 0 and an 8-bit R component in byte 1. The
--   horizontal and vertical dimensions of the BR plane is halved relative
--   to the image dimensions, and each R and B value is shared with the G
--   components for which (leftlfloor i_G times 0.5 rightrfloor = i_B =
--   i_R) and (leftlfloor j_G times 0.5 rightrfloor = j_B = j_R). The
--   location of each plane when this image is in linear layout can be
--   determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width and height that is a
--   multiple of two.
pattern FORMAT_G8_B8R8_2PLANE_420_UNORM :: Format

-- | <a>FORMAT_G8_B8_R8_3PLANE_420_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has an 8-bit G component in
--   plane 0, an 8-bit B component in plane 1, and an 8-bit R component in
--   plane 2. The horizontal and vertical dimensions of the R and B planes
--   are halved relative to the image dimensions, and each R and B
--   component is shared with the G components for which (leftlfloor i_G
--   times 0.5 rightrfloor = i_B = i_R) and (leftlfloor j_G times 0.5
--   rightrfloor = j_B = j_R). The location of each plane when this image
--   is in linear layout can be determined via
--   <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width and height that is a multiple of
--   two.
pattern FORMAT_G8_B8_R8_3PLANE_420_UNORM :: Format

-- | <a>FORMAT_S8_UINT</a> specifies a one-component, 8-bit unsigned
--   integer format that has 8-bits in the stencil component.
pattern FORMAT_S8_UINT :: Format

-- | <a>FORMAT_D16_UNORM</a> specifies a one-component, 16-bit unsigned
--   normalized format that has a single 16-bit depth component.
pattern FORMAT_D16_UNORM :: Format

-- | <a>FORMAT_D16_UNORM_S8_UINT</a> specifies a two-component, 24-bit
--   format that has 16 unsigned normalized bits in the depth component and
--   8 unsigned integer bits in the stencil component.
pattern FORMAT_D16_UNORM_S8_UINT :: Format

-- | <a>FORMAT_D32_SFLOAT</a> specifies a one-component, 32-bit signed
--   floating-point format that has 32-bits in the depth component.
pattern FORMAT_D32_SFLOAT :: Format

-- | <a>FORMAT_D32_SFLOAT_S8_UINT</a> specifies a two-component format that
--   has 32 signed float bits in the depth component and 8 unsigned integer
--   bits in the stencil component. There are optionally: 24-bits that are
--   unused.
pattern FORMAT_D32_SFLOAT_S8_UINT :: Format

-- | <a>FORMAT_X8_D24_UNORM_PACK32</a> specifies a two-component, 32-bit
--   format that has 24 unsigned normalized bits in the depth component
--   and, optionally:, 8 bits that are unused.
pattern FORMAT_X8_D24_UNORM_PACK32 :: Format

-- | <a>FORMAT_D24_UNORM_S8_UINT</a> specifies a two-component, 32-bit
--   packed format that has 8 unsigned integer bits in the stencil
--   component, and 24 unsigned normalized bits in the depth component.
pattern FORMAT_D24_UNORM_S8_UINT :: Format

-- | <a>FORMAT_R8G8_UNORM</a> specifies a two-component, 16-bit unsigned
--   normalized format that has an 8-bit R component in byte 0, and an
--   8-bit G component in byte 1.
pattern FORMAT_R8G8_UNORM :: Format

-- | <a>FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 10-bit G
--   component in the top 10 bits of each 16-bit word of plane 0, a 10-bit
--   B component in the top 10 bits of each 16-bit word of plane 1, and a
--   10-bit R component in the top 10 bits of each 16-bit word of plane 2,
--   with the bottom 6 bits of each word unused. The horizontal and
--   vertical dimensions of the R and B planes are halved relative to the
--   image dimensions, and each R and B component is shared with the G
--   components for which (leftlfloor i_G times 0.5 rightrfloor = i_B =
--   i_R) and (leftlfloor j_G times 0.5 rightrfloor = j_B = j_R). The
--   location of each plane when this image is in linear layout can be
--   determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width and height that is a multiple of
--   two.
pattern FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 :: Format

-- | <a>FORMAT_B4G4R4A4_UNORM_PACK16</a> specifies a four-component, 16-bit
--   packed unsigned normalized format that has a 4-bit B component in bits
--   12..15, a 4-bit G component in bits 8..11, a 4-bit R component in bits
--   4..7, and a 4-bit A component in bits 0..3.
pattern FORMAT_B4G4R4A4_UNORM_PACK16 :: Format

-- | <a>FORMAT_B5G6R5_UNORM_PACK16</a> specifies a three-component, 16-bit
--   packed unsigned normalized format that has a 5-bit B component in bits
--   11..15, a 6-bit G component in bits 5..10, and a 5-bit R component in
--   bits 0..4.
pattern FORMAT_B5G6R5_UNORM_PACK16 :: Format

-- | <a>FORMAT_B5G5R5A1_UNORM_PACK16</a> specifies a four-component, 16-bit
--   packed unsigned normalized format that has a 5-bit B component in bits
--   11..15, a 5-bit G component in bits 6..10, a 5-bit R component in bits
--   1..5, and a 1-bit A component in bit 0.
pattern FORMAT_B5G5R5A1_UNORM_PACK16 :: Format

-- | <a>FORMAT_G8B8G8R8_422_UNORM</a> specifies a four-component, 32-bit
--   format containing a pair of G components, an R component, and a B
--   component, collectively encoding a 2×1 rectangle of unsigned
--   normalized RGB texel data. One G value is present at each <i>i</i>
--   coordinate, with the B and R values shared across both G values and
--   thus recorded at half the horizontal resolution of the image. This
--   format has an 8-bit G component for the even <i>i</i> coordinate in
--   byte 0, an 8-bit B component in byte 1, an 8-bit G component for the
--   odd <i>i</i> coordinate in byte 2, and an 8-bit R component in byte 3.
--   Images in this format <i>must</i> be defined with a width that is a
--   multiple of two. For the purposes of the constraints on copy extents,
--   this format is treated as a compressed format with a 2×1 compressed
--   texel block.
pattern FORMAT_G8B8G8R8_422_UNORM :: Format

-- | <a>FORMAT_B8G8R8G8_422_UNORM</a> specifies a four-component, 32-bit
--   format containing a pair of G components, an R component, and a B
--   component, collectively encoding a 2×1 rectangle of unsigned
--   normalized RGB texel data. One G value is present at each <i>i</i>
--   coordinate, with the B and R values shared across both G values and
--   thus recorded at half the horizontal resolution of the image. This
--   format has an 8-bit B component in byte 0, an 8-bit G component for
--   the even <i>i</i> coordinate in byte 1, an 8-bit R component in byte
--   2, and an 8-bit G component for the odd <i>i</i> coordinate in byte 3.
--   Images in this format <i>must</i> be defined with a width that is a
--   multiple of two. For the purposes of the constraints on copy extents,
--   this format is treated as a compressed format with a 2×1 compressed
--   texel block.
pattern FORMAT_B8G8R8G8_422_UNORM :: Format

-- | <a>FORMAT_G8_B8_R8_3PLANE_422_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has an 8-bit G component in
--   plane 0, an 8-bit B component in plane 1, and an 8-bit R component in
--   plane 2. The horizontal dimension of the R and B plane is halved
--   relative to the image dimensions, and each R and B value is shared
--   with the G components for which (leftlfloor i_G times 0.5 rightrfloor
--   = i_B = i_R). The location of each plane when this image is in linear
--   layout can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G8_B8_R8_3PLANE_422_UNORM :: Format

-- | <a>FORMAT_G8_B8R8_2PLANE_422_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has an 8-bit G component in
--   plane 0, and a two-component, 16-bit BR plane 1 consisting of an 8-bit
--   B component in byte 0 and an 8-bit R component in byte 1. The
--   horizontal dimensions of the BR plane is halved relative to the image
--   dimensions, and each R and B value is shared with the G components for
--   which (leftlfloor i_G times 0.5 rightrfloor = i_B = i_R). The location
--   of each plane when this image is in linear layout can be determined
--   via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G8_B8R8_2PLANE_422_UNORM :: Format

-- | <a>FORMAT_G8_B8_R8_3PLANE_444_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has an 8-bit G component in
--   plane 0, an 8-bit B component in plane 1, and an 8-bit R component in
--   plane 2. Each plane has the same dimensions and each R, G and B
--   component contributes to a single texel. The location of each plane
--   when this image is in linear layout can be determined via
--   <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane.
pattern FORMAT_G8_B8_R8_3PLANE_444_UNORM :: Format

-- | <a>FORMAT_R10X6_UNORM_PACK16</a> specifies a one-component, 16-bit
--   unsigned normalized format that has a single 10-bit R component in the
--   top 10 bits of a 16-bit word, with the bottom 6 bits unused.
pattern FORMAT_R10X6_UNORM_PACK16 :: Format

-- | <a>FORMAT_R10X6G10X6_UNORM_2PACK16</a> specifies a two-component,
--   32-bit unsigned normalized format that has a 10-bit R component in the
--   top 10 bits of the word in bytes 0..1, and a 10-bit G component in the
--   top 10 bits of the word in bytes 2..3, with the bottom 6 bits of each
--   word unused.
pattern FORMAT_R10X6G10X6_UNORM_2PACK16 :: Format

-- | <a>FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16</a> specifies a
--   four-component, 64-bit unsigned normalized format that has a 10-bit R
--   component in the top 10 bits of the word in bytes 0..1, a 10-bit G
--   component in the top 10 bits of the word in bytes 2..3, a 10-bit B
--   component in the top 10 bits of the word in bytes 4..5, and a 10-bit A
--   component in the top 10 bits of the word in bytes 6..7, with the
--   bottom 6 bits of each word unused.
pattern FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 :: Format

-- | <a>FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16</a> specifies a
--   four-component, 64-bit format containing a pair of G components, an R
--   component, and a B component, collectively encoding a 2×1 rectangle of
--   unsigned normalized RGB texel data. One G value is present at each
--   <i>i</i> coordinate, with the B and R values shared across both G
--   values and thus recorded at half the horizontal resolution of the
--   image. This format has a 10-bit G component for the even <i>i</i>
--   coordinate in the top 10 bits of the word in bytes 0..1, a 10-bit B
--   component in the top 10 bits of the word in bytes 2..3, a 10-bit G
--   component for the odd <i>i</i> coordinate in the top 10 bits of the
--   word in bytes 4..5, and a 10-bit R component in the top 10 bits of the
--   word in bytes 6..7, with the bottom 6 bits of each word unused. Images
--   in this format <i>must</i> be defined with a width that is a multiple
--   of two. For the purposes of the constraints on copy extents, this
--   format is treated as a compressed format with a 2×1 compressed texel
--   block.
pattern FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 :: Format

-- | <a>FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16</a> specifies a
--   four-component, 64-bit format containing a pair of G components, an R
--   component, and a B component, collectively encoding a 2×1 rectangle of
--   unsigned normalized RGB texel data. One G value is present at each
--   <i>i</i> coordinate, with the B and R values shared across both G
--   values and thus recorded at half the horizontal resolution of the
--   image. This format has a 10-bit B component in the top 10 bits of the
--   word in bytes 0..1, a 10-bit G component for the even <i>i</i>
--   coordinate in the top 10 bits of the word in bytes 2..3, a 10-bit R
--   component in the top 10 bits of the word in bytes 4..5, and a 10-bit G
--   component for the odd <i>i</i> coordinate in the top 10 bits of the
--   word in bytes 6..7, with the bottom 6 bits of each word unused. Images
--   in this format <i>must</i> be defined with a width that is a multiple
--   of two. For the purposes of the constraints on copy extents, this
--   format is treated as a compressed format with a 2×1 compressed texel
--   block.
pattern FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 :: Format

-- | <a>FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 10-bit G
--   component in the top 10 bits of each 16-bit word of plane 0, and a
--   two-component, 32-bit BR plane 1 consisting of a 10-bit B component in
--   the top 10 bits of the word in bytes 0..1, and a 10-bit R component in
--   the top 10 bits of the word in bytes 2..3, the bottom 6 bits of each
--   word unused. The horizontal and vertical dimensions of the BR plane is
--   halved relative to the image dimensions, and each R and B value is
--   shared with the G components for which (leftlfloor i_G times 0.5
--   rightrfloor = i_B = i_R) and (leftlfloor j_G times 0.5 rightrfloor =
--   j_B = j_R). The location of each plane when this image is in linear
--   layout can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width and height that is a
--   multiple of two.
pattern FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 10-bit G
--   component in the top 10 bits of each 16-bit word of plane 0, a 10-bit
--   B component in the top 10 bits of each 16-bit word of plane 1, and a
--   10-bit R component in the top 10 bits of each 16-bit word of plane 2,
--   with the bottom 6 bits of each word unused. The horizontal dimension
--   of the R and B plane is halved relative to the image dimensions, and
--   each R and B value is shared with the G components for which
--   (leftlfloor i_G times 0.5 rightrfloor = i_B = i_R). The location of
--   each plane when this image is in linear layout can be determined via
--   <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 10-bit G
--   component in the top 10 bits of each 16-bit word of plane 0, and a
--   two-component, 32-bit BR plane 1 consisting of a 10-bit B component in
--   the top 10 bits of the word in bytes 0..1, and a 10-bit R component in
--   the top 10 bits of the word in bytes 2..3, the bottom 6 bits of each
--   word unused. The horizontal dimensions of the BR plane is halved
--   relative to the image dimensions, and each R and B value is shared
--   with the G components for which (leftlfloor i_G times 0.5 rightrfloor
--   = i_B = i_R). The location of each plane when this image is in linear
--   layout can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 10-bit G
--   component in the top 10 bits of each 16-bit word of plane 0, a 10-bit
--   B component in the top 10 bits of each 16-bit word of plane 1, and a
--   10-bit R component in the top 10 bits of each 16-bit word of plane 2,
--   with the bottom 6 bits of each word unused. Each plane has the same
--   dimensions and each R, G and B component contributes to a single
--   texel. The location of each plane when this image is in linear layout
--   can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane.
pattern FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 :: Format

-- | <a>FORMAT_R12X4_UNORM_PACK16</a> specifies a one-component, 16-bit
--   unsigned normalized format that has a single 12-bit R component in the
--   top 12 bits of a 16-bit word, with the bottom 4 bits unused.
pattern FORMAT_R12X4_UNORM_PACK16 :: Format

-- | <a>FORMAT_R12X4G12X4_UNORM_2PACK16</a> specifies a two-component,
--   32-bit unsigned normalized format that has a 12-bit R component in the
--   top 12 bits of the word in bytes 0..1, and a 12-bit G component in the
--   top 12 bits of the word in bytes 2..3, with the bottom 4 bits of each
--   word unused.
pattern FORMAT_R12X4G12X4_UNORM_2PACK16 :: Format

-- | <a>FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16</a> specifies a
--   four-component, 64-bit unsigned normalized format that has a 12-bit R
--   component in the top 12 bits of the word in bytes 0..1, a 12-bit G
--   component in the top 12 bits of the word in bytes 2..3, a 12-bit B
--   component in the top 12 bits of the word in bytes 4..5, and a 12-bit A
--   component in the top 12 bits of the word in bytes 6..7, with the
--   bottom 4 bits of each word unused.
pattern FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 :: Format

-- | <a>FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16</a> specifies a
--   four-component, 64-bit format containing a pair of G components, an R
--   component, and a B component, collectively encoding a 2×1 rectangle of
--   unsigned normalized RGB texel data. One G value is present at each
--   <i>i</i> coordinate, with the B and R values shared across both G
--   values and thus recorded at half the horizontal resolution of the
--   image. This format has a 12-bit G component for the even <i>i</i>
--   coordinate in the top 12 bits of the word in bytes 0..1, a 12-bit B
--   component in the top 12 bits of the word in bytes 2..3, a 12-bit G
--   component for the odd <i>i</i> coordinate in the top 12 bits of the
--   word in bytes 4..5, and a 12-bit R component in the top 12 bits of the
--   word in bytes 6..7, with the bottom 4 bits of each word unused. Images
--   in this format <i>must</i> be defined with a width that is a multiple
--   of two. For the purposes of the constraints on copy extents, this
--   format is treated as a compressed format with a 2×1 compressed texel
--   block.
pattern FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 :: Format

-- | <a>FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16</a> specifies a
--   four-component, 64-bit format containing a pair of G components, an R
--   component, and a B component, collectively encoding a 2×1 rectangle of
--   unsigned normalized RGB texel data. One G value is present at each
--   <i>i</i> coordinate, with the B and R values shared across both G
--   values and thus recorded at half the horizontal resolution of the
--   image. This format has a 12-bit B component in the top 12 bits of the
--   word in bytes 0..1, a 12-bit G component for the even <i>i</i>
--   coordinate in the top 12 bits of the word in bytes 2..3, a 12-bit R
--   component in the top 12 bits of the word in bytes 4..5, and a 12-bit G
--   component for the odd <i>i</i> coordinate in the top 12 bits of the
--   word in bytes 6..7, with the bottom 4 bits of each word unused. Images
--   in this format <i>must</i> be defined with a width that is a multiple
--   of two. For the purposes of the constraints on copy extents, this
--   format is treated as a compressed format with a 2×1 compressed texel
--   block.
pattern FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 :: Format

-- | <a>FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 12-bit G
--   component in the top 12 bits of each 16-bit word of plane 0, a 12-bit
--   B component in the top 12 bits of each 16-bit word of plane 1, and a
--   12-bit R component in the top 12 bits of each 16-bit word of plane 2,
--   with the bottom 4 bits of each word unused. The horizontal and
--   vertical dimensions of the R and B planes are halved relative to the
--   image dimensions, and each R and B component is shared with the G
--   components for which (leftlfloor i_G times 0.5 rightrfloor = i_B =
--   i_R) and (leftlfloor j_G times 0.5 rightrfloor = j_B = j_R). The
--   location of each plane when this image is in linear layout can be
--   determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width and height that is a multiple of
--   two.
pattern FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 12-bit G
--   component in the top 12 bits of each 16-bit word of plane 0, and a
--   two-component, 32-bit BR plane 1 consisting of a 12-bit B component in
--   the top 12 bits of the word in bytes 0..1, and a 12-bit R component in
--   the top 12 bits of the word in bytes 2..3, the bottom 4 bits of each
--   word unused. The horizontal and vertical dimensions of the BR plane is
--   halved relative to the image dimensions, and each R and B value is
--   shared with the G components for which (leftlfloor i_G times 0.5
--   rightrfloor = i_B = i_R) and (leftlfloor j_G times 0.5 rightrfloor =
--   j_B = j_R). The location of each plane when this image is in linear
--   layout can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width and height that is a
--   multiple of two.
pattern FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 12-bit G
--   component in the top 12 bits of each 16-bit word of plane 0, a 12-bit
--   B component in the top 12 bits of each 16-bit word of plane 1, and a
--   12-bit R component in the top 12 bits of each 16-bit word of plane 2,
--   with the bottom 4 bits of each word unused. The horizontal dimension
--   of the R and B plane is halved relative to the image dimensions, and
--   each R and B value is shared with the G components for which
--   (leftlfloor i_G times 0.5 rightrfloor = i_B = i_R). The location of
--   each plane when this image is in linear layout can be determined via
--   <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 12-bit G
--   component in the top 12 bits of each 16-bit word of plane 0, and a
--   two-component, 32-bit BR plane 1 consisting of a 12-bit B component in
--   the top 12 bits of the word in bytes 0..1, and a 12-bit R component in
--   the top 12 bits of the word in bytes 2..3, the bottom 4 bits of each
--   word unused. The horizontal dimensions of the BR plane is halved
--   relative to the image dimensions, and each R and B value is shared
--   with the G components for which (leftlfloor i_G times 0.5 rightrfloor
--   = i_B = i_R). The location of each plane when this image is in linear
--   layout can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16</a> specifies an
--   unsigned normalized <i>multi-planar format</i> that has a 12-bit G
--   component in the top 12 bits of each 16-bit word of plane 0, a 12-bit
--   B component in the top 12 bits of each 16-bit word of plane 1, and a
--   12-bit R component in the top 12 bits of each 16-bit word of plane 2,
--   with the bottom 4 bits of each word unused. Each plane has the same
--   dimensions and each R, G and B component contributes to a single
--   texel. The location of each plane when this image is in linear layout
--   can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane.
pattern FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 :: Format

-- | <a>FORMAT_G16B16G16R16_422_UNORM</a> specifies a four-component,
--   64-bit format containing a pair of G components, an R component, and a
--   B component, collectively encoding a 2×1 rectangle of unsigned
--   normalized RGB texel data. One G value is present at each <i>i</i>
--   coordinate, with the B and R values shared across both G values and
--   thus recorded at half the horizontal resolution of the image. This
--   format has a 16-bit G component for the even <i>i</i> coordinate in
--   the word in bytes 0..1, a 16-bit B component in the word in bytes
--   2..3, a 16-bit G component for the odd <i>i</i> coordinate in the word
--   in bytes 4..5, and a 16-bit R component in the word in bytes 6..7.
--   Images in this format <i>must</i> be defined with a width that is a
--   multiple of two. For the purposes of the constraints on copy extents,
--   this format is treated as a compressed format with a 2×1 compressed
--   texel block.
pattern FORMAT_G16B16G16R16_422_UNORM :: Format

-- | <a>FORMAT_B16G16R16G16_422_UNORM</a> specifies a four-component,
--   64-bit format containing a pair of G components, an R component, and a
--   B component, collectively encoding a 2×1 rectangle of unsigned
--   normalized RGB texel data. One G value is present at each <i>i</i>
--   coordinate, with the B and R values shared across both G values and
--   thus recorded at half the horizontal resolution of the image. This
--   format has a 16-bit B component in the word in bytes 0..1, a 16-bit G
--   component for the even <i>i</i> coordinate in the word in bytes 2..3,
--   a 16-bit R component in the word in bytes 4..5, and a 16-bit G
--   component for the odd <i>i</i> coordinate in the word in bytes 6..7.
--   Images in this format <i>must</i> be defined with a width that is a
--   multiple of two. For the purposes of the constraints on copy extents,
--   this format is treated as a compressed format with a 2×1 compressed
--   texel block.
pattern FORMAT_B16G16R16G16_422_UNORM :: Format

-- | <a>FORMAT_G16_B16_R16_3PLANE_420_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has a 16-bit G component in
--   each 16-bit word of plane 0, a 16-bit B component in each 16-bit word
--   of plane 1, and a 16-bit R component in each 16-bit word of plane 2.
--   The horizontal and vertical dimensions of the R and B planes are
--   halved relative to the image dimensions, and each R and B component is
--   shared with the G components for which (leftlfloor i_G times 0.5
--   rightrfloor = i_B = i_R) and (leftlfloor j_G times 0.5 rightrfloor =
--   j_B = j_R). The location of each plane when this image is in linear
--   layout can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width and height that is a multiple of
--   two.
pattern FORMAT_G16_B16_R16_3PLANE_420_UNORM :: Format

-- | <a>FORMAT_G16_B16R16_2PLANE_420_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has a 16-bit G component in
--   each 16-bit word of plane 0, and a two-component, 32-bit BR plane 1
--   consisting of a 16-bit B component in the word in bytes 0..1, and a
--   16-bit R component in the word in bytes 2..3. The horizontal and
--   vertical dimensions of the BR plane is halved relative to the image
--   dimensions, and each R and B value is shared with the G components for
--   which (leftlfloor i_G times 0.5 rightrfloor = i_B = i_R) and
--   (leftlfloor j_G times 0.5 rightrfloor = j_B = j_R). The location of
--   each plane when this image is in linear layout can be determined via
--   <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width and height that is a
--   multiple of two.
pattern FORMAT_G16_B16R16_2PLANE_420_UNORM :: Format

-- | <a>FORMAT_G16_B16_R16_3PLANE_422_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has a 16-bit G component in
--   each 16-bit word of plane 0, a 16-bit B component in each 16-bit word
--   of plane 1, and a 16-bit R component in each 16-bit word of plane 2.
--   The horizontal dimension of the R and B plane is halved relative to
--   the image dimensions, and each R and B value is shared with the G
--   components for which (leftlfloor i_G times 0.5 rightrfloor = i_B =
--   i_R). The location of each plane when this image is in linear layout
--   can be determined via <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane. Images in this format
--   <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G16_B16_R16_3PLANE_422_UNORM :: Format

-- | <a>FORMAT_G16_B16R16_2PLANE_422_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has a 16-bit G component in
--   each 16-bit word of plane 0, and a two-component, 32-bit BR plane 1
--   consisting of a 16-bit B component in the word in bytes 0..1, and a
--   16-bit R component in the word in bytes 2..3. The horizontal
--   dimensions of the BR plane is halved relative to the image dimensions,
--   and each R and B value is shared with the G components for which
--   (leftlfloor i_G times 0.5 rightrfloor = i_B = i_R). The location of
--   each plane when this image is in linear layout can be determined via
--   <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane, and
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the BR plane. Images in this
--   format <i>must</i> be defined with a width that is a multiple of two.
pattern FORMAT_G16_B16R16_2PLANE_422_UNORM :: Format

-- | <a>FORMAT_G16_B16_R16_3PLANE_444_UNORM</a> specifies an unsigned
--   normalized <i>multi-planar format</i> that has a 16-bit G component in
--   each 16-bit word of plane 0, a 16-bit B component in each 16-bit word
--   of plane 1, and a 16-bit R component in each 16-bit word of plane 2.
--   Each plane has the same dimensions and each R, G and B component
--   contributes to a single texel. The location of each plane when this
--   image is in linear layout can be determined via
--   <a>getImageSubresourceLayout</a>, using
--   <a>IMAGE_ASPECT_PLANE_0_BIT</a> for the G plane,
--   <a>IMAGE_ASPECT_PLANE_1_BIT</a> for the B plane, and
--   <a>IMAGE_ASPECT_PLANE_2_BIT</a> for the R plane.
pattern FORMAT_G16_B16_R16_3PLANE_444_UNORM :: Format

-- | <a>FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes an 8×4 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG :: Format

-- | <a>FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG :: Format

-- | <a>FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes an 8×4 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG :: Format

-- | <a>FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG :: Format

-- | <a>FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes an 8×4 rectangle of unsigned normalized RGBA texel data with
--   sRGB nonlinear encoding applied to the RGB components.
pattern FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG :: Format

-- | <a>FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   sRGB nonlinear encoding applied to the RGB components.
pattern FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG :: Format

-- | <a>FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes an 8×4 rectangle of unsigned normalized RGBA texel data with
--   sRGB nonlinear encoding applied to the RGB components.
pattern FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG :: Format

-- | <a>FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG</a> specifies a four-component,
--   PVRTC compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   sRGB nonlinear encoding applied to the RGB components.
pattern FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG :: Format

-- | <a>FORMAT_ASTC_12x12_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   12×12 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_12x12_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_12x12_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   12×12 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_12x12_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_12x10_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   12×10 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_12x10_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_12x10_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   12×10 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_12x10_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x10_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×10 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_10x10_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x10_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×10 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_10x10_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x8_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×8 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_10x8_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x8_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×8 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_10x8_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x6_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×6 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_10x6_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x6_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×6 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_10x6_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x5_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×5 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_10x5_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_10x5_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   10×5 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_10x5_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_8x8_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes an
--   8×8 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_8x8_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_8x8_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes an
--   8×8 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_8x8_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_8x6_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes an
--   8×6 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_8x6_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_8x6_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes an
--   8×6 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_8x6_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_8x5_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes an
--   8×5 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_8x5_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_8x5_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes an
--   8×5 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_8x5_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_6x6_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   6×6 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_6x6_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_6x6_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   6×6 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_6x6_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_6x5_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   6×5 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_6x5_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_6x5_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   6×5 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_6x5_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_5x5_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   5×5 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_5x5_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_5x5_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   5×5 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_5x5_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_5x4_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   5×4 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_5x4_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_5x4_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   5×4 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_5x4_UNORM_BLOCK :: Format

-- | <a>FORMAT_ASTC_4x4_SRGB_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   4×4 rectangle of unsigned normalized RGBA texel data with sRGB
--   nonlinear encoding applied to the RGB components.
pattern FORMAT_ASTC_4x4_SRGB_BLOCK :: Format

-- | <a>FORMAT_ASTC_4x4_UNORM_BLOCK</a> specifies a four-component, ASTC
--   compressed format where each 128-bit compressed texel block encodes a
--   4×4 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_ASTC_4x4_UNORM_BLOCK :: Format

-- | <a>FORMAT_EAC_R11G11_SNORM_BLOCK</a> specifies a two-component, ETC2
--   compressed format where each 128-bit compressed texel block encodes a
--   4×4 rectangle of signed normalized RG texel data with the first 64
--   bits encoding red values followed by 64 bits encoding green values.
pattern FORMAT_EAC_R11G11_SNORM_BLOCK :: Format

-- | <a>FORMAT_EAC_R11G11_UNORM_BLOCK</a> specifies a two-component, ETC2
--   compressed format where each 128-bit compressed texel block encodes a
--   4×4 rectangle of unsigned normalized RG texel data with the first 64
--   bits encoding red values followed by 64 bits encoding green values.
pattern FORMAT_EAC_R11G11_UNORM_BLOCK :: Format

-- | <a>FORMAT_EAC_R11_SNORM_BLOCK</a> specifies a one-component, ETC2
--   compressed format where each 64-bit compressed texel block encodes a
--   4×4 rectangle of signed normalized red texel data.
pattern FORMAT_EAC_R11_SNORM_BLOCK :: Format

-- | <a>FORMAT_EAC_R11_UNORM_BLOCK</a> specifies a one-component, ETC2
--   compressed format where each 64-bit compressed texel block encodes a
--   4×4 rectangle of unsigned normalized red texel data.
pattern FORMAT_EAC_R11_UNORM_BLOCK :: Format

-- | <a>FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK</a> specifies a four-component,
--   ETC2 compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   the first 64 bits encoding alpha values followed by 64 bits encoding
--   RGB values with sRGB nonlinear encoding applied.
pattern FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK :: Format

-- | <a>FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK</a> specifies a four-component,
--   ETC2 compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   the first 64 bits encoding alpha values followed by 64 bits encoding
--   RGB values.
pattern FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK :: Format

-- | <a>FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK</a> specifies a four-component,
--   ETC2 compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGB texel data with
--   sRGB nonlinear encoding, and provides 1 bit of alpha.
pattern FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK :: Format

-- | <a>FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK</a> specifies a four-component,
--   ETC2 compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGB texel data, and
--   provides 1 bit of alpha.
pattern FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK :: Format

-- | <a>FORMAT_ETC2_R8G8B8_SRGB_BLOCK</a> specifies a three-component, ETC2
--   compressed format where each 64-bit compressed texel block encodes a
--   4×4 rectangle of unsigned normalized RGB texel data with sRGB
--   nonlinear encoding. This format has no alpha and is considered opaque.
pattern FORMAT_ETC2_R8G8B8_SRGB_BLOCK :: Format

-- | <a>FORMAT_ETC2_R8G8B8_UNORM_BLOCK</a> specifies a three-component,
--   ETC2 compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGB texel data. This
--   format has no alpha and is considered opaque.
pattern FORMAT_ETC2_R8G8B8_UNORM_BLOCK :: Format

-- | <a>FORMAT_BC7_SRGB_BLOCK</a> specifies a four-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   sRGB nonlinear encoding applied to the RGB components.
pattern FORMAT_BC7_SRGB_BLOCK :: Format

-- | <a>FORMAT_BC7_UNORM_BLOCK</a> specifies a four-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data.
pattern FORMAT_BC7_UNORM_BLOCK :: Format

-- | <a>FORMAT_BC6H_SFLOAT_BLOCK</a> specifies a three-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of signed floating-point RGB texel data.
pattern FORMAT_BC6H_SFLOAT_BLOCK :: Format

-- | <a>FORMAT_BC6H_UFLOAT_BLOCK</a> specifies a three-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned floating-point RGB texel data.
pattern FORMAT_BC6H_UFLOAT_BLOCK :: Format

-- | <a>FORMAT_BC5_SNORM_BLOCK</a> specifies a two-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of signed normalized RG texel data with the
--   first 64 bits encoding red values followed by 64 bits encoding green
--   values.
pattern FORMAT_BC5_SNORM_BLOCK :: Format

-- | <a>FORMAT_BC5_UNORM_BLOCK</a> specifies a two-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RG texel data with the
--   first 64 bits encoding red values followed by 64 bits encoding green
--   values.
pattern FORMAT_BC5_UNORM_BLOCK :: Format

-- | <a>FORMAT_BC4_SNORM_BLOCK</a> specifies a one-component,
--   block-compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of signed normalized red texel data.
pattern FORMAT_BC4_SNORM_BLOCK :: Format

-- | <a>FORMAT_BC4_UNORM_BLOCK</a> specifies a one-component,
--   block-compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized red texel data.
pattern FORMAT_BC4_UNORM_BLOCK :: Format

-- | <a>FORMAT_BC3_SRGB_BLOCK</a> specifies a four-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   the first 64 bits encoding alpha values followed by 64 bits encoding
--   RGB values with sRGB nonlinear encoding.
pattern FORMAT_BC3_SRGB_BLOCK :: Format

-- | <a>FORMAT_BC3_UNORM_BLOCK</a> specifies a four-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   the first 64 bits encoding alpha values followed by 64 bits encoding
--   RGB values.
pattern FORMAT_BC3_UNORM_BLOCK :: Format

-- | <a>FORMAT_BC2_SRGB_BLOCK</a> specifies a four-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   the first 64 bits encoding alpha values followed by 64 bits encoding
--   RGB values with sRGB nonlinear encoding.
pattern FORMAT_BC2_SRGB_BLOCK :: Format

-- | <a>FORMAT_BC2_UNORM_BLOCK</a> specifies a four-component,
--   block-compressed format where each 128-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGBA texel data with
--   the first 64 bits encoding alpha values followed by 64 bits encoding
--   RGB values.
pattern FORMAT_BC2_UNORM_BLOCK :: Format

-- | <a>FORMAT_BC1_RGBA_SRGB_BLOCK</a> specifies a four-component,
--   block-compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGB texel data with
--   sRGB nonlinear encoding, and provides 1 bit of alpha.
pattern FORMAT_BC1_RGBA_SRGB_BLOCK :: Format

-- | <a>FORMAT_BC1_RGBA_UNORM_BLOCK</a> specifies a four-component,
--   block-compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGB texel data, and
--   provides 1 bit of alpha.
pattern FORMAT_BC1_RGBA_UNORM_BLOCK :: Format

-- | <a>FORMAT_BC1_RGB_SRGB_BLOCK</a> specifies a three-component,
--   block-compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGB texel data with
--   sRGB nonlinear encoding. This format has no alpha and is considered
--   opaque.
pattern FORMAT_BC1_RGB_SRGB_BLOCK :: Format

-- | <a>FORMAT_BC1_RGB_UNORM_BLOCK</a> specifies a three-component,
--   block-compressed format where each 64-bit compressed texel block
--   encodes a 4×4 rectangle of unsigned normalized RGB texel data. This
--   format has no alpha and is considered opaque.
pattern FORMAT_BC1_RGB_UNORM_BLOCK :: Format

-- | <a>FORMAT_B10G11R11_UFLOAT_PACK32</a> specifies a three-component,
--   32-bit packed unsigned floating-point format that has a 10-bit B
--   component in bits 22..31, an 11-bit G component in bits 11..21, an
--   11-bit R component in bits 0..10. See
--   <a>https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fundamentals-fp10</a>
--   and
--   <a>https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#fundamentals-fp11</a>.
pattern FORMAT_B10G11R11_UFLOAT_PACK32 :: Format

-- | <a>FORMAT_R64G64B64A64_SFLOAT</a> specifies a four-component, 256-bit
--   signed floating-point format that has a 64-bit R component in bytes
--   0..7, a 64-bit G component in bytes 8..15, a 64-bit B component in
--   bytes 16..23, and a 64-bit A component in bytes 24..31.
pattern FORMAT_R64G64B64A64_SFLOAT :: Format

-- | <a>FORMAT_R64G64B64A64_SINT</a> specifies a four-component, 256-bit
--   signed integer format that has a 64-bit R component in bytes 0..7, a
--   64-bit G component in bytes 8..15, a 64-bit B component in bytes
--   16..23, and a 64-bit A component in bytes 24..31.
pattern FORMAT_R64G64B64A64_SINT :: Format

-- | <a>FORMAT_R64G64B64A64_UINT</a> specifies a four-component, 256-bit
--   unsigned integer format that has a 64-bit R component in bytes 0..7, a
--   64-bit G component in bytes 8..15, a 64-bit B component in bytes
--   16..23, and a 64-bit A component in bytes 24..31.
pattern FORMAT_R64G64B64A64_UINT :: Format

-- | <a>FORMAT_R64G64B64_SFLOAT</a> specifies a three-component, 192-bit
--   signed floating-point format that has a 64-bit R component in bytes
--   0..7, a 64-bit G component in bytes 8..15, and a 64-bit B component in
--   bytes 16..23.
pattern FORMAT_R64G64B64_SFLOAT :: Format

-- | <a>FORMAT_R64G64B64_SINT</a> specifies a three-component, 192-bit
--   signed integer format that has a 64-bit R component in bytes 0..7, a
--   64-bit G component in bytes 8..15, and a 64-bit B component in bytes
--   16..23.
pattern FORMAT_R64G64B64_SINT :: Format

-- | <a>FORMAT_R64G64B64_UINT</a> specifies a three-component, 192-bit
--   unsigned integer format that has a 64-bit R component in bytes 0..7, a
--   64-bit G component in bytes 8..15, and a 64-bit B component in bytes
--   16..23.
pattern FORMAT_R64G64B64_UINT :: Format

-- | <a>FORMAT_R64G64_SFLOAT</a> specifies a two-component, 128-bit signed
--   floating-point format that has a 64-bit R component in bytes 0..7, and
--   a 64-bit G component in bytes 8..15.
pattern FORMAT_R64G64_SFLOAT :: Format

-- | <a>FORMAT_R64G64_SINT</a> specifies a two-component, 128-bit signed
--   integer format that has a 64-bit R component in bytes 0..7, and a
--   64-bit G component in bytes 8..15.
pattern FORMAT_R64G64_SINT :: Format

-- | <a>FORMAT_R64G64_UINT</a> specifies a two-component, 128-bit unsigned
--   integer format that has a 64-bit R component in bytes 0..7, and a
--   64-bit G component in bytes 8..15.
pattern FORMAT_R64G64_UINT :: Format

-- | <a>FORMAT_R64_SFLOAT</a> specifies a one-component, 64-bit signed
--   floating-point format that has a single 64-bit R component.
pattern FORMAT_R64_SFLOAT :: Format

-- | <a>FORMAT_R64_SINT</a> specifies a one-component, 64-bit signed
--   integer format that has a single 64-bit R component.
pattern FORMAT_R64_SINT :: Format

-- | <a>FORMAT_R64_UINT</a> specifies a one-component, 64-bit unsigned
--   integer format that has a single 64-bit R component.
pattern FORMAT_R64_UINT :: Format

-- | <a>FORMAT_R32G32B32A32_SFLOAT</a> specifies a four-component, 128-bit
--   signed floating-point format that has a 32-bit R component in bytes
--   0..3, a 32-bit G component in bytes 4..7, a 32-bit B component in
--   bytes 8..11, and a 32-bit A component in bytes 12..15.
pattern FORMAT_R32G32B32A32_SFLOAT :: Format

-- | <a>FORMAT_R32G32B32A32_SINT</a> specifies a four-component, 128-bit
--   signed integer format that has a 32-bit R component in bytes 0..3, a
--   32-bit G component in bytes 4..7, a 32-bit B component in bytes 8..11,
--   and a 32-bit A component in bytes 12..15.
pattern FORMAT_R32G32B32A32_SINT :: Format

-- | <a>FORMAT_R32G32B32A32_UINT</a> specifies a four-component, 128-bit
--   unsigned integer format that has a 32-bit R component in bytes 0..3, a
--   32-bit G component in bytes 4..7, a 32-bit B component in bytes 8..11,
--   and a 32-bit A component in bytes 12..15.
pattern FORMAT_R32G32B32A32_UINT :: Format

-- | <a>FORMAT_R32G32B32_SINT</a> specifies a three-component, 96-bit
--   signed integer format that has a 32-bit R component in bytes 0..3, a
--   32-bit G component in bytes 4..7, and a 32-bit B component in bytes
--   8..11.
pattern FORMAT_R32G32B32_SINT :: Format

-- | <a>FORMAT_R32G32B32_UINT</a> specifies a three-component, 96-bit
--   unsigned integer format that has a 32-bit R component in bytes 0..3, a
--   32-bit G component in bytes 4..7, and a 32-bit B component in bytes
--   8..11.
pattern FORMAT_R32G32B32_UINT :: Format

-- | <a>FORMAT_R32G32_SINT</a> specifies a two-component, 64-bit signed
--   integer format that has a 32-bit R component in bytes 0..3, and a
--   32-bit G component in bytes 4..7.
pattern FORMAT_R32G32_SINT :: Format

-- | <a>FORMAT_R32G32_UINT</a> specifies a two-component, 64-bit unsigned
--   integer format that has a 32-bit R component in bytes 0..3, and a
--   32-bit G component in bytes 4..7.
pattern FORMAT_R32G32_UINT :: Format

-- | <a>FORMAT_R32_SFLOAT</a> specifies a one-component, 32-bit signed
--   floating-point format that has a single 32-bit R component.
pattern FORMAT_R32_SFLOAT :: Format

-- | <a>FORMAT_R16G16B16A16_SINT</a> specifies a four-component, 64-bit
--   signed integer format that has a 16-bit R component in bytes 0..1, a
--   16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5,
--   and a 16-bit A component in bytes 6..7.
pattern FORMAT_R16G16B16A16_SINT :: Format

-- | <a>FORMAT_R16G16B16A16_UINT</a> specifies a four-component, 64-bit
--   unsigned integer format that has a 16-bit R component in bytes 0..1, a
--   16-bit G component in bytes 2..3, a 16-bit B component in bytes 4..5,
--   and a 16-bit A component in bytes 6..7.
pattern FORMAT_R16G16B16A16_UINT :: Format

-- | <a>FORMAT_R16G16B16A16_SSCALED</a> specifies a four-component, 64-bit
--   signed scaled integer format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in
--   bytes 4..5, and a 16-bit A component in bytes 6..7.
pattern FORMAT_R16G16B16A16_SSCALED :: Format

-- | <a>FORMAT_R16G16B16A16_USCALED</a> specifies a four-component, 64-bit
--   unsigned scaled integer format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in
--   bytes 4..5, and a 16-bit A component in bytes 6..7.
pattern FORMAT_R16G16B16A16_USCALED :: Format

-- | <a>FORMAT_R16G16B16A16_SNORM</a> specifies a four-component, 64-bit
--   signed normalized format that has a 16-bit R component in bytes 0..1,
--   a 16-bit G component in bytes 2..3, a 16-bit B component in bytes
--   4..5, and a 16-bit A component in bytes 6..7.
pattern FORMAT_R16G16B16A16_SNORM :: Format

-- | <a>FORMAT_R16G16B16A16_UNORM</a> specifies a four-component, 64-bit
--   unsigned normalized format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, a 16-bit B component in
--   bytes 4..5, and a 16-bit A component in bytes 6..7.
pattern FORMAT_R16G16B16A16_UNORM :: Format

-- | <a>FORMAT_R16G16B16_SINT</a> specifies a three-component, 48-bit
--   signed integer format that has a 16-bit R component in bytes 0..1, a
--   16-bit G component in bytes 2..3, and a 16-bit B component in bytes
--   4..5.
pattern FORMAT_R16G16B16_SINT :: Format

-- | <a>FORMAT_R16G16B16_UINT</a> specifies a three-component, 48-bit
--   unsigned integer format that has a 16-bit R component in bytes 0..1, a
--   16-bit G component in bytes 2..3, and a 16-bit B component in bytes
--   4..5.
pattern FORMAT_R16G16B16_UINT :: Format

-- | <a>FORMAT_R16G16B16_SSCALED</a> specifies a three-component, 48-bit
--   signed scaled integer format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in
--   bytes 4..5.
pattern FORMAT_R16G16B16_SSCALED :: Format

-- | <a>FORMAT_R16G16B16_USCALED</a> specifies a three-component, 48-bit
--   unsigned scaled integer format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in
--   bytes 4..5.
pattern FORMAT_R16G16B16_USCALED :: Format

-- | <a>FORMAT_R16G16B16_UNORM</a> specifies a three-component, 48-bit
--   unsigned normalized format that has a 16-bit R component in bytes
--   0..1, a 16-bit G component in bytes 2..3, and a 16-bit B component in
--   bytes 4..5.
pattern FORMAT_R16G16B16_UNORM :: Format

-- | <a>FORMAT_R16G16_SINT</a> specifies a two-component, 32-bit signed
--   integer format that has a 16-bit R component in bytes 0..1, and a
--   16-bit G component in bytes 2..3.
pattern FORMAT_R16G16_SINT :: Format

-- | <a>FORMAT_R16G16_UINT</a> specifies a two-component, 32-bit unsigned
--   integer format that has a 16-bit R component in bytes 0..1, and a
--   16-bit G component in bytes 2..3.
pattern FORMAT_R16G16_UINT :: Format

-- | <a>FORMAT_R16G16_SSCALED</a> specifies a two-component, 32-bit signed
--   scaled integer format that has a 16-bit R component in bytes 0..1, and
--   a 16-bit G component in bytes 2..3.
pattern FORMAT_R16G16_SSCALED :: Format

-- | <a>FORMAT_R16G16_USCALED</a> specifies a two-component, 32-bit
--   unsigned scaled integer format that has a 16-bit R component in bytes
--   0..1, and a 16-bit G component in bytes 2..3.
pattern FORMAT_R16G16_USCALED :: Format

-- | <a>FORMAT_R16G16_UNORM</a> specifies a two-component, 32-bit unsigned
--   normalized format that has a 16-bit R component in bytes 0..1, and a
--   16-bit G component in bytes 2..3.
pattern FORMAT_R16G16_UNORM :: Format

-- | <a>FORMAT_R16_SFLOAT</a> specifies a one-component, 16-bit signed
--   floating-point format that has a single 16-bit R component.
pattern FORMAT_R16_SFLOAT :: Format

-- | <a>FORMAT_R16_SSCALED</a> specifies a one-component, 16-bit signed
--   scaled integer format that has a single 16-bit R component.
pattern FORMAT_R16_SSCALED :: Format

-- | <a>FORMAT_R16_USCALED</a> specifies a one-component, 16-bit unsigned
--   scaled integer format that has a single 16-bit R component.
pattern FORMAT_R16_USCALED :: Format

-- | <a>FORMAT_R16_SNORM</a> specifies a one-component, 16-bit signed
--   normalized format that has a single 16-bit R component.
pattern FORMAT_R16_SNORM :: Format

-- | <a>FORMAT_R16_UNORM</a> specifies a one-component, 16-bit unsigned
--   normalized format that has a single 16-bit R component.
pattern FORMAT_R16_UNORM :: Format

-- | <a>FORMAT_A2B10G10R10_SINT_PACK32</a> specifies a four-component,
--   32-bit packed signed integer format that has a 2-bit A component in
--   bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component
--   in bits 10..19, and a 10-bit R component in bits 0..9.
pattern FORMAT_A2B10G10R10_SINT_PACK32 :: Format

-- | <a>FORMAT_A2B10G10R10_UINT_PACK32</a> specifies a four-component,
--   32-bit packed unsigned integer format that has a 2-bit A component in
--   bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component
--   in bits 10..19, and a 10-bit R component in bits 0..9.
pattern FORMAT_A2B10G10R10_UINT_PACK32 :: Format

-- | <a>FORMAT_A2B10G10R10_SSCALED_PACK32</a> specifies a four-component,
--   32-bit packed signed scaled integer format that has a 2-bit A
--   component in bits 30..31, a 10-bit B component in bits 20..29, a
--   10-bit G component in bits 10..19, and a 10-bit R component in bits
--   0..9.
pattern FORMAT_A2B10G10R10_SSCALED_PACK32 :: Format

-- | <a>FORMAT_A2B10G10R10_USCALED_PACK32</a> specifies a four-component,
--   32-bit packed unsigned scaled integer format that has a 2-bit A
--   component in bits 30..31, a 10-bit B component in bits 20..29, a
--   10-bit G component in bits 10..19, and a 10-bit R component in bits
--   0..9.
pattern FORMAT_A2B10G10R10_USCALED_PACK32 :: Format

-- | <a>FORMAT_A2B10G10R10_SNORM_PACK32</a> specifies a four-component,
--   32-bit packed signed normalized format that has a 2-bit A component in
--   bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G component
--   in bits 10..19, and a 10-bit R component in bits 0..9.
pattern FORMAT_A2B10G10R10_SNORM_PACK32 :: Format

-- | <a>FORMAT_A2B10G10R10_UNORM_PACK32</a> specifies a four-component,
--   32-bit packed unsigned normalized format that has a 2-bit A component
--   in bits 30..31, a 10-bit B component in bits 20..29, a 10-bit G
--   component in bits 10..19, and a 10-bit R component in bits 0..9.
pattern FORMAT_A2B10G10R10_UNORM_PACK32 :: Format

-- | <a>FORMAT_A2R10G10B10_SINT_PACK32</a> specifies a four-component,
--   32-bit packed signed integer format that has a 2-bit A component in
--   bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component
--   in bits 10..19, and a 10-bit B component in bits 0..9.
pattern FORMAT_A2R10G10B10_SINT_PACK32 :: Format

-- | <a>FORMAT_A2R10G10B10_UINT_PACK32</a> specifies a four-component,
--   32-bit packed unsigned integer format that has a 2-bit A component in
--   bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component
--   in bits 10..19, and a 10-bit B component in bits 0..9.
pattern FORMAT_A2R10G10B10_UINT_PACK32 :: Format

-- | <a>FORMAT_A2R10G10B10_SSCALED_PACK32</a> specifies a four-component,
--   32-bit packed signed scaled integer format that has a 2-bit A
--   component in bits 30..31, a 10-bit R component in bits 20..29, a
--   10-bit G component in bits 10..19, and a 10-bit B component in bits
--   0..9.
pattern FORMAT_A2R10G10B10_SSCALED_PACK32 :: Format

-- | <a>FORMAT_A2R10G10B10_USCALED_PACK32</a> specifies a four-component,
--   32-bit packed unsigned scaled integer format that has a 2-bit A
--   component in bits 30..31, a 10-bit R component in bits 20..29, a
--   10-bit G component in bits 10..19, and a 10-bit B component in bits
--   0..9.
pattern FORMAT_A2R10G10B10_USCALED_PACK32 :: Format

-- | <a>FORMAT_A2R10G10B10_SNORM_PACK32</a> specifies a four-component,
--   32-bit packed signed normalized format that has a 2-bit A component in
--   bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G component
--   in bits 10..19, and a 10-bit B component in bits 0..9.
pattern FORMAT_A2R10G10B10_SNORM_PACK32 :: Format

-- | <a>FORMAT_A2R10G10B10_UNORM_PACK32</a> specifies a four-component,
--   32-bit packed unsigned normalized format that has a 2-bit A component
--   in bits 30..31, a 10-bit R component in bits 20..29, a 10-bit G
--   component in bits 10..19, and a 10-bit B component in bits 0..9.
pattern FORMAT_A2R10G10B10_UNORM_PACK32 :: Format

-- | <a>FORMAT_A8B8G8R8_SRGB_PACK32</a> specifies a four-component, 32-bit
--   packed unsigned normalized format that has an 8-bit A component in
--   bits 24..31, an 8-bit B component stored with sRGB nonlinear encoding
--   in bits 16..23, an 8-bit G component stored with sRGB nonlinear
--   encoding in bits 8..15, and an 8-bit R component stored with sRGB
--   nonlinear encoding in bits 0..7.
pattern FORMAT_A8B8G8R8_SRGB_PACK32 :: Format

-- | <a>FORMAT_A8B8G8R8_SINT_PACK32</a> specifies a four-component, 32-bit
--   packed signed integer format that has an 8-bit A component in bits
--   24..31, an 8-bit B component in bits 16..23, an 8-bit G component in
--   bits 8..15, and an 8-bit R component in bits 0..7.
pattern FORMAT_A8B8G8R8_SINT_PACK32 :: Format

-- | <a>FORMAT_A8B8G8R8_UINT_PACK32</a> specifies a four-component, 32-bit
--   packed unsigned integer format that has an 8-bit A component in bits
--   24..31, an 8-bit B component in bits 16..23, an 8-bit G component in
--   bits 8..15, and an 8-bit R component in bits 0..7.
pattern FORMAT_A8B8G8R8_UINT_PACK32 :: Format

-- | <a>FORMAT_A8B8G8R8_SSCALED_PACK32</a> specifies a four-component,
--   32-bit packed signed scaled integer format that has an 8-bit A
--   component in bits 24..31, an 8-bit B component in bits 16..23, an
--   8-bit G component in bits 8..15, and an 8-bit R component in bits
--   0..7.
pattern FORMAT_A8B8G8R8_SSCALED_PACK32 :: Format

-- | <a>FORMAT_A8B8G8R8_USCALED_PACK32</a> specifies a four-component,
--   32-bit packed unsigned scaled integer format that has an 8-bit A
--   component in bits 24..31, an 8-bit B component in bits 16..23, an
--   8-bit G component in bits 8..15, and an 8-bit R component in bits
--   0..7.
pattern FORMAT_A8B8G8R8_USCALED_PACK32 :: Format

-- | <a>FORMAT_A8B8G8R8_SNORM_PACK32</a> specifies a four-component, 32-bit
--   packed signed normalized format that has an 8-bit A component in bits
--   24..31, an 8-bit B component in bits 16..23, an 8-bit G component in
--   bits 8..15, and an 8-bit R component in bits 0..7.
pattern FORMAT_A8B8G8R8_SNORM_PACK32 :: Format

-- | <a>FORMAT_A8B8G8R8_UNORM_PACK32</a> specifies a four-component, 32-bit
--   packed unsigned normalized format that has an 8-bit A component in
--   bits 24..31, an 8-bit B component in bits 16..23, an 8-bit G component
--   in bits 8..15, and an 8-bit R component in bits 0..7.
pattern FORMAT_A8B8G8R8_UNORM_PACK32 :: Format

-- | <a>FORMAT_B8G8R8A8_SRGB</a> specifies a four-component, 32-bit
--   unsigned normalized format that has an 8-bit B component stored with
--   sRGB nonlinear encoding in byte 0, an 8-bit G component stored with
--   sRGB nonlinear encoding in byte 1, an 8-bit R component stored with
--   sRGB nonlinear encoding in byte 2, and an 8-bit A component in byte 3.
pattern FORMAT_B8G8R8A8_SRGB :: Format

-- | <a>FORMAT_B8G8R8A8_SINT</a> specifies a four-component, 32-bit signed
--   integer format that has an 8-bit B component in byte 0, an 8-bit G
--   component in byte 1, an 8-bit R component in byte 2, and an 8-bit A
--   component in byte 3.
pattern FORMAT_B8G8R8A8_SINT :: Format

-- | <a>FORMAT_B8G8R8A8_UINT</a> specifies a four-component, 32-bit
--   unsigned integer format that has an 8-bit B component in byte 0, an
--   8-bit G component in byte 1, an 8-bit R component in byte 2, and an
--   8-bit A component in byte 3.
pattern FORMAT_B8G8R8A8_UINT :: Format

-- | <a>FORMAT_B8G8R8A8_SSCALED</a> specifies a four-component, 32-bit
--   signed scaled format that has an 8-bit B component in byte 0, an 8-bit
--   G component in byte 1, an 8-bit R component in byte 2, and an 8-bit A
--   component in byte 3.
pattern FORMAT_B8G8R8A8_SSCALED :: Format

-- | <a>FORMAT_B8G8R8A8_USCALED</a> specifies a four-component, 32-bit
--   unsigned scaled format that has an 8-bit B component in byte 0, an
--   8-bit G component in byte 1, an 8-bit R component in byte 2, and an
--   8-bit A component in byte 3.
pattern FORMAT_B8G8R8A8_USCALED :: Format

-- | <a>FORMAT_B8G8R8A8_SNORM</a> specifies a four-component, 32-bit signed
--   normalized format that has an 8-bit B component in byte 0, an 8-bit G
--   component in byte 1, an 8-bit R component in byte 2, and an 8-bit A
--   component in byte 3.
pattern FORMAT_B8G8R8A8_SNORM :: Format

-- | <a>FORMAT_B8G8R8A8_UNORM</a> specifies a four-component, 32-bit
--   unsigned normalized format that has an 8-bit B component in byte 0, an
--   8-bit G component in byte 1, an 8-bit R component in byte 2, and an
--   8-bit A component in byte 3.
pattern FORMAT_B8G8R8A8_UNORM :: Format

-- | <a>FORMAT_R8G8B8A8_SRGB</a> specifies a four-component, 32-bit
--   unsigned normalized format that has an 8-bit R component stored with
--   sRGB nonlinear encoding in byte 0, an 8-bit G component stored with
--   sRGB nonlinear encoding in byte 1, an 8-bit B component stored with
--   sRGB nonlinear encoding in byte 2, and an 8-bit A component in byte 3.
pattern FORMAT_R8G8B8A8_SRGB :: Format

-- | <a>FORMAT_R8G8B8A8_SINT</a> specifies a four-component, 32-bit signed
--   integer format that has an 8-bit R component in byte 0, an 8-bit G
--   component in byte 1, an 8-bit B component in byte 2, and an 8-bit A
--   component in byte 3.
pattern FORMAT_R8G8B8A8_SINT :: Format

-- | <a>FORMAT_R8G8B8A8_UINT</a> specifies a four-component, 32-bit
--   unsigned integer format that has an 8-bit R component in byte 0, an
--   8-bit G component in byte 1, an 8-bit B component in byte 2, and an
--   8-bit A component in byte 3.
pattern FORMAT_R8G8B8A8_UINT :: Format

-- | <a>FORMAT_R8G8B8A8_SSCALED</a> specifies a four-component, 32-bit
--   signed scaled format that has an 8-bit R component in byte 0, an 8-bit
--   G component in byte 1, an 8-bit B component in byte 2, and an 8-bit A
--   component in byte 3.
pattern FORMAT_R8G8B8A8_SSCALED :: Format

-- | <a>FORMAT_R8G8B8A8_USCALED</a> specifies a four-component, 32-bit
--   unsigned scaled format that has an 8-bit R component in byte 0, an
--   8-bit G component in byte 1, an 8-bit B component in byte 2, and an
--   8-bit A component in byte 3.
pattern FORMAT_R8G8B8A8_USCALED :: Format

-- | <a>FORMAT_R8G8B8A8_SNORM</a> specifies a four-component, 32-bit signed
--   normalized format that has an 8-bit R component in byte 0, an 8-bit G
--   component in byte 1, an 8-bit B component in byte 2, and an 8-bit A
--   component in byte 3.
pattern FORMAT_R8G8B8A8_SNORM :: Format

-- | <a>FORMAT_B8G8R8_SRGB</a> specifies a three-component, 24-bit unsigned
--   normalized format that has an 8-bit B component stored with sRGB
--   nonlinear encoding in byte 0, an 8-bit G component stored with sRGB
--   nonlinear encoding in byte 1, and an 8-bit R component stored with
--   sRGB nonlinear encoding in byte 2.
pattern FORMAT_B8G8R8_SRGB :: Format

-- | <a>FORMAT_B8G8R8_SINT</a> specifies a three-component, 24-bit signed
--   integer format that has an 8-bit B component in byte 0, an 8-bit G
--   component in byte 1, and an 8-bit R component in byte 2.
pattern FORMAT_B8G8R8_SINT :: Format

-- | <a>FORMAT_B8G8R8_UINT</a> specifies a three-component, 24-bit unsigned
--   integer format that has an 8-bit B component in byte 0, an 8-bit G
--   component in byte 1, and an 8-bit R component in byte 2.
pattern FORMAT_B8G8R8_UINT :: Format

-- | <a>FORMAT_B8G8R8_SSCALED</a> specifies a three-component, 24-bit
--   signed scaled format that has an 8-bit B component in byte 0, an 8-bit
--   G component in byte 1, and an 8-bit R component in byte 2.
pattern FORMAT_B8G8R8_SSCALED :: Format

-- | <a>FORMAT_B8G8R8_USCALED</a> specifies a three-component, 24-bit
--   unsigned scaled format that has an 8-bit B component in byte 0, an
--   8-bit G component in byte 1, and an 8-bit R component in byte 2.
pattern FORMAT_B8G8R8_USCALED :: Format

-- | <a>FORMAT_B8G8R8_SNORM</a> specifies a three-component, 24-bit signed
--   normalized format that has an 8-bit B component in byte 0, an 8-bit G
--   component in byte 1, and an 8-bit R component in byte 2.
pattern FORMAT_B8G8R8_SNORM :: Format

-- | <a>FORMAT_B8G8R8_UNORM</a> specifies a three-component, 24-bit
--   unsigned normalized format that has an 8-bit B component in byte 0, an
--   8-bit G component in byte 1, and an 8-bit R component in byte 2.
pattern FORMAT_B8G8R8_UNORM :: Format

-- | <a>FORMAT_R8G8B8_SRGB</a> specifies a three-component, 24-bit unsigned
--   normalized format that has an 8-bit R component stored with sRGB
--   nonlinear encoding in byte 0, an 8-bit G component stored with sRGB
--   nonlinear encoding in byte 1, and an 8-bit B component stored with
--   sRGB nonlinear encoding in byte 2.
pattern FORMAT_R8G8B8_SRGB :: Format

-- | <a>FORMAT_R8G8B8_SINT</a> specifies a three-component, 24-bit signed
--   integer format that has an 8-bit R component in byte 0, an 8-bit G
--   component in byte 1, and an 8-bit B component in byte 2.
pattern FORMAT_R8G8B8_SINT :: Format

-- | <a>FORMAT_R8G8B8_UINT</a> specifies a three-component, 24-bit unsigned
--   integer format that has an 8-bit R component in byte 0, an 8-bit G
--   component in byte 1, and an 8-bit B component in byte 2.
pattern FORMAT_R8G8B8_UINT :: Format

-- | <a>FORMAT_R8G8B8_SSCALED</a> specifies a three-component, 24-bit
--   signed scaled format that has an 8-bit R component in byte 0, an 8-bit
--   G component in byte 1, and an 8-bit B component in byte 2.
pattern FORMAT_R8G8B8_SSCALED :: Format

-- | <a>FORMAT_R8G8B8_USCALED</a> specifies a three-component, 24-bit
--   unsigned scaled format that has an 8-bit R component in byte 0, an
--   8-bit G component in byte 1, and an 8-bit B component in byte 2.
pattern FORMAT_R8G8B8_USCALED :: Format

-- | <a>FORMAT_R8G8B8_SNORM</a> specifies a three-component, 24-bit signed
--   normalized format that has an 8-bit R component in byte 0, an 8-bit G
--   component in byte 1, and an 8-bit B component in byte 2.
pattern FORMAT_R8G8B8_SNORM :: Format

-- | <a>FORMAT_R8G8B8_UNORM</a> specifies a three-component, 24-bit
--   unsigned normalized format that has an 8-bit R component in byte 0, an
--   8-bit G component in byte 1, and an 8-bit B component in byte 2.
pattern FORMAT_R8G8B8_UNORM :: Format

-- | <a>FORMAT_R8G8_SRGB</a> specifies a two-component, 16-bit unsigned
--   normalized format that has an 8-bit R component stored with sRGB
--   nonlinear encoding in byte 0, and an 8-bit G component stored with
--   sRGB nonlinear encoding in byte 1.
pattern FORMAT_R8G8_SRGB :: Format

-- | <a>FORMAT_R8G8_SINT</a> specifies a two-component, 16-bit signed
--   integer format that has an 8-bit R component in byte 0, and an 8-bit G
--   component in byte 1.
pattern FORMAT_R8G8_SINT :: Format

-- | <a>FORMAT_R8G8_UINT</a> specifies a two-component, 16-bit unsigned
--   integer format that has an 8-bit R component in byte 0, and an 8-bit G
--   component in byte 1.
pattern FORMAT_R8G8_UINT :: Format

-- | <a>FORMAT_R8G8_SSCALED</a> specifies a two-component, 16-bit signed
--   scaled integer format that has an 8-bit R component in byte 0, and an
--   8-bit G component in byte 1.
pattern FORMAT_R8G8_SSCALED :: Format

-- | <a>FORMAT_R8G8_USCALED</a> specifies a two-component, 16-bit unsigned
--   scaled integer format that has an 8-bit R component in byte 0, and an
--   8-bit G component in byte 1.
pattern FORMAT_R8G8_USCALED :: Format

-- | <a>FORMAT_R8G8_SNORM</a> specifies a two-component, 16-bit signed
--   normalized format that has an 8-bit R component in byte 0, and an
--   8-bit G component in byte 1.
pattern FORMAT_R8G8_SNORM :: Format

-- | <a>FORMAT_R8_SRGB</a> specifies a one-component, 8-bit unsigned
--   normalized format that has a single 8-bit R component stored with sRGB
--   nonlinear encoding.
pattern FORMAT_R8_SRGB :: Format

-- | <a>FORMAT_R8_SSCALED</a> specifies a one-component, 8-bit signed
--   scaled integer format that has a single 8-bit R component.
pattern FORMAT_R8_SSCALED :: Format

-- | <a>FORMAT_R8_USCALED</a> specifies a one-component, 8-bit unsigned
--   scaled integer format that has a single 8-bit R component.
pattern FORMAT_R8_USCALED :: Format

-- | <a>FORMAT_R8_SNORM</a> specifies a one-component, 8-bit signed
--   normalized format that has a single 8-bit R component.
pattern FORMAT_R8_SNORM :: Format

-- | <a>FORMAT_R8_UNORM</a> specifies a one-component, 8-bit unsigned
--   normalized format that has a single 8-bit R component.
pattern FORMAT_R8_UNORM :: Format

-- | <a>FORMAT_A1R5G5B5_UNORM_PACK16</a> specifies a four-component, 16-bit
--   packed unsigned normalized format that has a 1-bit A component in bit
--   15, a 5-bit R component in bits 10..14, a 5-bit G component in bits
--   5..9, and a 5-bit B component in bits 0..4.
pattern FORMAT_A1R5G5B5_UNORM_PACK16 :: Format

-- | <a>FORMAT_R5G5B5A1_UNORM_PACK16</a> specifies a four-component, 16-bit
--   packed unsigned normalized format that has a 5-bit R component in bits
--   11..15, a 5-bit G component in bits 6..10, a 5-bit B component in bits
--   1..5, and a 1-bit A component in bit 0.
pattern FORMAT_R5G5B5A1_UNORM_PACK16 :: Format

-- | <a>FORMAT_R5G6B5_UNORM_PACK16</a> specifies a three-component, 16-bit
--   packed unsigned normalized format that has a 5-bit R component in bits
--   11..15, a 6-bit G component in bits 5..10, and a 5-bit B component in
--   bits 0..4.
pattern FORMAT_R5G6B5_UNORM_PACK16 :: Format

-- | <a>FORMAT_R4G4B4A4_UNORM_PACK16</a> specifies a four-component, 16-bit
--   packed unsigned normalized format that has a 4-bit R component in bits
--   12..15, a 4-bit G component in bits 8..11, a 4-bit B component in bits
--   4..7, and a 4-bit A component in bits 0..3.
pattern FORMAT_R4G4B4A4_UNORM_PACK16 :: Format

-- | <a>FORMAT_R4G4_UNORM_PACK8</a> specifies a two-component, 8-bit packed
--   unsigned normalized format that has a 4-bit R component in bits 4..7,
--   and a 4-bit G component in bits 0..3.
pattern FORMAT_R4G4_UNORM_PACK8 :: Format

-- | VkInstanceCreateInfo - Structure specifying parameters of a newly
--   created instance
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>sType</tt> <i>must</i> be
--   <a>STRUCTURE_TYPE_INSTANCE_CREATE_INFO</a></li>
--   </ul>
--   
--   <ul>
--   <li>Each <tt>pNext</tt> member of any structure (including this one)
--   in the <tt>pNext</tt> chain <i>must</i> be either <tt>NULL</tt> or a
--   pointer to a valid instance of
--   <a>DebugReportCallbackCreateInfoEXT</a>,
--   <a>DebugUtilsMessengerCreateInfoEXT</a>, <a>ValidationFeaturesEXT</a>,
--   or <a>ValidationFlagsEXT</a></li>
--   <li>The <tt>sType</tt> value of each struct in the <tt>pNext</tt>
--   chain <i>must</i> be unique, with the exception of structures of type
--   <a>DebugUtilsMessengerCreateInfoEXT</a></li>
--   <li><tt>flags</tt> <i>must</i> be <tt>0</tt></li>
--   <li>If <tt>pApplicationInfo</tt> is not <tt>NULL</tt>,
--   <tt>pApplicationInfo</tt> <i>must</i> be a valid pointer to a valid
--   <a>ApplicationInfo</a> structure</li>
--   <li>If <tt>enabledLayerCount</tt> is not <tt>0</tt>,
--   <tt>ppEnabledLayerNames</tt> <i>must</i> be a valid pointer to an
--   array of <tt>enabledLayerCount</tt> null-terminated UTF-8 strings</li>
--   <li>If <tt>enabledExtensionCount</tt> is not <tt>0</tt>,
--   <tt>ppEnabledExtensionNames</tt> <i>must</i> be a valid pointer to an
--   array of <tt>enabledExtensionCount</tt> null-terminated UTF-8
--   strings</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ApplicationInfo</a>, <a>InstanceCreateFlags</a>,
--   <a>StructureType</a>, <a>createInstance</a>
data InstanceCreateInfo (es :: [Type])

-- | VkDeviceCreateInfo - Structure specifying parameters of a newly
--   created device
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li>The <tt>queueFamilyIndex</tt> member of each element of
--   <tt>pQueueCreateInfos</tt> <i>must</i> be unique within
--   <tt>pQueueCreateInfos</tt>, except that two members can share the same
--   <tt>queueFamilyIndex</tt> if one is a protected-capable queue and one
--   is not a protected-capable queue</li>
--   </ul>
--   
--   <ul>
--   <li>If the <tt>pNext</tt> chain includes a
--   <a>PhysicalDeviceFeatures2</a> structure, then
--   <tt>pEnabledFeatures</tt> <i>must</i> be <tt>NULL</tt></li>
--   <li><tt>ppEnabledExtensionNames</tt> <i>must</i> not contain
--   <tt>VK_AMD_negative_viewport_height</tt></li>
--   <li><tt>ppEnabledExtensionNames</tt> <i>must</i> not contain both
--   <tt>VK_KHR_buffer_device_address</tt> and
--   <tt>VK_EXT_buffer_device_address</tt></li>
--   <li>If the <tt>pNext</tt> chain includes a
--   <a>PhysicalDeviceVulkan11Features</a> structure, then it <i>must</i>
--   not include a <a>PhysicalDevice16BitStorageFeatures</a>,
--   <a>PhysicalDeviceMultiviewFeatures</a>,
--   <a>PhysicalDeviceVariablePointersFeatures</a>,
--   <a>PhysicalDeviceProtectedMemoryFeatures</a>,
--   <a>PhysicalDeviceSamplerYcbcrConversionFeatures</a>, or
--   <a>PhysicalDeviceShaderDrawParametersFeatures</a> structure</li>
--   <li>If the <tt>pNext</tt> chain includes a
--   <a>PhysicalDeviceVulkan12Features</a> structure, then it <i>must</i>
--   not include a <a>PhysicalDevice8BitStorageFeatures</a>,
--   <a>PhysicalDeviceShaderAtomicInt64Features</a>,
--   <a>PhysicalDeviceShaderFloat16Int8Features</a>,
--   <a>PhysicalDeviceDescriptorIndexingFeatures</a>,
--   <a>PhysicalDeviceScalarBlockLayoutFeatures</a>,
--   <a>PhysicalDeviceImagelessFramebufferFeatures</a>,
--   <a>PhysicalDeviceUniformBufferStandardLayoutFeatures</a>,
--   <a>PhysicalDeviceShaderSubgroupExtendedTypesFeatures</a>,
--   <a>PhysicalDeviceSeparateDepthStencilLayoutsFeatures</a>,
--   <a>PhysicalDeviceHostQueryResetFeatures</a>,
--   <a>PhysicalDeviceTimelineSemaphoreFeatures</a>,
--   <a>PhysicalDeviceBufferDeviceAddressFeatures</a>, or
--   <a>PhysicalDeviceVulkanMemoryModelFeatures</a> structure</li>
--   <li>If <tt>ppEnabledExtensions</tt> contains
--   <tt>"VK_KHR_shader_draw_parameters"</tt> and the <tt>pNext</tt> chain
--   includes a <a>PhysicalDeviceVulkan11Features</a> structure, then
--   <a>PhysicalDeviceVulkan11Features</a>::<tt>shaderDrawParameters</tt>
--   <i>must</i> be <a>TRUE</a></li>
--   <li>If <tt>ppEnabledExtensions</tt> contains
--   <tt>"VK_KHR_draw_indirect_count"</tt> and the <tt>pNext</tt> chain
--   includes a <a>PhysicalDeviceVulkan12Features</a> structure, then
--   <a>PhysicalDeviceVulkan12Features</a>::<tt>drawIndirectCount</tt>
--   <i>must</i> be <a>TRUE</a></li>
--   <li>If <tt>ppEnabledExtensions</tt> contains
--   <tt>"VK_KHR_sampler_mirror_clamp_to_edge"</tt> and the <tt>pNext</tt>
--   chain includes a <a>PhysicalDeviceVulkan12Features</a> structure, then
--   <a>PhysicalDeviceVulkan12Features</a>::<tt>samplerMirrorClampToEdge</tt>
--   <i>must</i> be <a>TRUE</a></li>
--   <li>If <tt>ppEnabledExtensions</tt> contains
--   <tt>"VK_EXT_descriptor_indexing"</tt> and the <tt>pNext</tt> chain
--   includes a <a>PhysicalDeviceVulkan12Features</a> structure, then
--   <a>PhysicalDeviceVulkan12Features</a>::<tt>descriptorIndexing</tt>
--   <i>must</i> be <a>TRUE</a></li>
--   <li>If <tt>ppEnabledExtensions</tt> contains
--   <tt>"VK_EXT_sampler_filter_minmax"</tt> and the <tt>pNext</tt> chain
--   includes a <a>PhysicalDeviceVulkan12Features</a> structure, then
--   <a>PhysicalDeviceVulkan12Features</a>::<tt>samplerFilterMinmax</tt>
--   <i>must</i> be <a>TRUE</a></li>
--   <li>If <tt>ppEnabledExtensions</tt> contains
--   <tt>"VK_EXT_shader_viewport_index_layer"</tt> and the <tt>pNext</tt>
--   chain includes a <a>PhysicalDeviceVulkan12Features</a> structure, then
--   <a>PhysicalDeviceVulkan12Features</a>::<tt>shaderOutputViewportIndex</tt>
--   and <a>PhysicalDeviceVulkan12Features</a>::<tt>shaderOutputLayer</tt>
--   <i>must</i> both be <a>TRUE</a></li>
--   <li>If the <tt>VK_KHR_portability_subset</tt> extension is included in
--   <tt>pProperties</tt> of <a>enumerateDeviceExtensionProperties</a>,
--   <tt>ppEnabledExtensions</tt> <i>must</i> include
--   "VK_KHR_portability_subset".</li>
--   <li>If <a>shadingRateImage</a> is enabled,
--   <a>pipelineFragmentShadingRate</a> <i>must</i> not be enabled</li>
--   <li>If <a>shadingRateImage</a> is enabled,
--   <a>primitiveFragmentShadingRate</a> <i>must</i> not be enabled</li>
--   <li>If <a>shadingRateImage</a> is enabled,
--   <a>attachmentFragmentShadingRate</a> <i>must</i> not be enabled</li>
--   <li>If <a>fragmentDensityMap</a> is enabled,
--   <a>pipelineFragmentShadingRate</a> <i>must</i> not be enabled</li>
--   <li>If <a>fragmentDensityMap</a> is enabled,
--   <a>primitiveFragmentShadingRate</a> <i>must</i> not be enabled</li>
--   <li>If <a>fragmentDensityMap</a> is enabled,
--   <a>attachmentFragmentShadingRate</a> <i>must</i> not be enabled</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>sType</tt> <i>must</i> be
--   <a>STRUCTURE_TYPE_DEVICE_CREATE_INFO</a></li>
--   </ul>
--   
--   <ul>
--   <li>Each <tt>pNext</tt> member of any structure (including this one)
--   in the <tt>pNext</tt> chain <i>must</i> be either <tt>NULL</tt> or a
--   pointer to a valid instance of
--   <a>DeviceDeviceMemoryReportCreateInfoEXT</a>,
--   <a>DeviceDiagnosticsConfigCreateInfoNV</a>,
--   <a>DeviceGroupDeviceCreateInfo</a>,
--   <a>DeviceMemoryOverallocationCreateInfoAMD</a>,
--   <a>DevicePrivateDataCreateInfoEXT</a>,
--   <a>PhysicalDevice16BitStorageFeatures</a>,
--   <a>PhysicalDevice4444FormatsFeaturesEXT</a>,
--   <a>PhysicalDevice8BitStorageFeatures</a>,
--   <a>PhysicalDeviceASTCDecodeFeaturesEXT</a>,
--   <a>PhysicalDeviceAccelerationStructureFeaturesKHR</a>,
--   <a>PhysicalDeviceBlendOperationAdvancedFeaturesEXT</a>,
--   <a>PhysicalDeviceBufferDeviceAddressFeatures</a>,
--   <a>PhysicalDeviceBufferDeviceAddressFeaturesEXT</a>,
--   <a>PhysicalDeviceCoherentMemoryFeaturesAMD</a>,
--   <a>PhysicalDeviceComputeShaderDerivativesFeaturesNV</a>,
--   <a>PhysicalDeviceConditionalRenderingFeaturesEXT</a>,
--   <a>PhysicalDeviceCooperativeMatrixFeaturesNV</a>,
--   <a>PhysicalDeviceCornerSampledImageFeaturesNV</a>,
--   <a>PhysicalDeviceCoverageReductionModeFeaturesNV</a>,
--   <a>PhysicalDeviceCustomBorderColorFeaturesEXT</a>,
--   <a>PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV</a>,
--   <a>PhysicalDeviceDepthClipEnableFeaturesEXT</a>,
--   <a>PhysicalDeviceDescriptorIndexingFeatures</a>,
--   <a>PhysicalDeviceDeviceGeneratedCommandsFeaturesNV</a>,
--   <a>PhysicalDeviceDeviceMemoryReportFeaturesEXT</a>,
--   <a>PhysicalDeviceDiagnosticsConfigFeaturesNV</a>,
--   <a>PhysicalDeviceExclusiveScissorFeaturesNV</a>,
--   <a>PhysicalDeviceExtendedDynamicStateFeaturesEXT</a>,
--   <a>PhysicalDeviceFeatures2</a>,
--   <a>PhysicalDeviceFragmentDensityMap2FeaturesEXT</a>,
--   <a>PhysicalDeviceFragmentDensityMapFeaturesEXT</a>,
--   <a>PhysicalDeviceFragmentShaderBarycentricFeaturesNV</a>,
--   <a>PhysicalDeviceFragmentShaderInterlockFeaturesEXT</a>,
--   <a>PhysicalDeviceFragmentShadingRateEnumsFeaturesNV</a>,
--   <a>PhysicalDeviceFragmentShadingRateFeaturesKHR</a>,
--   <a>PhysicalDeviceHostQueryResetFeatures</a>,
--   <a>PhysicalDeviceImageRobustnessFeaturesEXT</a>,
--   <a>PhysicalDeviceImagelessFramebufferFeatures</a>,
--   <a>PhysicalDeviceIndexTypeUint8FeaturesEXT</a>,
--   <a>PhysicalDeviceInlineUniformBlockFeaturesEXT</a>,
--   <a>PhysicalDeviceLineRasterizationFeaturesEXT</a>,
--   <a>PhysicalDeviceMemoryPriorityFeaturesEXT</a>,
--   <a>PhysicalDeviceMeshShaderFeaturesNV</a>,
--   <a>PhysicalDeviceMultiviewFeatures</a>,
--   <a>PhysicalDeviceMutableDescriptorTypeFeaturesVALVE</a>,
--   <a>PhysicalDevicePerformanceQueryFeaturesKHR</a>,
--   <a>PhysicalDevicePipelineCreationCacheControlFeaturesEXT</a>,
--   <a>PhysicalDevicePipelineExecutablePropertiesFeaturesKHR</a>,
--   <a>PhysicalDevicePortabilitySubsetFeaturesKHR</a>,
--   <a>PhysicalDevicePrivateDataFeaturesEXT</a>,
--   <a>PhysicalDeviceProtectedMemoryFeatures</a>,
--   <a>PhysicalDeviceRayQueryFeaturesKHR</a>,
--   <a>PhysicalDeviceRayTracingPipelineFeaturesKHR</a>,
--   <a>PhysicalDeviceRepresentativeFragmentTestFeaturesNV</a>,
--   <a>PhysicalDeviceRobustness2FeaturesEXT</a>,
--   <a>PhysicalDeviceSamplerYcbcrConversionFeatures</a>,
--   <a>PhysicalDeviceScalarBlockLayoutFeatures</a>,
--   <a>PhysicalDeviceSeparateDepthStencilLayoutsFeatures</a>,
--   <a>PhysicalDeviceShaderAtomicFloatFeaturesEXT</a>,
--   <a>PhysicalDeviceShaderAtomicInt64Features</a>,
--   <a>PhysicalDeviceShaderClockFeaturesKHR</a>,
--   <a>PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT</a>,
--   <a>PhysicalDeviceShaderDrawParametersFeatures</a>,
--   <a>PhysicalDeviceShaderFloat16Int8Features</a>,
--   <a>PhysicalDeviceShaderImageAtomicInt64FeaturesEXT</a>,
--   <a>PhysicalDeviceShaderImageFootprintFeaturesNV</a>,
--   <a>PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL</a>,
--   <a>PhysicalDeviceShaderSMBuiltinsFeaturesNV</a>,
--   <a>PhysicalDeviceShaderSubgroupExtendedTypesFeatures</a>,
--   <a>PhysicalDeviceShaderTerminateInvocationFeaturesKHR</a>,
--   <a>PhysicalDeviceShadingRateImageFeaturesNV</a>,
--   <a>PhysicalDeviceSubgroupSizeControlFeaturesEXT</a>,
--   <a>PhysicalDeviceTexelBufferAlignmentFeaturesEXT</a>,
--   <a>PhysicalDeviceTextureCompressionASTCHDRFeaturesEXT</a>,
--   <a>PhysicalDeviceTimelineSemaphoreFeatures</a>,
--   <a>PhysicalDeviceTransformFeedbackFeaturesEXT</a>,
--   <a>PhysicalDeviceUniformBufferStandardLayoutFeatures</a>,
--   <a>PhysicalDeviceVariablePointersFeatures</a>,
--   <a>PhysicalDeviceVertexAttributeDivisorFeaturesEXT</a>,
--   <a>PhysicalDeviceVulkan11Features</a>,
--   <a>PhysicalDeviceVulkan12Features</a>,
--   <a>PhysicalDeviceVulkanMemoryModelFeatures</a>, or
--   <a>PhysicalDeviceYcbcrImageArraysFeaturesEXT</a></li>
--   <li>The <tt>sType</tt> value of each struct in the <tt>pNext</tt>
--   chain <i>must</i> be unique, with the exception of structures of type
--   <a>DeviceDeviceMemoryReportCreateInfoEXT</a> or
--   <a>DevicePrivateDataCreateInfoEXT</a></li>
--   <li><tt>flags</tt> <i>must</i> be <tt>0</tt></li>
--   <li><tt>pQueueCreateInfos</tt> <i>must</i> be a valid pointer to an
--   array of <tt>queueCreateInfoCount</tt> valid
--   <a>DeviceQueueCreateInfo</a> structures</li>
--   <li>If <tt>enabledLayerCount</tt> is not <tt>0</tt>,
--   <tt>ppEnabledLayerNames</tt> <i>must</i> be a valid pointer to an
--   array of <tt>enabledLayerCount</tt> null-terminated UTF-8 strings</li>
--   <li>If <tt>enabledExtensionCount</tt> is not <tt>0</tt>,
--   <tt>ppEnabledExtensionNames</tt> <i>must</i> be a valid pointer to an
--   array of <tt>enabledExtensionCount</tt> null-terminated UTF-8
--   strings</li>
--   <li>If <tt>pEnabledFeatures</tt> is not <tt>NULL</tt>,
--   <tt>pEnabledFeatures</tt> <i>must</i> be a valid pointer to a valid
--   <a>PhysicalDeviceFeatures</a> structure</li>
--   <li><tt>queueCreateInfoCount</tt> <i>must</i> be greater than
--   <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>DeviceCreateFlags</a>, <a>DeviceQueueCreateInfo</a>,
--   <a>PhysicalDeviceFeatures</a>, <a>StructureType</a>,
--   <a>createDevice</a>
data DeviceCreateInfo (es :: [Type])

-- | VkAllocationCallbacks - Structure containing callback function
--   pointers for memory allocation
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li><tt>pfnAllocation</tt> <i>must</i> be a valid pointer to a valid
--   user-defined <a>PFN_vkAllocationFunction</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>pfnReallocation</tt> <i>must</i> be a valid pointer to a valid
--   user-defined <a>PFN_vkReallocationFunction</a></li>
--   <li><tt>pfnFree</tt> <i>must</i> be a valid pointer to a valid
--   user-defined <a>PFN_vkFreeFunction</a></li>
--   <li>If either of <tt>pfnInternalAllocation</tt> or
--   <tt>pfnInternalFree</tt> is not <tt>NULL</tt>, both <i>must</i> be
--   valid callbacks</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>PFN_vkAllocationFunction</a>, <a>PFN_vkFreeFunction</a>,
--   <a>PFN_vkInternalAllocationNotification</a>,
--   <a>PFN_vkInternalFreeNotification</a>,
--   <a>PFN_vkReallocationFunction</a>, <a>allocateMemory</a>,
--   <a>createAccelerationStructureKHR</a>,
--   <a>createAccelerationStructureNV</a>, <a>createAndroidSurfaceKHR</a>,
--   <a>createBuffer</a>, <a>createBufferView</a>,
--   <a>createCommandPool</a>, <a>createComputePipelines</a>,
--   <a>createDebugReportCallbackEXT</a>,
--   <a>createDebugUtilsMessengerEXT</a>,
--   <a>createDeferredOperationKHR</a>, <a>createDescriptorPool</a>,
--   <a>createDescriptorSetLayout</a>,
--   <a>createDescriptorUpdateTemplate</a>,
--   <a>createDescriptorUpdateTemplateKHR</a>, <a>createDevice</a>,
--   <a>createDirectFBSurfaceEXT</a>, <a>createDisplayModeKHR</a>,
--   <a>createDisplayPlaneSurfaceKHR</a>, <a>createEvent</a>,
--   <a>createFence</a>, <a>createFramebuffer</a>,
--   <a>createGraphicsPipelines</a>, <a>createHeadlessSurfaceEXT</a>,
--   <a>createIOSSurfaceMVK</a>, <a>createImage</a>,
--   <a>createImagePipeSurfaceFUCHSIA</a>, <a>createImageView</a>,
--   <a>createIndirectCommandsLayoutNV</a>, <a>createInstance</a>,
--   <a>createMacOSSurfaceMVK</a>, <a>createMetalSurfaceEXT</a>,
--   <a>createPipelineCache</a>, <a>createPipelineLayout</a>,
--   <a>createPrivateDataSlotEXT</a>, <a>createQueryPool</a>,
--   <a>createRayTracingPipelinesKHR</a>,
--   <a>createRayTracingPipelinesNV</a>, <a>createRenderPass</a>,
--   <a>createRenderPass2</a>, <a>createRenderPass2KHR</a>,
--   <a>createSampler</a>, <a>createSamplerYcbcrConversion</a>,
--   <a>createSamplerYcbcrConversionKHR</a>, <a>createSemaphore</a>,
--   <a>createShaderModule</a>, <a>createSharedSwapchainsKHR</a>,
--   <a>createStreamDescriptorSurfaceGGP</a>, <a>createSwapchainKHR</a>,
--   <a>createValidationCacheEXT</a>, <a>createViSurfaceNN</a>,
--   <a>createWaylandSurfaceKHR</a>, <a>createWin32SurfaceKHR</a>,
--   <a>createXcbSurfaceKHR</a>, <a>createXlibSurfaceKHR</a>,
--   <a>destroyAccelerationStructureKHR</a>,
--   <a>destroyAccelerationStructureNV</a>, <a>destroyBuffer</a>,
--   <a>destroyBufferView</a>, <a>destroyCommandPool</a>,
--   <a>destroyDebugReportCallbackEXT</a>,
--   <a>destroyDebugUtilsMessengerEXT</a>,
--   <a>destroyDeferredOperationKHR</a>, <a>destroyDescriptorPool</a>,
--   <a>destroyDescriptorSetLayout</a>,
--   <a>destroyDescriptorUpdateTemplate</a>,
--   <a>destroyDescriptorUpdateTemplateKHR</a>, <a>destroyDevice</a>,
--   <a>destroyEvent</a>, <a>destroyFence</a>, <a>destroyFramebuffer</a>,
--   <a>destroyImage</a>, <a>destroyImageView</a>,
--   <a>destroyIndirectCommandsLayoutNV</a>, <a>destroyInstance</a>,
--   <a>destroyPipeline</a>, <a>destroyPipelineCache</a>,
--   <a>destroyPipelineLayout</a>, <a>destroyPrivateDataSlotEXT</a>,
--   <a>destroyQueryPool</a>, <a>destroyRenderPass</a>,
--   <a>destroySampler</a>, <a>destroySamplerYcbcrConversion</a>,
--   <a>destroySamplerYcbcrConversionKHR</a>, <a>destroySemaphore</a>,
--   <a>destroyShaderModule</a>, <a>destroySurfaceKHR</a>,
--   <a>destroySwapchainKHR</a>, <a>destroyValidationCacheEXT</a>,
--   <a>freeMemory</a>, <a>registerDeviceEventEXT</a>,
--   <a>registerDisplayEventEXT</a>
data AllocationCallbacks
type PFN_vkGetInstanceProcAddr = FunPtr (CString -> IO (FunPtr ()))
data SomeStruct (a :: [Type] -> Type)
[SomeStruct] :: forall (a :: [Type] -> Type) (es :: [Type]). (Extendss a es, PokeChain es, Show (Chain es)) => a es -> SomeStruct a

module OpenXR.Zero

-- | A class for initializing things with all zero data
--   
--   Any instance should satisfy the following law:
--   
--   <tt> new zero = calloc </tt> or <tt> with zero = withZeroCStruct </tt>
--   
--   i.e. Marshaling <tt>zero</tt> to memory yeilds only zero-valued bytes,
--   except for structs which require a "type" tag
class Zero a
zero :: Zero a => a

module OpenXR.Version
pattern CURRENT_API_VERSION :: Version
pattern MAKE_VERSION :: Word16 -> Word16 -> Word32 -> Version
_VERSION_MAJOR :: Version -> Word16
_VERSION_MINOR :: Version -> Word16
_VERSION_PATCH :: Version -> Word32

-- | XrVersion - Type indicating multi-part version packed into 64-bit
--   integer
--   
--   <h1>Description</h1>
--   
--   In each such use, the API major version number, minor version number,
--   and patch version number are packed into a 64-bit integer, referred to
--   as
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>,
--   as follows:
--   
--   <h2>Version Numbers</h2>
--   
--   <ul>
--   <li>The major version number is a 16-bit integer packed into bits
--   63-48.</li>
--   </ul>
--   
--   <ul>
--   <li>The minor version number is a 16-bit integer packed into bits
--   47-32.</li>
--   <li>The patch version number is a 32-bit integer packed into bits
--   31-0.</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ApiLayerProperties</a>, <a>ApplicationInfo</a>,
--   <a>GraphicsRequirementsOpenGLESKHR</a>,
--   <a>GraphicsRequirementsOpenGLKHR</a>,
--   <a>GraphicsRequirementsVulkanKHR</a>, <a>InstanceProperties</a>
newtype Version
Version :: Word64 -> Version
[$sel:unVersion:Version] :: Version -> Word64
instance Vulkan.Zero.Zero OpenXR.Version.Version
instance Foreign.Storable.Storable OpenXR.Version.Version
instance GHC.Read.Read OpenXR.Version.Version
instance GHC.Show.Show OpenXR.Version.Version
instance GHC.Classes.Ord OpenXR.Version.Version
instance GHC.Classes.Eq OpenXR.Version.Version

module OpenXR.Core10.FundamentalTypes
boolToBool32 :: Bool -> Bool32
bool32ToBool :: Bool32 -> Bool

-- | XrOffset2Df - Float offset in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure is used for component values that may be fractional
--   (floating-point). If used to represent physical distances, values
--   <i>must</i> be in meters.
--   
--   <h1>See Also</h1>
--   
--   <a>Extent2Df</a>, <a>Rect2Df</a>
data Offset2Df
Offset2Df :: Float -> Float -> Offset2Df

-- | <tt>x</tt> the floating-point offset in the x direction.
[$sel:x:Offset2Df] :: Offset2Df -> Float

-- | <tt>y</tt> the floating-point offset in the y direction.
[$sel:y:Offset2Df] :: Offset2Df -> Float

-- | XrExtent2Df - Extent in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure is used for component values that may be fractional
--   (floating-point). If used to represent physical distances, values
--   <i>must</i> be in meters.
--   
--   The <tt>width</tt> and <tt>height</tt> value <i>must</i> be
--   non-negative.
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerQuad</a>, <a>Offset2Df</a>, <a>Rect2Df</a>,
--   <a>getReferenceSpaceBoundsRect</a>
data Extent2Df
Extent2Df :: Float -> Float -> Extent2Df

-- | <tt>width</tt> the floating-point width of the extent.
[$sel:width:Extent2Df] :: Extent2Df -> Float

-- | <tt>height</tt> the floating-point height of the extent.
[$sel:height:Extent2Df] :: Extent2Df -> Float

-- | XrRect2Df - Rect in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure is used for component values that may be fractional
--   (floating-point).
--   
--   <h1>See Also</h1>
--   
--   <a>Extent2Df</a>, <a>Offset2Df</a>
data Rect2Df
Rect2Df :: Offset2Df -> Extent2Df -> Rect2Df

-- | <tt>offset</tt> is the <a>Offset2Df</a> specifying the rectangle
--   offset.
[$sel:offset:Rect2Df] :: Rect2Df -> Offset2Df

-- | <tt>extent</tt> is the <a>Extent2Df</a> specifying the rectangle
--   extent.
[$sel:extent:Rect2Df] :: Rect2Df -> Extent2Df

-- | XrOffset2Di - Offset in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This variant is for representing discrete values such as texels. For
--   representing physical distances, the floating-point variant
--   <i>must</i> be used instead.
--   
--   <h1>See Also</h1>
--   
--   <a>Extent2Di</a>, <a>Rect2Di</a>
data Offset2Di
Offset2Di :: Int32 -> Int32 -> Offset2Di

-- | <tt>x</tt> the integer offset in the x direction.
[$sel:x:Offset2Di] :: Offset2Di -> Int32

-- | <tt>y</tt> the integer offset in the y direction.
[$sel:y:Offset2Di] :: Offset2Di -> Int32

-- | XrExtent2Di - Extent in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This variant is for representing discrete values such as texels. For
--   representing physical distances, the floating-point variant
--   <i>must</i> be used instead.
--   
--   The <tt>width</tt> and <tt>height</tt> value <i>must</i> be
--   non-negative.
--   
--   <h1>See Also</h1>
--   
--   <a>Offset2Di</a>, <a>Rect2Di</a>
data Extent2Di
Extent2Di :: Int32 -> Int32 -> Extent2Di

-- | <tt>width</tt> the integer width of the extent.
[$sel:width:Extent2Di] :: Extent2Di -> Int32

-- | <tt>height</tt> the integer height of the extent.
[$sel:height:Extent2Di] :: Extent2Di -> Int32

-- | XrRect2Di - Rect in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This variant is for representing discrete values such as texels. For
--   representing physical distances, the floating-point variant
--   <i>must</i> be used instead.
--   
--   <h1>See Also</h1>
--   
--   <a>Extent2Di</a>, <a>Offset2Di</a>, <a>SwapchainSubImage</a>
data Rect2Di
Rect2Di :: Offset2Di -> Extent2Di -> Rect2Di

-- | <tt>offset</tt> is the <a>Offset2Di</a> specifying the integer
--   rectangle offset.
[$sel:offset:Rect2Di] :: Rect2Di -> Offset2Di

-- | <tt>extent</tt> is the <a>Extent2Di</a> specifying the integer
--   rectangle extent.
[$sel:extent:Rect2Di] :: Rect2Di -> Extent2Di

-- | XrBool32 - Boolean value
--   
--   <h1>Description</h1>
--   
--   Boolean values used by OpenXR are of type
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   and are 32-bits wide as suggested by the name. The only valid values
--   are the following:
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateBoolean</a>, <a>ActionStateFloat</a>,
--   <a>ActionStatePose</a>, <a>ActionStateVector2f</a>,
--   <a>EventDataMainSessionVisibilityChangedEXTX</a>,
--   <a>EventDataReferenceSpaceChangePending</a>, <a>FrameState</a>,
--   <a>HandJointLocationsEXT</a>, <a>HandMeshMSFT</a>,
--   <a>SecondaryViewConfigurationStateMSFT</a>,
--   <a>SystemEyeGazeInteractionPropertiesEXT</a>,
--   <a>SystemHandTrackingMeshPropertiesMSFT</a>,
--   <a>SystemHandTrackingPropertiesEXT</a>,
--   <a>SystemTrackingProperties</a>, <a>ViewConfigurationProperties</a>,
--   <a>xrSetInputDeviceActiveEXT</a>, <a>xrSetInputDeviceStateBoolEXT</a>
newtype Bool32
Bool32 :: Int32 -> Bool32

-- | <a>FALSE</a> represents a false value.
pattern FALSE :: Bool32

-- | <a>TRUE</a> represents a true value.
pattern TRUE :: Bool32

-- | XrFlags64 - OpenXR bitmasks
--   
--   <h1>Description</h1>
--   
--   Bitmasks are passed to many functions and structures to compactly
--   represent options and are stored in memory defined by the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrFlags64</a>
--   type. But the API does not use the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrFlags64</a>
--   type directly. Instead, a <tt>Xr*Flags</tt> type is used which is an
--   alias of the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrFlags64</a>
--   type. The API also defines a set of constant bit definitions used to
--   set the bitmasks.
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerFlags</a>, <a>InstanceCreateFlags</a>,
--   <a>SessionCreateFlags</a>, <a>SpaceLocationFlags</a>,
--   <a>SwapchainCreateFlags</a>, <a>SwapchainUsageFlags</a>,
--   <a>ViewStateFlags</a>
type Flags64 = Word64

-- | XrTime - Basic type for time
--   
--   <h1>Description</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   is a base value type that represents time as a signed 64-bit integer,
--   representing the monotonically-increasing count of nanoseconds that
--   have elapsed since a runtime-chosen epoch.
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   always represents the time elasped since that constant epoch, rather
--   than a duration or a time point relative to some moving epoch such as
--   vsync time, etc. Durations are instead represented by
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>.
--   
--   A single runtime <i>must</i> use the same epoch for all simultaneous
--   applications. Time <i>must</i> be represented the same regardless of
--   multiple processors or threads present in the system.
--   
--   The period precision of time reported by the runtime is
--   runtime-dependent, and <i>may</i> change. One nanosecond is the finest
--   possible period precision. A runtime <i>may</i>, for example, report
--   time progression with only microsecond-level granularity.
--   
--   Time <i>must</i> not be assumed to correspond to a system clock time.
--   
--   Unless specified otherwise, zero or a negative value is not a valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   and related functions <i>must</i> return error
--   <a>ERROR_TIME_INVALID</a>. Applications <i>must</i> not initialize
--   such
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   fields to a zero value. Instead, applications <i>should</i> always
--   assign
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   fields to the meaningful point in time they are choosing to reason
--   about, such as a frame’s predicted display time, or an action’s last
--   change time.
--   
--   The behavior of a runtime is undefined when time overflows beyond the
--   maximum positive value that can be represented by an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>.
--   Runtimes <i>should</i> choose an epoch that minimizes the chance of
--   overflow. Runtimes <i>should</i> also choose an epoch that minimizes
--   the chance of underflow below 0 for applications performing a
--   reasonable amount of historical pose lookback. For example, if the
--   runtime chooses an epoch relative to its startup time, it
--   <i>should</i> push the epoch into the past by enough time to avoid
--   applications performing reasonable pose lookback from reaching a
--   negative
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   value.
--   
--   An application cannot assume that the system’s clock and the runtime’s
--   clock will maintain a constant relationship across frames and
--   <i>should</i> avoid storing such an offset, as this may cause time
--   drift. Applications <i>should</i> instead always use time interop
--   functions to convert a relevant time point across the system’s clock
--   and the runtime’s clock using extensions, for example,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XR_KHR_win32_convert_performance_counter_time</a>
--   or
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XR_KHR_convert_timespec_time</a>.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateBoolean</a>, <a>ActionStateFloat</a>,
--   <a>ActionStateVector2f</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>,
--   <a>EventDataInstanceLossPending</a>,
--   <a>EventDataReferenceSpaceChangePending</a>,
--   <a>EventDataSessionStateChanged</a>, <a>EyeGazeSampleTimeEXT</a>,
--   <a>FrameEndInfo</a>, <a>FrameState</a>,
--   <a>HandJointsLocateInfoEXT</a>, <a>HandMeshUpdateInfoMSFT</a>,
--   <a>HandMeshVertexBufferMSFT</a>, <a>SpatialAnchorCreateInfoMSFT</a>,
--   <a>ViewLocateInfo</a>, <a>convertTimeToTimespecTimeKHR</a>,
--   <a>convertTimeToWin32PerformanceCounterKHR</a>,
--   <a>convertTimespecTimeToTimeKHR</a>,
--   <a>convertWin32PerformanceCounterToTimeKHR</a>, <a>locateSpace</a>
type Time = Int64

-- | XrDuration - Bounded range of time
--   
--   <h1>Description</h1>
--   
--   The difference between two timepoints is a duration, and thus the
--   difference between two
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   values is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>
--   value.
--   
--   Functions that refer to durations use
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>
--   as opposed to
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>.
--   
--   <h1>See Also</h1>
--   
--   <a>FrameState</a>, <a>HapticVibration</a>,
--   <a>SwapchainImageWaitInfo</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
type Duration = Int64
instance Vulkan.Zero.Zero OpenXR.Core10.FundamentalTypes.Bool32
instance Foreign.Storable.Storable OpenXR.Core10.FundamentalTypes.Bool32
instance GHC.Classes.Ord OpenXR.Core10.FundamentalTypes.Bool32
instance GHC.Classes.Eq OpenXR.Core10.FundamentalTypes.Bool32
instance GHC.Classes.Eq OpenXR.Core10.FundamentalTypes.Extent2Di
instance GHC.Classes.Eq OpenXR.Core10.FundamentalTypes.Offset2Di
instance GHC.Classes.Eq OpenXR.Core10.FundamentalTypes.Extent2Df
instance GHC.Classes.Eq OpenXR.Core10.FundamentalTypes.Offset2Df
instance GHC.Show.Show OpenXR.Core10.FundamentalTypes.Offset2Df
instance GHC.Show.Show OpenXR.Core10.FundamentalTypes.Extent2Df
instance GHC.Show.Show OpenXR.Core10.FundamentalTypes.Rect2Df
instance GHC.Show.Show OpenXR.Core10.FundamentalTypes.Offset2Di
instance GHC.Show.Show OpenXR.Core10.FundamentalTypes.Extent2Di
instance GHC.Show.Show OpenXR.Core10.FundamentalTypes.Rect2Di
instance GHC.Show.Show OpenXR.Core10.FundamentalTypes.Bool32
instance GHC.Read.Read OpenXR.Core10.FundamentalTypes.Bool32
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.FundamentalTypes.Rect2Di
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.FundamentalTypes.Rect2Di
instance Foreign.Storable.Storable OpenXR.Core10.FundamentalTypes.Rect2Di
instance Vulkan.Zero.Zero OpenXR.Core10.FundamentalTypes.Rect2Di
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.FundamentalTypes.Extent2Di
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.FundamentalTypes.Extent2Di
instance Foreign.Storable.Storable OpenXR.Core10.FundamentalTypes.Extent2Di
instance Vulkan.Zero.Zero OpenXR.Core10.FundamentalTypes.Extent2Di
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.FundamentalTypes.Offset2Di
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.FundamentalTypes.Offset2Di
instance Foreign.Storable.Storable OpenXR.Core10.FundamentalTypes.Offset2Di
instance Vulkan.Zero.Zero OpenXR.Core10.FundamentalTypes.Offset2Di
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.FundamentalTypes.Rect2Df
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.FundamentalTypes.Rect2Df
instance Foreign.Storable.Storable OpenXR.Core10.FundamentalTypes.Rect2Df
instance Vulkan.Zero.Zero OpenXR.Core10.FundamentalTypes.Rect2Df
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.FundamentalTypes.Extent2Df
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.FundamentalTypes.Extent2Df
instance Foreign.Storable.Storable OpenXR.Core10.FundamentalTypes.Extent2Df
instance Vulkan.Zero.Zero OpenXR.Core10.FundamentalTypes.Extent2Df
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.FundamentalTypes.Offset2Df
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.FundamentalTypes.Offset2Df
instance Foreign.Storable.Storable OpenXR.Core10.FundamentalTypes.Offset2Df
instance Vulkan.Zero.Zero OpenXR.Core10.FundamentalTypes.Offset2Df


-- | <h1>Name</h1>
--   
--   XR_MND_swapchain_usage_input_attachment_bit - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MND_swapchain_usage_input_attachment_bit</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   97
--   
--   <h1>Revision</h1>
--   
--   2
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit
newtype SwapchainUsageFlagBits
SwapchainUsageFlagBits :: Flags64 -> SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_COLOR_ATTACHMENT_BIT :: SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT :: SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_UNORDERED_ACCESS_BIT :: SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_TRANSFER_SRC_BIT :: SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_TRANSFER_DST_BIT :: SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_SAMPLED_BIT :: SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_MUTABLE_FORMAT_BIT :: SwapchainUsageFlagBits
pattern SWAPCHAIN_USAGE_INPUT_ATTACHMENT_BIT_MND :: SwapchainUsageFlagBits
type MND_swapchain_usage_input_attachment_bit_SPEC_VERSION = 2
pattern MND_swapchain_usage_input_attachment_bit_SPEC_VERSION :: forall a. Integral a => a
type MND_SWAPCHAIN_USAGE_INPUT_ATTACHMENT_BIT_EXTENSION_NAME = "XR_MND_swapchain_usage_input_attachment_bit"
pattern MND_SWAPCHAIN_USAGE_INPUT_ATTACHMENT_BIT_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance Data.Bits.FiniteBits OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits
instance Data.Bits.Bits OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits
instance GHC.Classes.Ord OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits
instance GHC.Classes.Eq OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits
instance GHC.Show.Show OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits
instance GHC.Read.Read OpenXR.Extensions.XR_MND_swapchain_usage_input_attachment_bit.SwapchainUsageFlagBits

module OpenXR.Core10.Enums.ViewStateFlags

-- | XrViewStateFlags - View state flags
--   
--   <h2>Flag Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>View</a>, <a>ViewState</a>, <a>locateViews</a>
newtype ViewStateFlags
ViewStateFlags :: Flags64 -> ViewStateFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags
instance GHC.Show.Show OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags
instance GHC.Read.Read OpenXR.Core10.Enums.ViewStateFlags.ViewStateFlags

module OpenXR.Core10.Enums.ViewConfigurationType

-- | XrViewConfigurationType - Supported view configuration type
--   
--   <h1>Description</h1>
--   
--   The application selects its primary view configuration type when
--   calling <a>beginSession</a>, and that configuration remains constant
--   for the lifetime of the session, until <a>endSession</a> is called.
--   
--   The number of views and the semantic meaning of each view index within
--   a given view configuration is well-defined, specified below for all
--   core view configurations. The predefined primary view configuration
--   types are:
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataVisibilityMaskChangedKHR</a>,
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a>,
--   <a>SecondaryViewConfigurationSessionBeginInfoMSFT</a>,
--   <a>SecondaryViewConfigurationStateMSFT</a>,
--   <a>SecondaryViewConfigurationSwapchainCreateInfoMSFT</a>,
--   <a>SessionBeginInfo</a>, <a>ViewConfigurationProperties</a>,
--   <a>ViewLocateInfo</a>, <a>enumerateEnvironmentBlendModes</a>,
--   <a>enumerateViewConfigurationViews</a>,
--   <a>enumerateViewConfigurations</a>,
--   <a>getViewConfigurationProperties</a>, <a>getVisibilityMaskKHR</a>
newtype ViewConfigurationType
ViewConfigurationType :: Int32 -> ViewConfigurationType

-- | <a>VIEW_CONFIGURATION_TYPE_PRIMARY_MONO</a>. One view representing the
--   form factor’s one primary display. For example, an AR phone’s screen.
--   This configuration requires one element in
--   <a>ViewConfigurationProperties</a> and one projection in each
--   <a>CompositionLayerProjection</a> layer.
pattern VIEW_CONFIGURATION_TYPE_PRIMARY_MONO :: ViewConfigurationType

-- | <a>VIEW_CONFIGURATION_TYPE_PRIMARY_STEREO</a>. Two views representing
--   the form factor’s two primary displays, which map to a left-eye and
--   right-eye view. This configuration requires two views in
--   <a>ViewConfigurationProperties</a> and two views in each
--   <a>CompositionLayerProjection</a> layer. View index 0 <i>must</i>
--   represent the left eye and view index 1 <i>must</i> represent the
--   right eye.
pattern VIEW_CONFIGURATION_TYPE_PRIMARY_STEREO :: ViewConfigurationType
pattern VIEW_CONFIGURATION_TYPE_SECONDARY_MONO_FIRST_PERSON_OBSERVER_MSFT :: ViewConfigurationType
pattern VIEW_CONFIGURATION_TYPE_PRIMARY_QUAD_VARJO :: ViewConfigurationType
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.ViewConfigurationType.ViewConfigurationType
instance Foreign.Storable.Storable OpenXR.Core10.Enums.ViewConfigurationType.ViewConfigurationType
instance GHC.Classes.Ord OpenXR.Core10.Enums.ViewConfigurationType.ViewConfigurationType
instance GHC.Classes.Eq OpenXR.Core10.Enums.ViewConfigurationType.ViewConfigurationType
instance GHC.Show.Show OpenXR.Core10.Enums.ViewConfigurationType.ViewConfigurationType
instance GHC.Read.Read OpenXR.Core10.Enums.ViewConfigurationType.ViewConfigurationType

module OpenXR.Core10.Enums.SwapchainUsageFlags

-- | XrSwapchainUsageFlags - Swapchain usage flags
--   
--   <h2>Flag Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>SwapchainCreateInfo</a>, <a>createSwapchain</a>,
--   <a>enumerateSwapchainFormats</a>
newtype SwapchainUsageFlags
SwapchainUsageFlags :: Flags64 -> SwapchainUsageFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags
instance GHC.Show.Show OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags
instance GHC.Read.Read OpenXR.Core10.Enums.SwapchainUsageFlags.SwapchainUsageFlags

module OpenXR.Core10.Enums.SwapchainCreateFlags

-- | XrSwapchainCreateFlags - Swapchain creation flags
--   
--   <h2>Flag Descriptions</h2>
--   
--   A runtime <i>may</i> implement any of these, but is not required to. A
--   runtime <i>must</i> return <a>ERROR_FEATURE_UNSUPPORTED</a> from
--   <a>createSwapchain</a> if an <a>SwapchainCreateFlags</a> bit is
--   requested but not implemented.
--   
--   <h1>See Also</h1>
--   
--   <a>SwapchainCreateInfo</a>, <a>createSwapchain</a>
newtype SwapchainCreateFlags
SwapchainCreateFlags :: Flags64 -> SwapchainCreateFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags
instance GHC.Show.Show OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags
instance GHC.Read.Read OpenXR.Core10.Enums.SwapchainCreateFlags.SwapchainCreateFlags

module OpenXR.Core10.Enums.StructureType

-- | XrStructureType - Values for type members of structs
--   
--   <h1>Description</h1>
--   
--   Most structures containing <tt>type</tt> members have a value of
--   <tt>type</tt> matching the type of the structure, as described more
--   fully in <a>Valid Usage for Structure Types</a>.
--   
--   Note that all extension enums begin at the extension enum base of 110
--   (base 10). Each extension is assigned a block of 1000 enums, starting
--   at the enum base and arranged by the extension’s index.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionCreateInfo</a>, <a>ActionSetCreateInfo</a>,
--   <a>ActionSpaceCreateInfo</a>, <a>ActionStateBoolean</a>,
--   <a>ActionStateFloat</a>, <a>ActionStateGetInfo</a>,
--   <a>ActionStatePose</a>, <a>ActionStateVector2f</a>,
--   <a>ActionsSyncInfo</a>, <a>ApiLayerProperties</a>,
--   <a>BaseInStructure</a>, <a>BaseOutStructure</a>,
--   <a>BindingModificationBaseHeaderKHR</a>,
--   <a>BindingModificationsKHR</a>,
--   <a>BoundSourcesForActionEnumerateInfo</a>,
--   <a>CompositionLayerBaseHeader</a>,
--   <a>CompositionLayerColorScaleBiasKHR</a>,
--   <a>CompositionLayerCubeKHR</a>, <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerDepthInfoKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>, <a>CompositionLayerProjection</a>,
--   <a>CompositionLayerProjectionView</a>, <a>CompositionLayerQuad</a>,
--   <a>ControllerModelKeyStateMSFT</a>,
--   <a>ControllerModelNodePropertiesMSFT</a>,
--   <a>ControllerModelNodeStateMSFT</a>,
--   <a>ControllerModelPropertiesMSFT</a>, <a>ControllerModelStateMSFT</a>,
--   <a>DebugUtilsLabelEXT</a>, <a>DebugUtilsMessengerCallbackDataEXT</a>,
--   <a>DebugUtilsMessengerCreateInfoEXT</a>,
--   <a>DebugUtilsObjectNameInfoEXT</a>, <a>EventDataBaseHeader</a>,
--   <a>EventDataBuffer</a>, <a>EventDataDisplayRefreshRateChangedFB</a>,
--   <a>EventDataEventsLost</a>, <a>EventDataInstanceLossPending</a>,
--   <a>EventDataInteractionProfileChanged</a>,
--   <a>EventDataMainSessionVisibilityChangedEXTX</a>,
--   <a>EventDataPerfSettingsEXT</a>,
--   <a>EventDataReferenceSpaceChangePending</a>,
--   <a>EventDataSessionStateChanged</a>,
--   <a>EventDataVisibilityMaskChangedKHR</a>, <a>ExtensionProperties</a>,
--   <a>EyeGazeSampleTimeEXT</a>, <a>FrameBeginInfo</a>,
--   <a>FrameEndInfo</a>, <a>FrameState</a>, <a>FrameWaitInfo</a>,
--   <a>GraphicsBindingD3D11KHR</a>, <a>GraphicsBindingD3D12KHR</a>,
--   <a>GraphicsBindingEGLMNDX</a>,
--   <a>GraphicsBindingOpenGLESAndroidKHR</a>,
--   <a>GraphicsBindingOpenGLWaylandKHR</a>,
--   <a>GraphicsBindingOpenGLWin32KHR</a>,
--   <a>GraphicsBindingOpenGLXcbKHR</a>,
--   <a>GraphicsBindingOpenGLXlibKHR</a>, <a>GraphicsBindingVulkanKHR</a>,
--   <a>GraphicsRequirementsD3D11KHR</a>,
--   <a>GraphicsRequirementsD3D12KHR</a>,
--   <a>GraphicsRequirementsOpenGLESKHR</a>,
--   <a>GraphicsRequirementsOpenGLKHR</a>,
--   <a>GraphicsRequirementsVulkanKHR</a>, <a>HandJointLocationsEXT</a>,
--   <a>HandJointVelocitiesEXT</a>, <a>HandJointsLocateInfoEXT</a>,
--   <a>HandMeshMSFT</a>, <a>HandMeshSpaceCreateInfoMSFT</a>,
--   <a>HandMeshUpdateInfoMSFT</a>, <a>HandPoseTypeInfoMSFT</a>,
--   <a>HandTrackerCreateInfoEXT</a>, <a>HapticActionInfo</a>,
--   <a>HapticBaseHeader</a>, <a>HapticVibration</a>,
--   <a>HolographicWindowAttachmentMSFT</a>,
--   <a>InputSourceLocalizedNameGetInfo</a>, <a>InstanceCreateInfo</a>,
--   <a>InstanceCreateInfoAndroidKHR</a>, <a>InstanceProperties</a>,
--   <a>InteractionProfileAnalogThresholdVALVE</a>,
--   <a>InteractionProfileState</a>,
--   <a>InteractionProfileSuggestedBinding</a>,
--   <a>LoaderInitInfoAndroidKHR</a>, <a>LoaderInitInfoBaseHeaderKHR</a>,
--   <a>ReferenceSpaceCreateInfo</a>,
--   <a>SecondaryViewConfigurationFrameEndInfoMSFT</a>,
--   <a>SecondaryViewConfigurationFrameStateMSFT</a>,
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a>,
--   <a>SecondaryViewConfigurationSessionBeginInfoMSFT</a>,
--   <a>SecondaryViewConfigurationStateMSFT</a>,
--   <a>SecondaryViewConfigurationSwapchainCreateInfoMSFT</a>,
--   <a>SessionActionSetsAttachInfo</a>, <a>SessionBeginInfo</a>,
--   <a>SessionCreateInfo</a>, <a>SessionCreateInfoOverlayEXTX</a>,
--   <a>SpaceLocation</a>, <a>SpaceVelocity</a>,
--   <a>SpatialAnchorCreateInfoMSFT</a>,
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a>,
--   <a>SpatialGraphNodeSpaceCreateInfoMSFT</a>,
--   <a>SwapchainCreateInfo</a>, <a>SwapchainImageAcquireInfo</a>,
--   <a>SwapchainImageBaseHeader</a>, <a>SwapchainImageD3D11KHR</a>,
--   <a>SwapchainImageD3D12KHR</a>, <a>SwapchainImageOpenGLESKHR</a>,
--   <a>SwapchainImageOpenGLKHR</a>, <a>SwapchainImageReleaseInfo</a>,
--   <a>SwapchainImageVulkanKHR</a>, <a>SwapchainImageWaitInfo</a>,
--   <a>SystemColorSpacePropertiesFB</a>,
--   <a>SystemEyeGazeInteractionPropertiesEXT</a>, <a>SystemGetInfo</a>,
--   <a>SystemHandTrackingMeshPropertiesMSFT</a>,
--   <a>SystemHandTrackingPropertiesEXT</a>, <a>SystemProperties</a>,
--   <a>View</a>, <a>ViewConfigurationDepthRangeEXT</a>,
--   <a>ViewConfigurationProperties</a>, <a>ViewConfigurationView</a>,
--   <a>ViewConfigurationViewFovEPIC</a>, <a>ViewLocateInfo</a>,
--   <a>ViewState</a>, <a>VisibilityMaskKHR</a>,
--   <a>VulkanDeviceCreateInfoKHR</a>,
--   <a>VulkanGraphicsDeviceGetInfoKHR</a>,
--   <a>VulkanInstanceCreateInfoKHR</a>,
--   <a>VulkanSwapchainFormatListCreateInfoKHR</a>,
--   <a>structureTypeToString</a>
newtype StructureType
StructureType :: Int32 -> StructureType
pattern TYPE_UNKNOWN :: StructureType
pattern TYPE_API_LAYER_PROPERTIES :: StructureType
pattern TYPE_EXTENSION_PROPERTIES :: StructureType
pattern TYPE_INSTANCE_CREATE_INFO :: StructureType
pattern TYPE_SYSTEM_GET_INFO :: StructureType
pattern TYPE_SYSTEM_PROPERTIES :: StructureType
pattern TYPE_VIEW_LOCATE_INFO :: StructureType
pattern TYPE_VIEW :: StructureType
pattern TYPE_SESSION_CREATE_INFO :: StructureType
pattern TYPE_SWAPCHAIN_CREATE_INFO :: StructureType
pattern TYPE_SESSION_BEGIN_INFO :: StructureType
pattern TYPE_VIEW_STATE :: StructureType
pattern TYPE_FRAME_END_INFO :: StructureType
pattern TYPE_HAPTIC_VIBRATION :: StructureType
pattern TYPE_EVENT_DATA_BUFFER :: StructureType
pattern TYPE_EVENT_DATA_INSTANCE_LOSS_PENDING :: StructureType
pattern TYPE_EVENT_DATA_SESSION_STATE_CHANGED :: StructureType
pattern TYPE_ACTION_STATE_BOOLEAN :: StructureType
pattern TYPE_ACTION_STATE_FLOAT :: StructureType
pattern TYPE_ACTION_STATE_VECTOR2F :: StructureType
pattern TYPE_ACTION_STATE_POSE :: StructureType
pattern TYPE_ACTION_SET_CREATE_INFO :: StructureType
pattern TYPE_ACTION_CREATE_INFO :: StructureType
pattern TYPE_INSTANCE_PROPERTIES :: StructureType
pattern TYPE_FRAME_WAIT_INFO :: StructureType
pattern TYPE_COMPOSITION_LAYER_PROJECTION :: StructureType
pattern TYPE_COMPOSITION_LAYER_QUAD :: StructureType
pattern TYPE_REFERENCE_SPACE_CREATE_INFO :: StructureType
pattern TYPE_ACTION_SPACE_CREATE_INFO :: StructureType
pattern TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING :: StructureType
pattern TYPE_VIEW_CONFIGURATION_VIEW :: StructureType
pattern TYPE_SPACE_LOCATION :: StructureType
pattern TYPE_SPACE_VELOCITY :: StructureType
pattern TYPE_FRAME_STATE :: StructureType
pattern TYPE_VIEW_CONFIGURATION_PROPERTIES :: StructureType
pattern TYPE_FRAME_BEGIN_INFO :: StructureType
pattern TYPE_COMPOSITION_LAYER_PROJECTION_VIEW :: StructureType
pattern TYPE_EVENT_DATA_EVENTS_LOST :: StructureType
pattern TYPE_INTERACTION_PROFILE_SUGGESTED_BINDING :: StructureType
pattern TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED :: StructureType
pattern TYPE_INTERACTION_PROFILE_STATE :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_ACQUIRE_INFO :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_WAIT_INFO :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_RELEASE_INFO :: StructureType
pattern TYPE_ACTION_STATE_GET_INFO :: StructureType
pattern TYPE_HAPTIC_ACTION_INFO :: StructureType
pattern TYPE_SESSION_ACTION_SETS_ATTACH_INFO :: StructureType
pattern TYPE_ACTIONS_SYNC_INFO :: StructureType
pattern TYPE_BOUND_SOURCES_FOR_ACTION_ENUMERATE_INFO :: StructureType
pattern TYPE_INPUT_SOURCE_LOCALIZED_NAME_GET_INFO :: StructureType
pattern TYPE_BINDING_MODIFICATIONS_KHR :: StructureType
pattern TYPE_SYSTEM_COLOR_SPACE_PROPERTIES_FB :: StructureType
pattern TYPE_EVENT_DATA_DISPLAY_REFRESH_RATE_CHANGED_FB :: StructureType
pattern TYPE_COMPOSITION_LAYER_EQUIRECT2_KHR :: StructureType
pattern TYPE_VULKAN_GRAPHICS_DEVICE_GET_INFO_KHR :: StructureType
pattern TYPE_VULKAN_DEVICE_CREATE_INFO_KHR :: StructureType
pattern TYPE_VULKAN_INSTANCE_CREATE_INFO_KHR :: StructureType
pattern TYPE_LOADER_INIT_INFO_ANDROID_KHR :: StructureType
pattern TYPE_INTERACTION_PROFILE_ANALOG_THRESHOLD_VALVE :: StructureType
pattern TYPE_HOLOGRAPHIC_WINDOW_ATTACHMENT_MSFT :: StructureType
pattern TYPE_VIEW_CONFIGURATION_VIEW_FOV_EPIC :: StructureType
pattern TYPE_CONTROLLER_MODEL_STATE_MSFT :: StructureType
pattern TYPE_CONTROLLER_MODEL_NODE_STATE_MSFT :: StructureType
pattern TYPE_CONTROLLER_MODEL_PROPERTIES_MSFT :: StructureType
pattern TYPE_CONTROLLER_MODEL_NODE_PROPERTIES_MSFT :: StructureType
pattern TYPE_CONTROLLER_MODEL_KEY_STATE_MSFT :: StructureType
pattern TYPE_SECONDARY_VIEW_CONFIGURATION_SWAPCHAIN_CREATE_INFO_MSFT :: StructureType
pattern TYPE_SECONDARY_VIEW_CONFIGURATION_LAYER_INFO_MSFT :: StructureType
pattern TYPE_SECONDARY_VIEW_CONFIGURATION_FRAME_END_INFO_MSFT :: StructureType
pattern TYPE_SECONDARY_VIEW_CONFIGURATION_FRAME_STATE_MSFT :: StructureType
pattern TYPE_SECONDARY_VIEW_CONFIGURATION_STATE_MSFT :: StructureType
pattern TYPE_SECONDARY_VIEW_CONFIGURATION_SESSION_BEGIN_INFO_MSFT :: StructureType
pattern TYPE_HAND_POSE_TYPE_INFO_MSFT :: StructureType
pattern TYPE_HAND_MESH_MSFT :: StructureType
pattern TYPE_HAND_MESH_UPDATE_INFO_MSFT :: StructureType
pattern TYPE_HAND_MESH_SPACE_CREATE_INFO_MSFT :: StructureType
pattern TYPE_SYSTEM_HAND_TRACKING_MESH_PROPERTIES_MSFT :: StructureType
pattern TYPE_HAND_JOINT_VELOCITIES_EXT :: StructureType
pattern TYPE_HAND_JOINT_LOCATIONS_EXT :: StructureType
pattern TYPE_HAND_JOINTS_LOCATE_INFO_EXT :: StructureType
pattern TYPE_HAND_TRACKER_CREATE_INFO_EXT :: StructureType
pattern TYPE_SYSTEM_HAND_TRACKING_PROPERTIES_EXT :: StructureType
pattern TYPE_SPATIAL_GRAPH_NODE_SPACE_CREATE_INFO_MSFT :: StructureType
pattern TYPE_GRAPHICS_BINDING_EGL_MNDX :: StructureType
pattern TYPE_VIEW_CONFIGURATION_DEPTH_RANGE_EXT :: StructureType
pattern TYPE_SPATIAL_ANCHOR_SPACE_CREATE_INFO_MSFT :: StructureType
pattern TYPE_SPATIAL_ANCHOR_CREATE_INFO_MSFT :: StructureType
pattern TYPE_COMPOSITION_LAYER_COLOR_SCALE_BIAS_KHR :: StructureType
pattern TYPE_EVENT_DATA_MAIN_SESSION_VISIBILITY_CHANGED_EXTX :: StructureType
pattern TYPE_SESSION_CREATE_INFO_OVERLAY_EXTX :: StructureType
pattern TYPE_EVENT_DATA_VISIBILITY_MASK_CHANGED_KHR :: StructureType
pattern TYPE_VISIBILITY_MASK_KHR :: StructureType
pattern TYPE_EYE_GAZE_SAMPLE_TIME_EXT :: StructureType
pattern TYPE_SYSTEM_EYE_GAZE_INTERACTION_PROPERTIES_EXT :: StructureType
pattern TYPE_GRAPHICS_REQUIREMENTS_D3D12_KHR :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_D3D12_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_D3D12_KHR :: StructureType
pattern TYPE_GRAPHICS_REQUIREMENTS_D3D11_KHR :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_D3D11_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_D3D11_KHR :: StructureType
pattern TYPE_GRAPHICS_REQUIREMENTS_VULKAN_KHR :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_VULKAN_KHR :: StructureType
pattern TYPE_GRAPHICS_REQUIREMENTS_OPENGL_ES_KHR :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_OPENGL_ES_ANDROID_KHR :: StructureType
pattern TYPE_GRAPHICS_REQUIREMENTS_OPENGL_KHR :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_OPENGL_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_OPENGL_WAYLAND_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_OPENGL_XCB_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_OPENGL_XLIB_KHR :: StructureType
pattern TYPE_GRAPHICS_BINDING_OPENGL_WIN32_KHR :: StructureType
pattern TYPE_DEBUG_UTILS_LABEL_EXT :: StructureType
pattern TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT :: StructureType
pattern TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT :: StructureType
pattern TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT :: StructureType
pattern TYPE_COMPOSITION_LAYER_EQUIRECT_KHR :: StructureType
pattern TYPE_COMPOSITION_LAYER_CYLINDER_KHR :: StructureType
pattern TYPE_EVENT_DATA_PERF_SETTINGS_EXT :: StructureType
pattern TYPE_VULKAN_SWAPCHAIN_FORMAT_LIST_CREATE_INFO_KHR :: StructureType
pattern TYPE_COMPOSITION_LAYER_DEPTH_INFO_KHR :: StructureType
pattern TYPE_INSTANCE_CREATE_INFO_ANDROID_KHR :: StructureType
pattern TYPE_COMPOSITION_LAYER_CUBE_KHR :: StructureType
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.StructureType.StructureType
instance Foreign.Storable.Storable OpenXR.Core10.Enums.StructureType.StructureType
instance GHC.Classes.Ord OpenXR.Core10.Enums.StructureType.StructureType
instance GHC.Classes.Eq OpenXR.Core10.Enums.StructureType.StructureType
instance GHC.Show.Show OpenXR.Core10.Enums.StructureType.StructureType
instance GHC.Read.Read OpenXR.Core10.Enums.StructureType.StructureType


-- | <h1>Name</h1>
--   
--   XR_KHR_vulkan_swapchain_format_list - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_vulkan_swapchain_format_list</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   15
--   
--   <h1>Revision</h1>
--   
--   3
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <ul>
--   <li>Requires @@</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>VulkanSwapchainFormatListCreateInfoKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_vulkan_swapchain_format_list

-- | XrVulkanSwapchainFormatListCreateInfoKHR - A list of Vulkan view
--   formats
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>VulkanSwapchainFormatListCreateInfoKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_VULKAN_SWAPCHAIN_FORMAT_LIST_CREATE_INFO_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li>If <tt>viewFormatCount</tt> is not <tt>0</tt>,
--   <tt>viewFormats</tt> <i>must</i> be a pointer to an array of
--   <tt>viewFormatCount</tt> valid <tt>VkFormat</tt> values</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSwapchain</a>
data VulkanSwapchainFormatListCreateInfoKHR
VulkanSwapchainFormatListCreateInfoKHR :: Vector Format -> VulkanSwapchainFormatListCreateInfoKHR

-- | <tt>viewFormats</tt> is an array of <tt>VkFormat</tt>.
[$sel:viewFormats:VulkanSwapchainFormatListCreateInfoKHR] :: VulkanSwapchainFormatListCreateInfoKHR -> Vector Format
type KHR_vulkan_swapchain_format_list_SPEC_VERSION = 3
pattern KHR_vulkan_swapchain_format_list_SPEC_VERSION :: forall a. Integral a => a
type KHR_VULKAN_SWAPCHAIN_FORMAT_LIST_EXTENSION_NAME = "XR_KHR_vulkan_swapchain_format_list"
pattern KHR_VULKAN_SWAPCHAIN_FORMAT_LIST_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_swapchain_format_list.VulkanSwapchainFormatListCreateInfoKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_vulkan_swapchain_format_list.VulkanSwapchainFormatListCreateInfoKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_vulkan_swapchain_format_list.VulkanSwapchainFormatListCreateInfoKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_swapchain_format_list.VulkanSwapchainFormatListCreateInfoKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_binding_modification - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_binding_modification</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   121
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>BindingModificationBaseHeaderKHR</a>,
--   <a>BindingModificationsKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_binding_modification

-- | XrBindingModificationsKHR - Suggested bindings with binding
--   modification details
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>BindingModificationsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_BINDING_MODIFICATIONS_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li>If <tt>bindingModificationCount</tt> is not <tt>0</tt>,
--   <tt>bindingModifications</tt> <i>must</i> be a pointer to an array of
--   <tt>bindingModificationCount</tt> valid
--   <a>BindingModificationBaseHeaderKHR</a>-based structures</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>BindingModificationBaseHeaderKHR</a>, <a>StructureType</a>,
--   <a>suggestInteractionProfileBindings</a>
data BindingModificationsKHR
BindingModificationsKHR :: Word32 -> Vector BindingModificationBaseHeaderKHR -> BindingModificationsKHR

-- | <tt>bindingModificationCount</tt> is the number of binding
--   modifications in the array pointed to by
--   <tt>bindingModifications</tt>.
[$sel:bindingModificationCount:BindingModificationsKHR] :: BindingModificationsKHR -> Word32

-- | <tt>bindingModifications</tt> is a pointer to an array of pointers to
--   binding modification structures based on
--   <a>BindingModificationBaseHeaderKHR</a>, that define all of the
--   application’s suggested binding modifications for the specified
--   interaction profile.
[$sel:bindingModifications:BindingModificationsKHR] :: BindingModificationsKHR -> Vector BindingModificationBaseHeaderKHR

-- | XrBindingModificationBaseHeaderKHR - Base struct for all binding
--   modifications
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>BindingModificationBaseHeaderKHR</a> is a base structure is
--   overridden by <tt>XrBindingModification*</tt> child structures.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>BindingModificationBaseHeaderKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>BindingModificationsKHR</a>, <a>StructureType</a>,
--   <a>suggestInteractionProfileBindings</a>
data BindingModificationBaseHeaderKHR
BindingModificationBaseHeaderKHR :: StructureType -> BindingModificationBaseHeaderKHR

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
[$sel:type':BindingModificationBaseHeaderKHR] :: BindingModificationBaseHeaderKHR -> StructureType
type KHR_binding_modification_SPEC_VERSION = 1
pattern KHR_binding_modification_SPEC_VERSION :: forall a. Integral a => a
type KHR_BINDING_MODIFICATION_EXTENSION_NAME = "XR_KHR_binding_modification"
pattern KHR_BINDING_MODIFICATION_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationBaseHeaderKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationsKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationBaseHeaderKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationsKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationsKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationsKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationBaseHeaderKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationBaseHeaderKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationBaseHeaderKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_binding_modification.BindingModificationBaseHeaderKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_android_create_instance - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_android_create_instance</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   9
--   
--   <h1>Revision</h1>
--   
--   3
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>InstanceCreateInfoAndroidKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_android_create_instance

-- | XrInstanceCreateInfoAndroidKHR - Creates an OpenXR Instance
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>InstanceCreateInfoAndroidKHR</a> contains additional Android
--   specific information needed when calling <a>createInstance</a>. The
--   <tt>applicationVM</tt> field should be populated with the
--   <tt>JavaVM</tt> structure received by the <tt>JNI_OnLoad</tt>
--   function, while the <tt>applicationActivity</tt> field will typically
--   contain a reference to a Java activity object received through an
--   application-specific native method. The
--   <a>InstanceCreateInfoAndroidKHR</a> structure <i>must</i> be provided
--   in the <tt>next</tt> chain of the <a>InstanceCreateInfo</a> structure
--   when calling <a>createInstance</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>InstanceCreateInfoAndroidKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_INSTANCE_CREATE_INFO_ANDROID_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>applicationVM</tt> <i>must</i> be a pointer value</li>
--   <li><tt>applicationActivity</tt> <i>must</i> be a pointer value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createInstance</a>, <a>destroyInstance</a>
data InstanceCreateInfoAndroidKHR
InstanceCreateInfoAndroidKHR :: Ptr () -> Ptr () -> InstanceCreateInfoAndroidKHR

-- | <tt>applicationVM</tt> is a pointer to the JNI’s opaque
--   <tt>JavaVM</tt> structure, cast to a void pointer.
[$sel:applicationVM:InstanceCreateInfoAndroidKHR] :: InstanceCreateInfoAndroidKHR -> Ptr ()

-- | <tt>applicationActivity</tt> is a JNI reference to an
--   <tt>android.app.Activity</tt> that will drive the session lifecycle of
--   this instance, cast to a void pointer.
[$sel:applicationActivity:InstanceCreateInfoAndroidKHR] :: InstanceCreateInfoAndroidKHR -> Ptr ()
type KHR_android_create_instance_SPEC_VERSION = 3
pattern KHR_android_create_instance_SPEC_VERSION :: forall a. Integral a => a
type KHR_ANDROID_CREATE_INSTANCE_EXTENSION_NAME = "XR_KHR_android_create_instance"
pattern KHR_ANDROID_CREATE_INSTANCE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_android_create_instance.InstanceCreateInfoAndroidKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_android_create_instance.InstanceCreateInfoAndroidKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_android_create_instance.InstanceCreateInfoAndroidKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_android_create_instance.InstanceCreateInfoAndroidKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_android_create_instance.InstanceCreateInfoAndroidKHR


-- | <h1>Name</h1>
--   
--   XR_EXT_view_configuration_depth_range - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_view_configuration_depth_range</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   47
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ViewConfigurationDepthRangeEXT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_view_configuration_depth_range

-- | XrViewConfigurationDepthRangeEXT - View configuration depth range
--   information
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When enumerating the view configurations with
--   <a>enumerateViewConfigurationViews</a>, the application <i>can</i>
--   provide a pointer to an <a>ViewConfigurationDepthRangeEXT</a> in the
--   <tt>next</tt> chain of <a>ViewConfigurationView</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>ViewConfigurationDepthRangeEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_VIEW_CONFIGURATION_DEPTH_RANGE_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>ViewConfigurationView</a>,
--   <a>enumerateViewConfigurationViews</a>
data ViewConfigurationDepthRangeEXT
ViewConfigurationDepthRangeEXT :: Float -> Float -> Float -> Float -> ViewConfigurationDepthRangeEXT

-- | <tt>recommendedNearZ</tt> is the recommended minimum positive distance
--   in meters that content should be rendered for the view to achieve the
--   best user experience.
[$sel:recommendedNearZ:ViewConfigurationDepthRangeEXT] :: ViewConfigurationDepthRangeEXT -> Float

-- | <tt>minNearZ</tt> is the absolute minimum positive distance in meters
--   that content should be rendered for the view.
[$sel:minNearZ:ViewConfigurationDepthRangeEXT] :: ViewConfigurationDepthRangeEXT -> Float

-- | <tt>recommendedFarZ</tt> is the recommended maximum positive distance
--   in meters that content should be rendered for the view to achieve the
--   best user experience.
[$sel:recommendedFarZ:ViewConfigurationDepthRangeEXT] :: ViewConfigurationDepthRangeEXT -> Float

-- | <tt>maxFarZ</tt> is the absolute maximum positive distance in meters
--   that content should be rendered for the view.
[$sel:maxFarZ:ViewConfigurationDepthRangeEXT] :: ViewConfigurationDepthRangeEXT -> Float
type EXT_view_configuration_depth_range_SPEC_VERSION = 1
pattern EXT_view_configuration_depth_range_SPEC_VERSION :: forall a. Integral a => a
type EXT_VIEW_CONFIGURATION_DEPTH_RANGE_EXTENSION_NAME = "XR_EXT_view_configuration_depth_range"
pattern EXT_VIEW_CONFIGURATION_DEPTH_RANGE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_view_configuration_depth_range.ViewConfigurationDepthRangeEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_view_configuration_depth_range.ViewConfigurationDepthRangeEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_view_configuration_depth_range.ViewConfigurationDepthRangeEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_view_configuration_depth_range.ViewConfigurationDepthRangeEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_view_configuration_depth_range.ViewConfigurationDepthRangeEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_view_configuration_depth_range.ViewConfigurationDepthRangeEXT


-- | <h1>Name</h1>
--   
--   XR_EXT_eye_gaze_interaction - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_eye_gaze_interaction</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   31
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>EyeGazeSampleTimeEXT</a>,
--   <a>SystemEyeGazeInteractionPropertiesEXT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_eye_gaze_interaction

-- | XrSystemEyeGazeInteractionPropertiesEXT - Eye gaze interaction system
--   properties
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SystemEyeGazeInteractionPropertiesEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SYSTEM_EYE_GAZE_INTERACTION_PROPERTIES_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>
data SystemEyeGazeInteractionPropertiesEXT
SystemEyeGazeInteractionPropertiesEXT :: Bool -> SystemEyeGazeInteractionPropertiesEXT

-- | <tt>supportsEyeGazeInteraction</tt> the runtime <i>must</i> set this
--   value to <a>TRUE</a> when eye gaze sufficient for use cases such as
--   aiming or targeting is supported by the current device, otherwise the
--   runtime <i>must</i> set this to <a>FALSE</a>.
[$sel:supportsEyeGazeInteraction:SystemEyeGazeInteractionPropertiesEXT] :: SystemEyeGazeInteractionPropertiesEXT -> Bool

-- | XrEyeGazeSampleTimeEXT - Eye gaze sample time structure
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>EyeGazeSampleTimeEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_EYE_GAZE_SAMPLE_TIME_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
data EyeGazeSampleTimeEXT
EyeGazeSampleTimeEXT :: Time -> EyeGazeSampleTimeEXT

-- | <tt>time</tt> is when in time the eye gaze pose is expressed.
[$sel:time:EyeGazeSampleTimeEXT] :: EyeGazeSampleTimeEXT -> Time
type EXT_eye_gaze_interaction_SPEC_VERSION = 1
pattern EXT_eye_gaze_interaction_SPEC_VERSION :: forall a. Integral a => a
type EXT_EYE_GAZE_INTERACTION_EXTENSION_NAME = "XR_EXT_eye_gaze_interaction"
pattern EXT_EYE_GAZE_INTERACTION_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_eye_gaze_interaction.EyeGazeSampleTimeEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_eye_gaze_interaction.SystemEyeGazeInteractionPropertiesEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_eye_gaze_interaction.SystemEyeGazeInteractionPropertiesEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_eye_gaze_interaction.EyeGazeSampleTimeEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_eye_gaze_interaction.EyeGazeSampleTimeEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_eye_gaze_interaction.EyeGazeSampleTimeEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_eye_gaze_interaction.EyeGazeSampleTimeEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_eye_gaze_interaction.EyeGazeSampleTimeEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_eye_gaze_interaction.SystemEyeGazeInteractionPropertiesEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_eye_gaze_interaction.SystemEyeGazeInteractionPropertiesEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_eye_gaze_interaction.SystemEyeGazeInteractionPropertiesEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_eye_gaze_interaction.SystemEyeGazeInteractionPropertiesEXT

module OpenXR.Core10.Enums.SpaceVelocityFlags

-- | XrSpaceVelocityFlags - Space velocity flags
--   
--   <h1>Description</h1>
--   
--   where the flags have the following meaning:
--   
--   <h2>Flag Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointVelocityEXT</a>, <a>SpaceVelocity</a>
newtype SpaceVelocityFlags
SpaceVelocityFlags :: Flags64 -> SpaceVelocityFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags
instance GHC.Show.Show OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags
instance GHC.Read.Read OpenXR.Core10.Enums.SpaceVelocityFlags.SpaceVelocityFlags

module OpenXR.Core10.Enums.SpaceLocationFlags

-- | XrSpaceLocationFlags - Space location flags
--   
--   <h1>Description</h1>
--   
--   where the flags have the following meaning:
--   
--   <h2>Flag Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointLocationEXT</a>, <a>SpaceLocation</a>
newtype SpaceLocationFlags
SpaceLocationFlags :: Flags64 -> SpaceLocationFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags
instance GHC.Show.Show OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags
instance GHC.Read.Read OpenXR.Core10.Enums.SpaceLocationFlags.SpaceLocationFlags

module OpenXR.Core10.Enums.SessionState

-- | XrSessionState - Session lifecycle state
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   The <a>SESSION_STATE_UNKNOWN</a> state <i>must</i> not be returned by
--   the runtime, and is only defined to avoid <tt>0</tt> being a valid
--   state.
--   
--   Receiving the <a>SESSION_STATE_IDLE</a> state indicates that the
--   runtime considers the session is idle. Applications in this state
--   <i>should</i> minimize resource consumption but continue to call
--   <a>pollEvent</a> at some reasonable cadence.
--   
--   Receiving the <a>SESSION_STATE_READY</a> state indicates that the
--   runtime desires the application to prepare rendering resources, begin
--   its session and synchronize its frame loop with the runtime. The
--   application does this by successfully calling <a>beginSession</a> and
--   then running its frame loop by calling <a>waitFrame</a>,
--   <a>beginFrame</a> and <a>endFrame</a> in a loop. If the runtime wishes
--   to return the session to the <a>SESSION_STATE_IDLE</a> state, it
--   <i>must</i> wait until the application calls <a>beginSession</a>.
--   After returning from the <a>beginSession</a> call, the runtime may
--   then immediately transition forward through the
--   <a>SESSION_STATE_SYNCHRONIZED</a> state to the
--   <a>SESSION_STATE_STOPPING</a> state, to request that the application
--   end this session. If the system supports a user engagement sensor and
--   runtime is in <a>SESSION_STATE_IDLE</a> state, the runtime
--   <i>should</i> not transition to the <a>SESSION_STATE_READY</a> state
--   until the user starts engaging with the device.
--   
--   Receiving the <a>SESSION_STATE_SYNCHRONIZED</a> state indicates that
--   the application has <a>synchronized its frame loop with the
--   runtime</a>, but its frames are not visible to the user. The
--   application <i>should</i> continue running its frame loop by calling
--   <a>waitFrame</a>, <a>beginFrame</a> and <a>endFrame</a>, although it
--   should avoid heavy GPU work so that other visible applications can
--   take CPU and GPU precedence. The application can save resources here
--   by skipping rendering and not submitting any composition layers until
--   <a>waitFrame</a> returns an <a>FrameState</a> with
--   <tt>shouldRender</tt> set to true. A runtime <i>may</i> use this frame
--   synchronization to facilitate seamless switching from a previous XR
--   application to this application on a frame boundary.
--   
--   Receiving the <a>SESSION_STATE_VISIBLE</a> state indicates that the
--   application has <a>synchronized its frame loop with the runtime</a>,
--   and the session’s frames will be visible to the user, but the session
--   is not eligible to receive XR input. An application may be visible but
--   not have focus, for example when the runtime is composing a modal
--   pop-up on top of the application’s rendered frames. The application
--   <i>should</i> continue running its frame loop, rendering and
--   submitting its composition layers, although it may wish to pause its
--   experience, as users cannot interact with the application at this
--   time. It is important for applications to continue rendering when
--   visible, even when they do not have focus, so the user continues to
--   see something reasonable underneath modal pop-ups. Runtimes
--   <i>should</i> make input actions inactive while the application is
--   unfocused, and applications should react to an inactive input action
--   by skipping rendering of that action’s input avatar (depictions of
--   hands or other tracked objects controlled by the user).
--   
--   Receiving the <a>SESSION_STATE_FOCUSED</a> state indicates that the
--   application has <a>synchronized its frame loop with the runtime</a>,
--   the session’s frames will be visible to the user, and the session is
--   eligible to receive XR input. The runtime <i>should</i> only give one
--   session XR input focus at any given time. The application
--   <i>should</i> be running its frame loop, rendering and submitting
--   composition layers, including input avatars (depictions of hands or
--   other tracked objects controlled by the user) for any input actions
--   that are active. The runtime <i>should</i> avoid rendering its own
--   input avatars when an application is focused, unless input from a
--   given source is being captured by the runtime at the moment.
--   
--   Receiving the <a>SESSION_STATE_STOPPING</a> state indicates that the
--   runtime has determined that the application should halt its rendering
--   loop. Applications <i>should</i> exit their rendering loop and call
--   <a>endSession</a> when in this state. A possible reason for this would
--   be to minimize contention between multiple applications. If the system
--   supports a user engagement sensor and the session is running, the
--   runtime <i>should</i> transition to the <a>SESSION_STATE_STOPPING</a>
--   state when the user stops engaging with the device.
--   
--   Receiving the <a>SESSION_STATE_EXITING</a> state indicates the runtime
--   wishes the application to terminate its XR experience, typically due
--   to a user request via a runtime user interface. Applications
--   <i>should</i> gracefully end their process when in this state if they
--   do not have a non-XR user experience.
--   
--   Receiving the <a>SESSION_STATE_LOSS_PENDING</a> state indicates the
--   runtime is no longer able to operate with the current session, for
--   example due to the loss of a display hardware connection. An
--   application <i>should</i> call <a>destroySession</a> and <i>may</i>
--   end its process or decide to poll <a>getSystem</a> at some reasonable
--   cadence to get a new
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   and re-initialize all graphics resources related to the new system,
--   and then create a new session using <a>createSession</a>. After the
--   event is queued, subsequent calls to functions that accept
--   <a>Session</a> parameters <i>must</i> no longer return any success
--   code other than <a>SESSION_LOSS_PENDING</a> for the given
--   <a>Session</a> handle. The <a>SESSION_LOSS_PENDING</a> success result
--   is returned for an unspecified grace period of time, and the functions
--   that return it simulate success in their behavior. If the runtime has
--   no reasonable way to successfully complete a given function (e.g.
--   <a>createSwapchain</a>) when a lost session is pending, or if the
--   runtime is not able to provide the application a grace period, the
--   runtime <i>may</i> return <a>ERROR_SESSION_LOST</a>. Thereafter,
--   functions which accept <a>Session</a> parameters for the lost session
--   <i>may</i> return <a>ERROR_SESSION_LOST</a> to indicate that the
--   function failed and the given session was lost. The <a>Session</a>
--   handle and child handles are henceforth unusable and <i>should</i> be
--   destroyed by the application in order to immediately free up resources
--   associated with those handles.
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataSessionStateChanged</a>, <a>pollEvent</a>
newtype SessionState
SessionState :: Int32 -> SessionState

-- | <a>SESSION_STATE_UNKNOWN</a>. An unknown state. The runtime
--   <i>must</i> not return this value in an
--   <a>EventDataSessionStateChanged</a> event.
pattern SESSION_STATE_UNKNOWN :: SessionState

-- | <a>SESSION_STATE_IDLE</a>. The initial state after calling
--   <a>createSession</a> or returned to after calling <a>endSession</a>.
pattern SESSION_STATE_IDLE :: SessionState

-- | <a>SESSION_STATE_READY</a>. The application is ready to call
--   <a>beginSession</a> and <a>sync its frame loop with the runtime.</a>
pattern SESSION_STATE_READY :: SessionState

-- | <a>SESSION_STATE_SYNCHRONIZED</a>. The application has synced its
--   frame loop with the runtime but is not visible to the user.
pattern SESSION_STATE_SYNCHRONIZED :: SessionState

-- | <a>SESSION_STATE_VISIBLE</a>. The application has <a>synced its frame
--   loop with the runtime</a> and is visible to the user but cannot
--   receive XR input.
pattern SESSION_STATE_VISIBLE :: SessionState

-- | <a>SESSION_STATE_FOCUSED</a>. The application has <a>synced its frame
--   loop with the runtime</a>, is visible to the user and can receive XR
--   input.
pattern SESSION_STATE_FOCUSED :: SessionState

-- | <a>SESSION_STATE_STOPPING</a>. The application should exit its frame
--   loop and call <a>endSession</a>.
pattern SESSION_STATE_STOPPING :: SessionState

-- | <a>SESSION_STATE_LOSS_PENDING</a>. The session is in the process of
--   being lost. The application should destroy the current session and can
--   optionally recreate it.
pattern SESSION_STATE_LOSS_PENDING :: SessionState

-- | <a>SESSION_STATE_EXITING</a>. The application should end its XR
--   experience and not automatically restart it.
pattern SESSION_STATE_EXITING :: SessionState
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.SessionState.SessionState
instance Foreign.Storable.Storable OpenXR.Core10.Enums.SessionState.SessionState
instance GHC.Classes.Ord OpenXR.Core10.Enums.SessionState.SessionState
instance GHC.Classes.Eq OpenXR.Core10.Enums.SessionState.SessionState
instance GHC.Show.Show OpenXR.Core10.Enums.SessionState.SessionState
instance GHC.Read.Read OpenXR.Core10.Enums.SessionState.SessionState

module OpenXR.Core10.Enums.SessionCreateFlags

-- | XrSessionCreateFlags - Session Creation Flags
--   
--   <h1>Description</h1>
--   
--   There are currently no session creation flags. This is reserved for
--   future use.
--   
--   <h1>See Also</h1>
--   
--   <a>SessionCreateInfo</a>, <a>createSession</a>
newtype SessionCreateFlags
SessionCreateFlags :: Flags64 -> SessionCreateFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags
instance GHC.Show.Show OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags
instance GHC.Read.Read OpenXR.Core10.Enums.SessionCreateFlags.SessionCreateFlags

module OpenXR.Core10.Enums.Result

-- | XR_SUCCEEDED - Success convenience macro
--   
--   <h1>Description</h1>
--   
--   This may be a qualified success such as <a>FRAME_DISCARDED</a>.
--   
--   <h1>See Also</h1>
--   
--   <a>FAILED</a>, <a>UNQUALIFIED_SUCCESS</a>
pattern SUCCEEDED :: Result

-- | XR_UNQUALIFIED_SUCCESS - Unqualified success convenience macro
--   
--   <h1>Description</h1>
--   
--   used to compare an <a>Result</a> to <tt>0</tt> (<a>SUCCESS</a>)
--   exclusively.
--   
--   <h1>See Also</h1>
--   
--   <a>FAILED</a>, <a>SUCCEEDED</a>
pattern UNQUALIFIED_SUCCESS :: Result

-- | XR_FAILED - Failure convenience macro
--   
--   <h1>Description</h1>
--   
--   some way.
--   
--   <h1>See Also</h1>
--   
--   <a>SUCCEEDED</a>, <a>UNQUALIFIED_SUCCESS</a>
pattern FAILED :: Result

-- | XrResult - Result codes
--   
--   <h1>Description</h1>
--   
--   All return codes in the API are reported via <a>Result</a> return
--   values.
--   
--   Some common suffixes shared across many of the return codes are
--   defined below:
--   
--   <h1>See Also</h1>
--   
--   <a>resultToString</a>
newtype Result
Result :: Int32 -> Result
pattern SUCCESS :: Result
pattern TIMEOUT_EXPIRED :: Result
pattern SESSION_LOSS_PENDING :: Result
pattern EVENT_UNAVAILABLE :: Result
pattern SPACE_BOUNDS_UNAVAILABLE :: Result
pattern SESSION_NOT_FOCUSED :: Result
pattern FRAME_DISCARDED :: Result
pattern ERROR_VALIDATION_FAILURE :: Result
pattern ERROR_RUNTIME_FAILURE :: Result
pattern ERROR_OUT_OF_MEMORY :: Result
pattern ERROR_API_VERSION_UNSUPPORTED :: Result
pattern ERROR_INITIALIZATION_FAILED :: Result
pattern ERROR_FUNCTION_UNSUPPORTED :: Result
pattern ERROR_FEATURE_UNSUPPORTED :: Result
pattern ERROR_EXTENSION_NOT_PRESENT :: Result
pattern ERROR_LIMIT_REACHED :: Result
pattern ERROR_SIZE_INSUFFICIENT :: Result
pattern ERROR_HANDLE_INVALID :: Result
pattern ERROR_INSTANCE_LOST :: Result
pattern ERROR_SESSION_RUNNING :: Result
pattern ERROR_SESSION_NOT_RUNNING :: Result
pattern ERROR_SESSION_LOST :: Result
pattern ERROR_SYSTEM_INVALID :: Result
pattern ERROR_PATH_INVALID :: Result
pattern ERROR_PATH_COUNT_EXCEEDED :: Result
pattern ERROR_PATH_FORMAT_INVALID :: Result
pattern ERROR_PATH_UNSUPPORTED :: Result
pattern ERROR_LAYER_INVALID :: Result
pattern ERROR_LAYER_LIMIT_EXCEEDED :: Result
pattern ERROR_SWAPCHAIN_RECT_INVALID :: Result
pattern ERROR_SWAPCHAIN_FORMAT_UNSUPPORTED :: Result
pattern ERROR_ACTION_TYPE_MISMATCH :: Result
pattern ERROR_SESSION_NOT_READY :: Result
pattern ERROR_SESSION_NOT_STOPPING :: Result
pattern ERROR_TIME_INVALID :: Result
pattern ERROR_REFERENCE_SPACE_UNSUPPORTED :: Result
pattern ERROR_FILE_ACCESS_ERROR :: Result
pattern ERROR_FILE_CONTENTS_INVALID :: Result
pattern ERROR_FORM_FACTOR_UNSUPPORTED :: Result
pattern ERROR_FORM_FACTOR_UNAVAILABLE :: Result
pattern ERROR_API_LAYER_NOT_PRESENT :: Result
pattern ERROR_CALL_ORDER_INVALID :: Result
pattern ERROR_GRAPHICS_DEVICE_INVALID :: Result
pattern ERROR_POSE_INVALID :: Result
pattern ERROR_INDEX_OUT_OF_RANGE :: Result
pattern ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED :: Result
pattern ERROR_ENVIRONMENT_BLEND_MODE_UNSUPPORTED :: Result
pattern ERROR_NAME_DUPLICATED :: Result
pattern ERROR_NAME_INVALID :: Result
pattern ERROR_ACTIONSET_NOT_ATTACHED :: Result
pattern ERROR_ACTIONSETS_ALREADY_ATTACHED :: Result
pattern ERROR_LOCALIZED_NAME_DUPLICATED :: Result
pattern ERROR_LOCALIZED_NAME_INVALID :: Result
pattern ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING :: Result
pattern ERROR_COLOR_SPACE_UNSUPPORTED_FB :: Result
pattern ERROR_DISPLAY_REFRESH_RATE_UNSUPPORTED_FB :: Result
pattern ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT :: Result
pattern ERROR_SECONDARY_VIEW_CONFIGURATION_TYPE_NOT_ENABLED_MSFT :: Result
pattern ERROR_CREATE_SPATIAL_ANCHOR_FAILED_MSFT :: Result
pattern ERROR_ANDROID_THREAD_SETTINGS_FAILURE_KHR :: Result
pattern ERROR_ANDROID_THREAD_SETTINGS_ID_INVALID_KHR :: Result
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.Result.Result
instance Foreign.Storable.Storable OpenXR.Core10.Enums.Result.Result
instance GHC.Classes.Ord OpenXR.Core10.Enums.Result.Result
instance GHC.Classes.Eq OpenXR.Core10.Enums.Result.Result
instance GHC.Show.Show OpenXR.Core10.Enums.Result.Result
instance GHC.Read.Read OpenXR.Core10.Enums.Result.Result

module OpenXR.Exception

-- | This exception is thrown from calls to marshalled Vulkan commands
--   which return a negative VkResult.
newtype OpenXrException
OpenXrException :: Result -> OpenXrException
[$sel:vulkanExceptionResult:OpenXrException] :: OpenXrException -> Result
instance GHC.Show.Show OpenXR.Exception.OpenXrException
instance GHC.Read.Read OpenXR.Exception.OpenXrException
instance GHC.Classes.Ord OpenXR.Exception.OpenXrException
instance GHC.Classes.Eq OpenXR.Exception.OpenXrException
instance GHC.Exception.Type.Exception OpenXR.Exception.OpenXrException

module OpenXR.Core10.Enums.ReferenceSpaceType

-- | XrReferenceSpaceType - Reference space types
--   
--   <h1>Description</h1>
--   
--   Available reference space types are indicated by
--   <a>enumerateReferenceSpaces</a>. Note that other spaces can be created
--   as well, such as pose action spaces created by
--   <a>createActionSpace</a>, which are not enumerated by that API.
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataReferenceSpaceChangePending</a>,
--   <a>ReferenceSpaceCreateInfo</a>, <a>enumerateReferenceSpaces</a>,
--   <a>getReferenceSpaceBoundsRect</a>
newtype ReferenceSpaceType
ReferenceSpaceType :: Int32 -> ReferenceSpaceType

-- | <a>REFERENCE_SPACE_TYPE_VIEW</a>. The <tt>VIEW</tt> space tracks the
--   view origin used to generate view transforms for the primary viewer
--   (or centroid of view origins if stereo), with +Y up, +X to the right,
--   and -Z forward. This space points in the forward direction for the
--   viewer without incorporating the user’s eye orientation, and is not
--   gravity-aligned.
--   
--   <tt>VIEW</tt> space is primarily useful when projecting from the
--   user’s perspective into another space to obtain a targeting ray, or
--   when rendering small head-locked content such as a reticle. Content
--   rendered in <tt>VIEW</tt> space will stay at a fixed point on
--   head-mounted displays and may be uncomfortable to view if too large.
--   To obtain the ideal view and projection transforms to use each frame
--   for rendering world content, applications should call
--   <a>locateViews</a> instead of using this space.
--   
--   Runtimes <i>must</i> support this reference space.
pattern REFERENCE_SPACE_TYPE_VIEW :: ReferenceSpaceType

-- | <a>REFERENCE_SPACE_TYPE_LOCAL</a>. The <tt>LOCAL</tt> reference space
--   establishes a world-locked origin, gravity-aligned to exclude pitch
--   and roll, with +Y up, +X to the right, and -Z forward. This space
--   locks in both its initial position and orientation, which the runtime
--   <i>may</i> define to be either the initial position at application
--   launch or some other calibrated zero position.
--   
--   <tt>LOCAL</tt> space is useful when an application needs to render
--   <b>seated-scale</b> content that is not positioned relative to the
--   physical floor.
--   
--   When a user needs to recenter <tt>LOCAL</tt> space, a runtime
--   <i>may</i> offer some system-level recentering interaction that is
--   transparent to the application, but which causes the current leveled
--   head space to become the new <tt>LOCAL</tt> space. When such a
--   recentering occurs, the runtime <i>must</i> queue the
--   <a>EventDataReferenceSpaceChangePending</a> event, with the recentered
--   <tt>LOCAL</tt> space origin only taking effect for <a>locateSpace</a>
--   or <a>locateViews</a> calls whose
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   parameter is greater than or equal to the <tt>changeTime</tt> provided
--   in that event.
--   
--   When views, controllers or other spaces experience tracking loss
--   relative to the <tt>LOCAL</tt> space, runtimes <i>should</i> continue
--   to provide inferred or last-known <tt>position</tt> and
--   <tt>orientation</tt> values. These inferred poses can, for example, be
--   based on neck model updates, inertial dead reckoning, or a last-known
--   position, so long as it is still reasonable for the application to use
--   that pose. While a runtime is providing position data, it <i>must</i>
--   continue to set <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> and
--   <tt>XR_VIEW_STATE_POSITION_VALID_BIT</tt> but it <i>can</i> clear
--   <tt>XR_SPACE_LOCATION_POSITION_TRACKED_BIT</tt> and
--   <tt>XR_VIEW_STATE_POSITION_TRACKED_BIT</tt> to indicate that the
--   position is inferred or last-known in this way.
--   
--   When tracking is recovered, runtimes <i>should</i> snap the pose of
--   other spaces back into position relative to the <tt>LOCAL</tt> space’s
--   original origin.
--   
--   Runtimes <i>must</i> support this reference space.
pattern REFERENCE_SPACE_TYPE_LOCAL :: ReferenceSpaceType

-- | <a>REFERENCE_SPACE_TYPE_STAGE</a>. The <tt>STAGE</tt> reference space
--   is a runtime-defined flat, rectangular space that is empty and can be
--   walked around on. The origin is on the floor at the center of the
--   rectangle, with +Y up, and the X and Z axes aligned with the rectangle
--   edges. The runtime <i>may</i> not be able to locate spaces relative to
--   the <tt>STAGE</tt> reference space if the user has not yet defined one
--   within the runtime-specific UI. Applications can use
--   <a>getReferenceSpaceBoundsRect</a> to determine the extents of the
--   <tt>STAGE</tt> reference space’s XZ bounds rectangle, if defined.
--   
--   <tt>STAGE</tt> space is useful when an application needs to render
--   <b>standing-scale</b> content (no bounds) or <b>room-scale</b> content
--   (with bounds) that is relative to the physical floor.
--   
--   When the user redefines the origin or bounds of the current
--   <tt>STAGE</tt> space, or the runtime otherwise switches to a new
--   <tt>STAGE</tt> definition, the runtime <i>must</i> queue the
--   <a>EventDataReferenceSpaceChangePending</a> event, with the new
--   <tt>STAGE</tt> space origin only taking effect for <a>locateSpace</a>
--   or <a>locateViews</a> calls whose
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   parameter is greater than or equal to the <tt>changeTime</tt> provided
--   in that event.
--   
--   When views, controllers or other spaces experience tracking loss
--   relative to the <tt>STAGE</tt> space, runtimes <i>should</i> continue
--   to provide inferred or last-known <tt>position</tt> and
--   <tt>orientation</tt> values. These inferred poses can, for example, be
--   based on neck model updates, inertial dead reckoning, or a last-known
--   position, so long as it is still reasonable for the application to use
--   that pose. While a runtime is providing position data, it <i>must</i>
--   continue to set <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> and
--   <tt>XR_VIEW_STATE_POSITION_VALID_BIT</tt> but it <i>can</i> clear
--   <tt>XR_SPACE_LOCATION_POSITION_TRACKED_BIT</tt> and
--   <tt>XR_VIEW_STATE_POSITION_TRACKED_BIT</tt> to indicate that the
--   position is inferred or last-known in this way.
--   
--   When tracking is recovered, runtimes <i>should</i> snap the pose of
--   other spaces back into position relative to the <tt>STAGE</tt> space’s
--   original origin.
pattern REFERENCE_SPACE_TYPE_STAGE :: ReferenceSpaceType
pattern REFERENCE_SPACE_TYPE_UNBOUNDED_MSFT :: ReferenceSpaceType
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.ReferenceSpaceType.ReferenceSpaceType
instance Foreign.Storable.Storable OpenXR.Core10.Enums.ReferenceSpaceType.ReferenceSpaceType
instance GHC.Classes.Ord OpenXR.Core10.Enums.ReferenceSpaceType.ReferenceSpaceType
instance GHC.Classes.Eq OpenXR.Core10.Enums.ReferenceSpaceType.ReferenceSpaceType
instance GHC.Show.Show OpenXR.Core10.Enums.ReferenceSpaceType.ReferenceSpaceType
instance GHC.Read.Read OpenXR.Core10.Enums.ReferenceSpaceType.ReferenceSpaceType

module OpenXR.Core10.Enums.ObjectType

-- | XrObjectType - Specify an enumeration to track object handle types
--   
--   <h1>Description</h1>
--   
--   The <a>ObjectType</a> enumeration defines values, each of which
--   corresponds to a specific OpenXR handle type. These values <i>can</i>
--   be used to associate debug information with a particular type of
--   object through one or more extensions.
--   
--   The following table defines <a>ObjectType</a> and OpenXR Handle
--   relationships:
--   
--   TODO: table
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsObjectNameInfoEXT</a>
newtype ObjectType
ObjectType :: Int32 -> ObjectType
pattern OBJECT_TYPE_UNKNOWN :: ObjectType
pattern OBJECT_TYPE_INSTANCE :: ObjectType
pattern OBJECT_TYPE_SESSION :: ObjectType
pattern OBJECT_TYPE_SWAPCHAIN :: ObjectType
pattern OBJECT_TYPE_SPACE :: ObjectType
pattern OBJECT_TYPE_ACTION_SET :: ObjectType
pattern OBJECT_TYPE_ACTION :: ObjectType
pattern OBJECT_TYPE_HAND_TRACKER_EXT :: ObjectType
pattern OBJECT_TYPE_SPATIAL_ANCHOR_MSFT :: ObjectType
pattern OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT :: ObjectType
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.ObjectType.ObjectType
instance Foreign.Storable.Storable OpenXR.Core10.Enums.ObjectType.ObjectType
instance GHC.Classes.Ord OpenXR.Core10.Enums.ObjectType.ObjectType
instance GHC.Classes.Eq OpenXR.Core10.Enums.ObjectType.ObjectType
instance GHC.Show.Show OpenXR.Core10.Enums.ObjectType.ObjectType
instance GHC.Read.Read OpenXR.Core10.Enums.ObjectType.ObjectType

module OpenXR.Core10.Enums.InstanceCreateFlags

-- | XrInstanceCreateFlags - Instance Creation Flags
--   
--   <h1>Description</h1>
--   
--   There are currently no instance creation flags. This is reserved for
--   future use.
--   
--   <h1>See Also</h1>
--   
--   <a>InstanceCreateInfo</a>, <a>createInstance</a>
newtype InstanceCreateFlags
InstanceCreateFlags :: Flags64 -> InstanceCreateFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags
instance GHC.Show.Show OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags
instance GHC.Read.Read OpenXR.Core10.Enums.InstanceCreateFlags.InstanceCreateFlags

module OpenXR.Core10.Enums.InputSourceLocalizedNameFlags

-- | XrInputSourceLocalizedNameFlags - Input source localized name flags
--   
--   <h2>Flag Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>InputSourceLocalizedNameGetInfo</a>,
--   <a>getInputSourceLocalizedName</a>
newtype InputSourceLocalizedNameFlags
InputSourceLocalizedNameFlags :: Flags64 -> InputSourceLocalizedNameFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags
instance GHC.Show.Show OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags
instance GHC.Read.Read OpenXR.Core10.Enums.InputSourceLocalizedNameFlags.InputSourceLocalizedNameFlags

module OpenXR.Core10.Enums.FormFactor

-- | XrFormFactor - Supported form factors
--   
--   <h1>Description</h1>
--   
--   The predefined form factors which <i>may</i> be supported by OpenXR
--   runtimes are:
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>NULL_SYSTEM_ID</a>, <a>SystemGetInfo</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>getSystem</a>
newtype FormFactor
FormFactor :: Int32 -> FormFactor

-- | <a>FORM_FACTOR_HEAD_MOUNTED_DISPLAY</a>. The tracked display is
--   attached to the user’s head. The user cannot touch the display itself.
--   A VR headset would be an example of this form factor.
pattern FORM_FACTOR_HEAD_MOUNTED_DISPLAY :: FormFactor

-- | <a>FORM_FACTOR_HANDHELD_DISPLAY</a>. The tracked display is held in
--   the user’s hand, independent from the user’s head. The user <i>may</i>
--   be able to touch the display, allowing for screen-space UI. A mobile
--   phone running an AR experience using pass-through video would be an
--   example of this form factor.
pattern FORM_FACTOR_HANDHELD_DISPLAY :: FormFactor
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.FormFactor.FormFactor
instance Foreign.Storable.Storable OpenXR.Core10.Enums.FormFactor.FormFactor
instance GHC.Classes.Ord OpenXR.Core10.Enums.FormFactor.FormFactor
instance GHC.Classes.Eq OpenXR.Core10.Enums.FormFactor.FormFactor
instance GHC.Show.Show OpenXR.Core10.Enums.FormFactor.FormFactor
instance GHC.Read.Read OpenXR.Core10.Enums.FormFactor.FormFactor

module OpenXR.Core10.Enums.EyeVisibility

-- | XrEyeVisibility - Eye visibility selector
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerCubeKHR</a>, <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>, <a>CompositionLayerQuad</a>
newtype EyeVisibility
EyeVisibility :: Int32 -> EyeVisibility

-- | <a>EYE_VISIBILITY_BOTH</a> displays the layer to both eyes.
pattern EYE_VISIBILITY_BOTH :: EyeVisibility

-- | <a>EYE_VISIBILITY_LEFT</a> displays the layer to the viewer’s physical
--   left eye.
pattern EYE_VISIBILITY_LEFT :: EyeVisibility

-- | <a>EYE_VISIBILITY_RIGHT</a> displays the layer to the viewer’s
--   physical right eye.
pattern EYE_VISIBILITY_RIGHT :: EyeVisibility
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.EyeVisibility.EyeVisibility
instance Foreign.Storable.Storable OpenXR.Core10.Enums.EyeVisibility.EyeVisibility
instance GHC.Classes.Ord OpenXR.Core10.Enums.EyeVisibility.EyeVisibility
instance GHC.Classes.Eq OpenXR.Core10.Enums.EyeVisibility.EyeVisibility
instance GHC.Show.Show OpenXR.Core10.Enums.EyeVisibility.EyeVisibility
instance GHC.Read.Read OpenXR.Core10.Enums.EyeVisibility.EyeVisibility

module OpenXR.Core10.Enums.EnvironmentBlendMode

-- | XrEnvironmentBlendMode - Environment blend modes
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>FrameEndInfo</a>, <a>SecondaryViewConfigurationLayerInfoMSFT</a>,
--   <a>enumerateEnvironmentBlendModes</a>
newtype EnvironmentBlendMode
EnvironmentBlendMode :: Int32 -> EnvironmentBlendMode

-- | <a>ENVIRONMENT_BLEND_MODE_OPAQUE</a>. The composition layers will be
--   displayed with no view of the physical world behind them. The
--   composited image will be interpreted as an RGB image, ignoring the
--   composited alpha channel. This is the typical mode for VR experiences,
--   although this mode can also be supported on devices that support video
--   passthrough.
pattern ENVIRONMENT_BLEND_MODE_OPAQUE :: EnvironmentBlendMode

-- | <a>ENVIRONMENT_BLEND_MODE_ADDITIVE</a>. The composition layers will be
--   additively blended with the real world behind the display. The
--   composited image will be interpreted as an RGB image, ignoring the
--   composited alpha channel during the additive blending. This will cause
--   black composited pixels to appear transparent. This is the typical
--   mode for an AR experience on a see-through headset with an additive
--   display, although this mode can also be supported on devices that
--   support video passthrough.
pattern ENVIRONMENT_BLEND_MODE_ADDITIVE :: EnvironmentBlendMode

-- | <a>ENVIRONMENT_BLEND_MODE_ALPHA_BLEND</a>. The composition layers will
--   be alpha-blended with the real world behind the display. The
--   composited image will be interpreted as an RGBA image, with the
--   composited alpha channel determining each pixel’s level of blending
--   with the real world behind the display. This is the typical mode for
--   an AR experience on a phone or headset that supports video
--   passthrough.
pattern ENVIRONMENT_BLEND_MODE_ALPHA_BLEND :: EnvironmentBlendMode
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.EnvironmentBlendMode.EnvironmentBlendMode
instance Foreign.Storable.Storable OpenXR.Core10.Enums.EnvironmentBlendMode.EnvironmentBlendMode
instance GHC.Classes.Ord OpenXR.Core10.Enums.EnvironmentBlendMode.EnvironmentBlendMode
instance GHC.Classes.Eq OpenXR.Core10.Enums.EnvironmentBlendMode.EnvironmentBlendMode
instance GHC.Show.Show OpenXR.Core10.Enums.EnvironmentBlendMode.EnvironmentBlendMode
instance GHC.Read.Read OpenXR.Core10.Enums.EnvironmentBlendMode.EnvironmentBlendMode

module OpenXR.Core10.Enums.CompositionLayerFlags

-- | XrCompositionLayerFlags - Composition layer flags
--   
--   <h1>Description</h1>
--   
--   <a>CompositionLayerFlags</a> specify options for individual
--   composition layers.
--   
--   <h2>Flag Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerCubeKHR</a>,
--   <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>, <a>CompositionLayerProjection</a>,
--   <a>CompositionLayerQuad</a>
newtype CompositionLayerFlags
CompositionLayerFlags :: Flags64 -> CompositionLayerFlags
instance Data.Bits.FiniteBits OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags
instance Data.Bits.Bits OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags
instance Foreign.Storable.Storable OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags
instance GHC.Classes.Ord OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags
instance GHC.Classes.Eq OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags
instance GHC.Show.Show OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags
instance GHC.Read.Read OpenXR.Core10.Enums.CompositionLayerFlags.CompositionLayerFlags

module OpenXR.Core10.Enums.ActionType

-- | XrActionType - XrAction type
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>ActionCreateInfo</a>, <a>createActionSet</a>
newtype ActionType
ActionType :: Int32 -> ActionType

-- | <a>ACTION_TYPE_BOOLEAN_INPUT</a>. The action can be passed to
--   <a>getActionStateBoolean</a> to retrieve a boolean value.
pattern ACTION_TYPE_BOOLEAN_INPUT :: ActionType

-- | <a>ACTION_TYPE_FLOAT_INPUT</a>. The action can be passed to
--   <a>getActionStateFloat</a> to retrieve a float value.
pattern ACTION_TYPE_FLOAT_INPUT :: ActionType

-- | <a>ACTION_TYPE_VECTOR2F_INPUT</a>. The action can be passed to
--   <a>getActionStateVector2f</a> to retrieve a 2D float vector.
pattern ACTION_TYPE_VECTOR2F_INPUT :: ActionType

-- | <a>ACTION_TYPE_POSE_INPUT</a>. The action can can be passed to
--   <a>createActionSpace</a> to create a space.
pattern ACTION_TYPE_POSE_INPUT :: ActionType

-- | <a>ACTION_TYPE_VIBRATION_OUTPUT</a>. The action can be passed to
--   <a>applyHapticFeedback</a> to send a haptic event to the runtime.
pattern ACTION_TYPE_VIBRATION_OUTPUT :: ActionType
instance Vulkan.Zero.Zero OpenXR.Core10.Enums.ActionType.ActionType
instance Foreign.Storable.Storable OpenXR.Core10.Enums.ActionType.ActionType
instance GHC.Classes.Ord OpenXR.Core10.Enums.ActionType.ActionType
instance GHC.Classes.Eq OpenXR.Core10.Enums.ActionType.ActionType
instance GHC.Show.Show OpenXR.Core10.Enums.ActionType.ActionType
instance GHC.Read.Read OpenXR.Core10.Enums.ActionType.ActionType

module OpenXR.Core10.Enums

module OpenXR.Core10.APIConstants

-- | XR_MIN_HAPTIC_DURATION - Indicates the shortest valid duration for the
--   device
--   
--   <h1>See Also</h1>
--   
--   <a>applyHapticFeedback</a>
pattern MIN_HAPTIC_DURATION :: forall a. Integral a => a
type MAX_EXTENSION_NAME_SIZE = 128
pattern MAX_EXTENSION_NAME_SIZE :: forall a. Integral a => a
type MAX_API_LAYER_NAME_SIZE = 256
pattern MAX_API_LAYER_NAME_SIZE :: forall a. Integral a => a
type MAX_API_LAYER_DESCRIPTION_SIZE = 256
pattern MAX_API_LAYER_DESCRIPTION_SIZE :: forall a. Integral a => a
type MAX_SYSTEM_NAME_SIZE = 256
pattern MAX_SYSTEM_NAME_SIZE :: forall a. Integral a => a
type MAX_APPLICATION_NAME_SIZE = 128
pattern MAX_APPLICATION_NAME_SIZE :: forall a. Integral a => a
type MAX_ENGINE_NAME_SIZE = 128
pattern MAX_ENGINE_NAME_SIZE :: forall a. Integral a => a
type MAX_RUNTIME_NAME_SIZE = 128
pattern MAX_RUNTIME_NAME_SIZE :: forall a. Integral a => a
type MAX_PATH_LENGTH = 256
pattern MAX_PATH_LENGTH :: forall a. Integral a => a
type MAX_STRUCTURE_NAME_SIZE = 64
pattern MAX_STRUCTURE_NAME_SIZE :: forall a. Integral a => a
type MAX_RESULT_STRING_SIZE = 64
pattern MAX_RESULT_STRING_SIZE :: forall a. Integral a => a
type MAX_GRAPHICS_APIS_SUPPORTED = 32
pattern MAX_GRAPHICS_APIS_SUPPORTED :: forall a. Integral a => a
type MAX_ACTION_SET_NAME_SIZE = 64
pattern MAX_ACTION_SET_NAME_SIZE :: forall a. Integral a => a
type MAX_ACTION_NAME_SIZE = 64
pattern MAX_ACTION_NAME_SIZE :: forall a. Integral a => a
type MAX_LOCALIZED_ACTION_SET_NAME_SIZE = 128
pattern MAX_LOCALIZED_ACTION_SET_NAME_SIZE :: forall a. Integral a => a
type MAX_LOCALIZED_ACTION_NAME_SIZE = 128
pattern MAX_LOCALIZED_ACTION_NAME_SIZE :: forall a. Integral a => a
type MIN_COMPOSITION_LAYERS_SUPPORTED = 16
pattern MIN_COMPOSITION_LAYERS_SUPPORTED :: forall a. Integral a => a
type NULL_PATH = 0

-- | XR_NULL_PATH - A NULL semantic path
--   
--   <h1>Description</h1>
--   
--   The only
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   value defined to be constant across all instances is the invalid path
--   <a>NULL_PATH</a>. No well-formed path string is associated with
--   <a>NULL_PATH</a>. Unless explicitly permitted, it <i>should</i> not be
--   passed to API calls or used as a structure attribute when a valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   is required.
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
pattern NULL_PATH :: forall a. Integral a => a
type NULL_SYSTEM_ID = 0

-- | XR_NULL_SYSTEM_ID - NULL system identifier
--   
--   <h1>Description</h1>
--   
--   The only
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   value defined to be constant across all instances is the invalid
--   system <a>NULL_SYSTEM_ID</a>. No supported system is associated with
--   <a>NULL_SYSTEM_ID</a>. Unless explicitly permitted, it <i>should</i>
--   not be passed to API calls or used as a structure attribute when a
--   valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   is required.
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>getSystem</a>
pattern NULL_SYSTEM_ID :: forall a. Integral a => a
type NO_DURATION = 0

-- | XR_NO_DURATION - Constant for no duration/immediate timeout
--   
--   <h1>Description</h1>
--   
--   For the case of timeout durations, <a>NO_DURATION</a> <i>may</i> be
--   used to indicate that the timeout is immediate.
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>
pattern NO_DURATION :: forall a. Integral a => a
type INFINITE_DURATION = 9223372036854775807

-- | XR_INFINITE_DURATION - Constant for infinite duration/never times out
--   
--   <h1>Description</h1>
--   
--   <a>INFINITE_DURATION</a> is a special value that <i>may</i> be used to
--   indicate that the timeout never occurs. A timeout with a duration that
--   refers to the past has the same effect as a timeout of
--   <a>NO_DURATION</a>.
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>
pattern INFINITE_DURATION :: Int64
type FREQUENCY_UNSPECIFIED = 0

-- | XR_FREQUENCY_UNSPECIFIED - Runtime should determine optimal frequency
--   for haptic pulse
--   
--   <h1>See Also</h1>
--   
--   <a>applyHapticFeedback</a>
pattern FREQUENCY_UNSPECIFIED :: forall a. Integral a => a
type MAX_EVENT_DATA_SIZE = 4016

-- | XR_MAX_EVENT_DATA_SIZE - Maximum event data buffer size
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataBuffer</a>
pattern MAX_EVENT_DATA_SIZE :: Int
type HAND_JOINT_COUNT_EXT = 26

-- | XR_HAND_JOINT_COUNT_EXT - The number of hand joint enums defined in
--   XrHandJointEXT
--   
--   <h1>Description</h1>
--   
--   <a>HAND_JOINT_COUNT_EXT</a> defines the number of hand joint
--   enumerants defined in <a>HandJointEXT</a>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointEXT</a>
pattern HAND_JOINT_COUNT_EXT :: forall a. Integral a => a
type NULL_CONTROLLER_MODEL_KEY_MSFT = 0

-- | XR_NULL_CONTROLLER_MODEL_KEY_MSFT - The value representing an invalid
--   model key
--   
--   <h1>Description</h1>
--   
--   <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a> defines an invalid model key
--   value.
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrControllerModelKeyMSFT</a>
pattern NULL_CONTROLLER_MODEL_KEY_MSFT :: forall a. Integral a => a
pattern VK_NULL_HANDLE :: IsHandle a => a

-- | A class for things which can be created with <a>VK_NULL_HANDLE</a>.
class (Eq a, Zero a) => IsHandle a
class HasObjectType a
objectTypeAndHandle :: HasObjectType a => a -> (ObjectType, Word64)

-- | XrBool32 - Boolean value
--   
--   <h1>Description</h1>
--   
--   Boolean values used by OpenXR are of type
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   and are 32-bits wide as suggested by the name. The only valid values
--   are the following:
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateBoolean</a>, <a>ActionStateFloat</a>,
--   <a>ActionStatePose</a>, <a>ActionStateVector2f</a>,
--   <a>EventDataMainSessionVisibilityChangedEXTX</a>,
--   <a>EventDataReferenceSpaceChangePending</a>, <a>FrameState</a>,
--   <a>HandJointLocationsEXT</a>, <a>HandMeshMSFT</a>,
--   <a>SecondaryViewConfigurationStateMSFT</a>,
--   <a>SystemEyeGazeInteractionPropertiesEXT</a>,
--   <a>SystemHandTrackingMeshPropertiesMSFT</a>,
--   <a>SystemHandTrackingPropertiesEXT</a>,
--   <a>SystemTrackingProperties</a>, <a>ViewConfigurationProperties</a>,
--   <a>xrSetInputDeviceActiveEXT</a>, <a>xrSetInputDeviceStateBoolEXT</a>
newtype Bool32
Bool32 :: Int32 -> Bool32

-- | <a>FALSE</a> represents a false value.
pattern FALSE :: Bool32

-- | <a>TRUE</a> represents a true value.
pattern TRUE :: Bool32

module OpenXR.CStruct.Extends

-- | XrBaseInStructure - Convenience type for iterating (read only)
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>BaseInStructure</a> can be used to facilitate iterating through a
--   read-only structure pointer chain.
--   
--   <h1>See Also</h1>
--   
--   <a>BaseInStructure</a>, <a>BaseOutStructure</a>, <a>StructureType</a>
data BaseInStructure
BaseInStructure :: StructureType -> Ptr BaseInStructure -> BaseInStructure

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
[$sel:type':BaseInStructure] :: BaseInStructure -> StructureType

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
[$sel:next:BaseInStructure] :: BaseInStructure -> Ptr BaseInStructure

-- | XrBaseOutStructure - Convenience type for iterating (mutable)
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>BaseOutStructure</a> can be used to facilitate iterating through a
--   structure pointer chain that returns data back to the application.
--   
--   <h1>See Also</h1>
--   
--   <a>BaseInStructure</a>, <a>BaseOutStructure</a>, <a>StructureType</a>
data BaseOutStructure
BaseOutStructure :: StructureType -> Ptr BaseOutStructure -> BaseOutStructure

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
[$sel:type':BaseOutStructure] :: BaseOutStructure -> StructureType

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
[$sel:next:BaseOutStructure] :: BaseOutStructure -> Ptr BaseOutStructure
type family Extends (a :: [Type] -> Type) (b :: Type) :: Constraint
class PeekChain es
peekChain :: PeekChain es => Ptr (Chain es) -> IO (Chain es)
class PokeChain es
withChain :: PokeChain es => Chain es -> (Ptr (Chain es) -> IO a) -> IO a
withZeroChain :: PokeChain es => (Ptr (Chain es) -> IO a) -> IO a
type family Chain (xs :: [a]) = (r :: a) | r -> xs
type family Extendss (p :: [Type] -> Type) (xs :: [Type]) :: Constraint
data SomeStruct (a :: [Type] -> Type)
[SomeStruct] :: forall a es. (Extendss a es, PokeChain es, Show (Chain es)) => a es -> SomeStruct a

-- | Add an extension to the beginning of the struct chain
--   
--   This can be used to optionally extend structs based on some condition
--   (for example, an extension or layer being available)
extendSomeStruct :: (Extensible a, Extends a e, ToCStruct e, Show e) => e -> SomeStruct a -> SomeStruct a

-- | Consume a <a>SomeStruct</a> value
withSomeStruct :: forall a b. SomeStruct a -> (forall es. (Extendss a es, PokeChain es, Show (Chain es)) => a es -> b) -> b

-- | Write the C representation of some extended <tt>a</tt> and use the
--   pointer, the pointer must not be returned from the continuation.
withSomeCStruct :: forall a b. (forall es. (Extendss a es, PokeChain es) => ToCStruct (a es)) => SomeStruct a -> (forall es. (Extendss a es, PokeChain es) => Ptr (a es) -> IO b) -> IO b

-- | Given a pointer to a struct with an unknown chain, peek the struct and
--   its chain.
peekSomeCStruct :: forall a. (Extensible a, forall es. (Extendss a es, PeekChain es) => FromCStruct (a es)) => Ptr (SomeStruct a) -> IO (SomeStruct a)

-- | Given some memory for the head of the chain, allocate and poke the
--   tail and run an action.
pokeSomeCStruct :: (forall es. (Extendss a es, PokeChain es) => ToCStruct (a es)) => Ptr (SomeStruct a) -> SomeStruct a -> IO b -> IO b

-- | Forget which extensions a pointed-to struct has by casting the pointer
forgetExtensions :: Ptr (a es) -> Ptr (SomeStruct a)
class Extensible (a :: [Type] -> Type)

-- | For error reporting an invalid extension
extensibleTypeName :: Extensible a => String
getNext :: Extensible a => a es -> Chain es
setNext :: Extensible a => a ds -> Chain es -> a es
extends :: forall e b proxy. (Extensible a, Typeable e) => proxy e -> (Extends a e => b) -> Maybe b

-- | A pattern synonym to separate the head of a struct chain from the
--   tail, use in conjunction with <a>:&amp;</a> to extract several
--   members.
--   
--   <pre>
--   Head{..} ::&amp; () &lt;- returningNoTail a b c
--   -- Equivalent to
--   Head{..} &lt;- returningNoTail @'[] a b c
--   </pre>
--   
--   <pre>
--   Head{..} ::&amp; Foo{..} :&amp; Bar{..} :&amp; () &lt;- returningWithTail a b c
--   </pre>
--   
--   <pre>
--   myFun (Head{..} :&amp;&amp; Foo{..} :&amp; ())
--   </pre>
pattern (::&) :: Extensible a => a es' -> Chain es -> a es
infix 6 ::&

-- | View the head and tail of a <a>Chain</a>, see <a>::&amp;</a>
--   
--   Equivalent to <tt>(,)</tt>
pattern (:&) :: e -> Chain es -> Chain (e : es)
infixr 7 :&
data SomeChild (a :: Type)
[SomeChild] :: forall a b. (Inherits a b, Typeable b, ToCStruct b, Show b) => b -> SomeChild a
withSomeChild :: SomeChild a -> (Ptr (SomeChild a) -> IO b) -> IO b
lowerChildPointer :: Inherits a b => Ptr b -> Ptr (SomeChild a)
type family Inherits (a :: Type) (b :: Type) :: Constraint
class Inheritable (a :: Type)
peekSomeCChild :: Inheritable a => Ptr (SomeChild a) -> IO (SomeChild a)
instance GHC.Classes.Eq OpenXR.CStruct.Extends.BaseOutStructure
instance GHC.Classes.Eq OpenXR.CStruct.Extends.BaseInStructure
instance GHC.Show.Show OpenXR.CStruct.Extends.BaseInStructure
instance GHC.Show.Show OpenXR.CStruct.Extends.BaseOutStructure
instance (forall (es :: [*]). GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (a es)) => GHC.Show.Show (OpenXR.CStruct.Extends.SomeStruct a)
instance GHC.Show.Show (OpenXR.CStruct.Extends.SomeChild a)
instance OpenXR.CStruct.Extends.PeekChain '[]
instance (Vulkan.CStruct.FromCStruct e, OpenXR.CStruct.Extends.PeekChain es) => OpenXR.CStruct.Extends.PeekChain (e : es)
instance Vulkan.Zero.Zero (a '[]) => Vulkan.Zero.Zero (OpenXR.CStruct.Extends.SomeStruct a)
instance OpenXR.CStruct.Extends.PokeChain '[]
instance (Vulkan.CStruct.ToCStruct e, OpenXR.CStruct.Extends.PokeChain es) => OpenXR.CStruct.Extends.PokeChain (e : es)
instance Vulkan.CStruct.ToCStruct OpenXR.CStruct.Extends.BaseOutStructure
instance Vulkan.CStruct.FromCStruct OpenXR.CStruct.Extends.BaseOutStructure
instance Foreign.Storable.Storable OpenXR.CStruct.Extends.BaseOutStructure
instance Vulkan.Zero.Zero OpenXR.CStruct.Extends.BaseOutStructure
instance Vulkan.CStruct.ToCStruct OpenXR.CStruct.Extends.BaseInStructure
instance Vulkan.CStruct.FromCStruct OpenXR.CStruct.Extends.BaseInStructure
instance Foreign.Storable.Storable OpenXR.CStruct.Extends.BaseInStructure
instance Vulkan.Zero.Zero OpenXR.CStruct.Extends.BaseInStructure

module OpenXR.Dynamic
data InstanceCmds
InstanceCmds :: Ptr Instance_T -> FunPtr (Ptr Instance_T -> ("name" ::: Ptr CChar) -> Ptr PFN_xrVoidFunction -> IO Result) -> FunPtr (Ptr Instance_T -> IO Result) -> FunPtr (Ptr Instance_T -> ("value" ::: Result) -> ("buffer" ::: Ptr (FixedArray MAX_RESULT_STRING_SIZE CChar)) -> IO Result) -> FunPtr (Ptr Instance_T -> ("value" ::: StructureType) -> ("buffer" ::: Ptr (FixedArray MAX_STRUCTURE_NAME_SIZE CChar)) -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr InstanceProperties -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr SystemGetInfo -> Ptr SystemId -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ("properties" ::: Ptr (SomeStruct SystemProperties)) -> IO Result) -> FunPtr (Ptr Instance_T -> ("createInfo" ::: Ptr (SomeStruct SessionCreateInfo)) -> ("session" ::: Ptr (Ptr Session_T)) -> IO Result) -> FunPtr (Ptr Session_T -> IO Result) -> FunPtr (Ptr Space_T -> IO Result) -> FunPtr (Ptr Session_T -> ("formatCapacityInput" ::: Word32) -> ("formatCountOutput" ::: Ptr Word32) -> ("formats" ::: Ptr Int64) -> IO Result) -> FunPtr (Ptr Session_T -> ("createInfo" ::: Ptr (SomeStruct SwapchainCreateInfo)) -> ("swapchain" ::: Ptr (Ptr Swapchain_T)) -> IO Result) -> FunPtr (Ptr Swapchain_T -> IO Result) -> FunPtr (Ptr Swapchain_T -> ("imageCapacityInput" ::: Word32) -> ("imageCountOutput" ::: Ptr Word32) -> ("images" ::: Ptr (SomeChild SwapchainImageBaseHeader)) -> IO Result) -> FunPtr (Ptr Swapchain_T -> Ptr SwapchainImageAcquireInfo -> ("index" ::: Ptr Word32) -> IO Result) -> FunPtr (Ptr Swapchain_T -> Ptr SwapchainImageWaitInfo -> IO Result) -> FunPtr (Ptr Swapchain_T -> Ptr SwapchainImageReleaseInfo -> IO Result) -> FunPtr (Ptr Session_T -> ("beginInfo" ::: Ptr (SomeStruct SessionBeginInfo)) -> IO Result) -> FunPtr (Ptr Session_T -> IO Result) -> FunPtr (Ptr Session_T -> IO Result) -> FunPtr (Ptr Session_T -> ("spaceCapacityInput" ::: Word32) -> ("spaceCountOutput" ::: Ptr Word32) -> ("spaces" ::: Ptr ReferenceSpaceType) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ReferenceSpaceCreateInfo -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ActionSpaceCreateInfo -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result) -> FunPtr (Ptr Space_T -> ("baseSpace" ::: Ptr Space_T) -> Time -> ("location" ::: Ptr (SomeStruct SpaceLocation)) -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ("viewConfigurationTypeCapacityInput" ::: Word32) -> ("viewConfigurationTypeCountOutput" ::: Ptr Word32) -> ("viewConfigurationTypes" ::: Ptr ViewConfigurationType) -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ViewConfigurationType -> ("environmentBlendModeCapacityInput" ::: Word32) -> ("environmentBlendModeCountOutput" ::: Ptr Word32) -> ("environmentBlendModes" ::: Ptr EnvironmentBlendMode) -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ViewConfigurationType -> Ptr ViewConfigurationProperties -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ViewConfigurationType -> ("viewCapacityInput" ::: Word32) -> ("viewCountOutput" ::: Ptr Word32) -> ("views" ::: Ptr (SomeStruct ViewConfigurationView)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr FrameBeginInfo -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ViewLocateInfo -> Ptr ViewState -> ("viewCapacityInput" ::: Word32) -> ("viewCountOutput" ::: Ptr Word32) -> ("views" ::: Ptr View) -> IO Result) -> FunPtr (Ptr Session_T -> ("frameEndInfo" ::: Ptr (SomeStruct FrameEndInfo)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr FrameWaitInfo -> ("frameState" ::: Ptr (SomeStruct FrameState)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr HapticActionInfo -> ("hapticFeedback" ::: Ptr (SomeChild HapticBaseHeader)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr HapticActionInfo -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr EventDataBuffer -> IO Result) -> FunPtr (Ptr Instance_T -> ("pathString" ::: Ptr CChar) -> Ptr Path -> IO Result) -> FunPtr (Ptr Instance_T -> Path -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result) -> FunPtr (Ptr Session_T -> ReferenceSpaceType -> ("bounds" ::: Ptr Extent2Df) -> IO Result) -> FunPtr (Ptr Session_T -> AndroidThreadTypeKHR -> ("threadId" ::: Word32) -> IO Result) -> FunPtr (Ptr Session_T -> ("info" ::: Ptr (SomeStruct SwapchainCreateInfo)) -> ("swapchain" ::: Ptr (Ptr Swapchain_T)) -> ("surface" ::: Ptr Jobject) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStateBoolean -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStateFloat -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStateVector2f -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStatePose -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr ActionSetCreateInfo -> ("actionSet" ::: Ptr (Ptr ActionSet_T)) -> IO Result) -> FunPtr (Ptr ActionSet_T -> IO Result) -> FunPtr (Ptr ActionSet_T -> Ptr ActionCreateInfo -> ("action" ::: Ptr (Ptr Action_T)) -> IO Result) -> FunPtr (Ptr Action_T -> IO Result) -> FunPtr (Ptr Instance_T -> ("suggestedBindings" ::: Ptr (SomeStruct InteractionProfileSuggestedBinding)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr SessionActionSetsAttachInfo -> IO Result) -> FunPtr (Ptr Session_T -> ("topLevelUserPath" ::: Path) -> Ptr InteractionProfileState -> IO Result) -> FunPtr (Ptr Session_T -> Ptr ActionsSyncInfo -> IO Result) -> FunPtr (Ptr Session_T -> Ptr BoundSourcesForActionEnumerateInfo -> ("sourceCapacityInput" ::: Word32) -> ("sourceCountOutput" ::: Ptr Word32) -> ("sources" ::: Ptr Path) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr InputSourceLocalizedNameGetInfo -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> ("vkInstance" ::: Ptr Instance_T) -> ("vkPhysicalDevice" ::: Ptr (Ptr PhysicalDevice_T)) -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsOpenGLKHR -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsOpenGLESKHR -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsVulkanKHR -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsD3D11KHR -> IO Result) -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsD3D12KHR -> IO Result) -> FunPtr (Ptr Session_T -> PerfSettingsDomainEXT -> PerfSettingsLevelEXT -> IO Result) -> FunPtr (Ptr Session_T -> PerfSettingsDomainEXT -> Ptr PerfSettingsNotificationLevelEXT -> ("tempHeadroom" ::: Ptr CFloat) -> ("tempSlope" ::: Ptr CFloat) -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr DebugUtilsObjectNameInfoEXT -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr DebugUtilsMessengerCreateInfoEXT -> ("messenger" ::: Ptr (Ptr DebugUtilsMessengerEXT_T)) -> IO Result) -> FunPtr (Ptr DebugUtilsMessengerEXT_T -> IO Result) -> FunPtr (Ptr Instance_T -> DebugUtilsMessageSeverityFlagsEXT -> ("messageTypes" ::: DebugUtilsMessageTypeFlagsEXT) -> Ptr DebugUtilsMessengerCallbackDataEXT -> IO Result) -> FunPtr (Ptr Session_T -> ("labelInfo" ::: Ptr DebugUtilsLabelEXT) -> IO Result) -> FunPtr (Ptr Session_T -> IO Result) -> FunPtr (Ptr Session_T -> ("labelInfo" ::: Ptr DebugUtilsLabelEXT) -> IO Result) -> FunPtr (Ptr Instance_T -> Time -> ("performanceCounter" ::: Ptr LARGE_INTEGER) -> IO Result) -> FunPtr (Ptr Instance_T -> ("performanceCounter" ::: Ptr LARGE_INTEGER) -> Ptr Time -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr VulkanInstanceCreateInfoKHR -> ("vulkanInstance" ::: Ptr (Ptr Instance_T)) -> ("vulkanResult" ::: Ptr Result) -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr VulkanDeviceCreateInfoKHR -> ("vulkanDevice" ::: Ptr (Ptr Device_T)) -> ("vulkanResult" ::: Ptr Result) -> IO Result) -> FunPtr (Ptr Instance_T -> Ptr VulkanGraphicsDeviceGetInfoKHR -> ("vulkanPhysicalDevice" ::: Ptr (Ptr PhysicalDevice_T)) -> IO Result) -> FunPtr (Ptr Instance_T -> Time -> ("timespecTime" ::: Ptr Timespec) -> IO Result) -> FunPtr (Ptr Instance_T -> ("timespecTime" ::: Ptr Timespec) -> Ptr Time -> IO Result) -> FunPtr (Ptr Session_T -> ViewConfigurationType -> ("viewIndex" ::: Word32) -> VisibilityMaskTypeKHR -> Ptr VisibilityMaskKHR -> IO Result) -> FunPtr (Ptr Session_T -> Ptr SpatialAnchorCreateInfoMSFT -> ("anchor" ::: Ptr (Ptr SpatialAnchorMSFT_T)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr SpatialAnchorSpaceCreateInfoMSFT -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result) -> FunPtr (Ptr SpatialAnchorMSFT_T -> IO Result) -> FunPtr (Ptr Session_T -> Ptr SpatialGraphNodeSpaceCreateInfoMSFT -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result) -> FunPtr (Ptr Session_T -> ("createInfo" ::: Ptr (SomeStruct HandTrackerCreateInfoEXT)) -> ("handTracker" ::: Ptr (Ptr HandTrackerEXT_T)) -> IO Result) -> FunPtr (Ptr HandTrackerEXT_T -> IO Result) -> FunPtr (Ptr HandTrackerEXT_T -> Ptr HandJointsLocateInfoEXT -> ("locations" ::: Ptr (SomeStruct HandJointLocationsEXT)) -> IO Result) -> FunPtr (Ptr HandTrackerEXT_T -> Ptr HandMeshSpaceCreateInfoMSFT -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result) -> FunPtr (Ptr HandTrackerEXT_T -> Ptr HandMeshUpdateInfoMSFT -> Ptr HandMeshMSFT -> IO Result) -> FunPtr (Ptr Session_T -> ("topLevelUserPath" ::: Path) -> Ptr ControllerModelKeyStateMSFT -> IO Result) -> FunPtr (Ptr Session_T -> ControllerModelKeyMSFT -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr Word8) -> IO Result) -> FunPtr (Ptr Session_T -> ControllerModelKeyMSFT -> Ptr ControllerModelPropertiesMSFT -> IO Result) -> FunPtr (Ptr Session_T -> ControllerModelKeyMSFT -> Ptr ControllerModelStateMSFT -> IO Result) -> FunPtr (Ptr Session_T -> ("displayRefreshRateCapacityInput" ::: Word32) -> ("displayRefreshRateCountOutput" ::: Ptr Word32) -> ("displayRefreshRates" ::: Ptr CFloat) -> IO Result) -> FunPtr (Ptr Session_T -> ("displayRefreshRate" ::: Ptr CFloat) -> IO Result) -> FunPtr (Ptr Session_T -> ("displayRefreshRate" ::: CFloat) -> IO Result) -> FunPtr (Ptr Session_T -> ("perceptionAnchor" ::: Ptr IUnknown) -> ("anchor" ::: Ptr (Ptr SpatialAnchorMSFT_T)) -> IO Result) -> FunPtr (Ptr Session_T -> Ptr SpatialAnchorMSFT_T -> ("perceptionAnchor" ::: Ptr (Ptr IUnknown)) -> IO Result) -> FunPtr (Ptr Session_T -> ("colorSpaceCapacityInput" ::: Word32) -> ("colorSpaceCountOutput" ::: Ptr Word32) -> ("colorSpaces" ::: Ptr ColorSpaceFB) -> IO Result) -> FunPtr (Ptr Session_T -> ColorSpaceFB -> IO Result) -> InstanceCmds
[instanceCmdsHandle] :: InstanceCmds -> Ptr Instance_T
[pXrGetInstanceProcAddr] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("name" ::: Ptr CChar) -> Ptr PFN_xrVoidFunction -> IO Result)
[pXrDestroyInstance] :: InstanceCmds -> FunPtr (Ptr Instance_T -> IO Result)
[pXrResultToString] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("value" ::: Result) -> ("buffer" ::: Ptr (FixedArray MAX_RESULT_STRING_SIZE CChar)) -> IO Result)
[pXrStructureTypeToString] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("value" ::: StructureType) -> ("buffer" ::: Ptr (FixedArray MAX_STRUCTURE_NAME_SIZE CChar)) -> IO Result)
[pXrGetInstanceProperties] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr InstanceProperties -> IO Result)
[pXrGetSystem] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr SystemGetInfo -> Ptr SystemId -> IO Result)
[pXrGetSystemProperties] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ("properties" ::: Ptr (SomeStruct SystemProperties)) -> IO Result)
[pXrCreateSession] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("createInfo" ::: Ptr (SomeStruct SessionCreateInfo)) -> ("session" ::: Ptr (Ptr Session_T)) -> IO Result)
[pXrDestroySession] :: InstanceCmds -> FunPtr (Ptr Session_T -> IO Result)
[pXrDestroySpace] :: InstanceCmds -> FunPtr (Ptr Space_T -> IO Result)
[pXrEnumerateSwapchainFormats] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("formatCapacityInput" ::: Word32) -> ("formatCountOutput" ::: Ptr Word32) -> ("formats" ::: Ptr Int64) -> IO Result)
[pXrCreateSwapchain] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("createInfo" ::: Ptr (SomeStruct SwapchainCreateInfo)) -> ("swapchain" ::: Ptr (Ptr Swapchain_T)) -> IO Result)
[pXrDestroySwapchain] :: InstanceCmds -> FunPtr (Ptr Swapchain_T -> IO Result)
[pXrEnumerateSwapchainImages] :: InstanceCmds -> FunPtr (Ptr Swapchain_T -> ("imageCapacityInput" ::: Word32) -> ("imageCountOutput" ::: Ptr Word32) -> ("images" ::: Ptr (SomeChild SwapchainImageBaseHeader)) -> IO Result)
[pXrAcquireSwapchainImage] :: InstanceCmds -> FunPtr (Ptr Swapchain_T -> Ptr SwapchainImageAcquireInfo -> ("index" ::: Ptr Word32) -> IO Result)
[pXrWaitSwapchainImage] :: InstanceCmds -> FunPtr (Ptr Swapchain_T -> Ptr SwapchainImageWaitInfo -> IO Result)
[pXrReleaseSwapchainImage] :: InstanceCmds -> FunPtr (Ptr Swapchain_T -> Ptr SwapchainImageReleaseInfo -> IO Result)
[pXrBeginSession] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("beginInfo" ::: Ptr (SomeStruct SessionBeginInfo)) -> IO Result)
[pXrEndSession] :: InstanceCmds -> FunPtr (Ptr Session_T -> IO Result)
[pXrRequestExitSession] :: InstanceCmds -> FunPtr (Ptr Session_T -> IO Result)
[pXrEnumerateReferenceSpaces] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("spaceCapacityInput" ::: Word32) -> ("spaceCountOutput" ::: Ptr Word32) -> ("spaces" ::: Ptr ReferenceSpaceType) -> IO Result)
[pXrCreateReferenceSpace] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ReferenceSpaceCreateInfo -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result)
[pXrCreateActionSpace] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ActionSpaceCreateInfo -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result)
[pXrLocateSpace] :: InstanceCmds -> FunPtr (Ptr Space_T -> ("baseSpace" ::: Ptr Space_T) -> Time -> ("location" ::: Ptr (SomeStruct SpaceLocation)) -> IO Result)
[pXrEnumerateViewConfigurations] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ("viewConfigurationTypeCapacityInput" ::: Word32) -> ("viewConfigurationTypeCountOutput" ::: Ptr Word32) -> ("viewConfigurationTypes" ::: Ptr ViewConfigurationType) -> IO Result)
[pXrEnumerateEnvironmentBlendModes] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ViewConfigurationType -> ("environmentBlendModeCapacityInput" ::: Word32) -> ("environmentBlendModeCountOutput" ::: Ptr Word32) -> ("environmentBlendModes" ::: Ptr EnvironmentBlendMode) -> IO Result)
[pXrGetViewConfigurationProperties] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ViewConfigurationType -> Ptr ViewConfigurationProperties -> IO Result)
[pXrEnumerateViewConfigurationViews] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ViewConfigurationType -> ("viewCapacityInput" ::: Word32) -> ("viewCountOutput" ::: Ptr Word32) -> ("views" ::: Ptr (SomeStruct ViewConfigurationView)) -> IO Result)
[pXrBeginFrame] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr FrameBeginInfo -> IO Result)
[pXrLocateViews] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ViewLocateInfo -> Ptr ViewState -> ("viewCapacityInput" ::: Word32) -> ("viewCountOutput" ::: Ptr Word32) -> ("views" ::: Ptr View) -> IO Result)
[pXrEndFrame] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("frameEndInfo" ::: Ptr (SomeStruct FrameEndInfo)) -> IO Result)
[pXrWaitFrame] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr FrameWaitInfo -> ("frameState" ::: Ptr (SomeStruct FrameState)) -> IO Result)
[pXrApplyHapticFeedback] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr HapticActionInfo -> ("hapticFeedback" ::: Ptr (SomeChild HapticBaseHeader)) -> IO Result)
[pXrStopHapticFeedback] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr HapticActionInfo -> IO Result)
[pXrPollEvent] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr EventDataBuffer -> IO Result)
[pXrStringToPath] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("pathString" ::: Ptr CChar) -> Ptr Path -> IO Result)
[pXrPathToString] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Path -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result)
[pXrGetReferenceSpaceBoundsRect] :: InstanceCmds -> FunPtr (Ptr Session_T -> ReferenceSpaceType -> ("bounds" ::: Ptr Extent2Df) -> IO Result)
[pXrSetAndroidApplicationThreadKHR] :: InstanceCmds -> FunPtr (Ptr Session_T -> AndroidThreadTypeKHR -> ("threadId" ::: Word32) -> IO Result)
[pXrCreateSwapchainAndroidSurfaceKHR] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("info" ::: Ptr (SomeStruct SwapchainCreateInfo)) -> ("swapchain" ::: Ptr (Ptr Swapchain_T)) -> ("surface" ::: Ptr Jobject) -> IO Result)
[pXrGetActionStateBoolean] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStateBoolean -> IO Result)
[pXrGetActionStateFloat] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStateFloat -> IO Result)
[pXrGetActionStateVector2f] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStateVector2f -> IO Result)
[pXrGetActionStatePose] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ActionStateGetInfo -> Ptr ActionStatePose -> IO Result)
[pXrCreateActionSet] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr ActionSetCreateInfo -> ("actionSet" ::: Ptr (Ptr ActionSet_T)) -> IO Result)
[pXrDestroyActionSet] :: InstanceCmds -> FunPtr (Ptr ActionSet_T -> IO Result)
[pXrCreateAction] :: InstanceCmds -> FunPtr (Ptr ActionSet_T -> Ptr ActionCreateInfo -> ("action" ::: Ptr (Ptr Action_T)) -> IO Result)
[pXrDestroyAction] :: InstanceCmds -> FunPtr (Ptr Action_T -> IO Result)
[pXrSuggestInteractionProfileBindings] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("suggestedBindings" ::: Ptr (SomeStruct InteractionProfileSuggestedBinding)) -> IO Result)
[pXrAttachSessionActionSets] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr SessionActionSetsAttachInfo -> IO Result)
[pXrGetCurrentInteractionProfile] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("topLevelUserPath" ::: Path) -> Ptr InteractionProfileState -> IO Result)
[pXrSyncActions] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr ActionsSyncInfo -> IO Result)
[pXrEnumerateBoundSourcesForAction] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr BoundSourcesForActionEnumerateInfo -> ("sourceCapacityInput" ::: Word32) -> ("sourceCountOutput" ::: Ptr Word32) -> ("sources" ::: Ptr Path) -> IO Result)
[pXrGetInputSourceLocalizedName] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr InputSourceLocalizedNameGetInfo -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result)
[pXrGetVulkanInstanceExtensionsKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result)
[pXrGetVulkanDeviceExtensionsKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr CChar) -> IO Result)
[pXrGetVulkanGraphicsDeviceKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> ("vkInstance" ::: Ptr Instance_T) -> ("vkPhysicalDevice" ::: Ptr (Ptr PhysicalDevice_T)) -> IO Result)
[pXrGetOpenGLGraphicsRequirementsKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsOpenGLKHR -> IO Result)
[pXrGetOpenGLESGraphicsRequirementsKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsOpenGLESKHR -> IO Result)
[pXrGetVulkanGraphicsRequirementsKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsVulkanKHR -> IO Result)
[pXrGetD3D11GraphicsRequirementsKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsD3D11KHR -> IO Result)
[pXrGetD3D12GraphicsRequirementsKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> SystemId -> Ptr GraphicsRequirementsD3D12KHR -> IO Result)
[pXrPerfSettingsSetPerformanceLevelEXT] :: InstanceCmds -> FunPtr (Ptr Session_T -> PerfSettingsDomainEXT -> PerfSettingsLevelEXT -> IO Result)
[pXrThermalGetTemperatureTrendEXT] :: InstanceCmds -> FunPtr (Ptr Session_T -> PerfSettingsDomainEXT -> Ptr PerfSettingsNotificationLevelEXT -> ("tempHeadroom" ::: Ptr CFloat) -> ("tempSlope" ::: Ptr CFloat) -> IO Result)
[pXrSetDebugUtilsObjectNameEXT] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr DebugUtilsObjectNameInfoEXT -> IO Result)
[pXrCreateDebugUtilsMessengerEXT] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr DebugUtilsMessengerCreateInfoEXT -> ("messenger" ::: Ptr (Ptr DebugUtilsMessengerEXT_T)) -> IO Result)
[pXrDestroyDebugUtilsMessengerEXT] :: InstanceCmds -> FunPtr (Ptr DebugUtilsMessengerEXT_T -> IO Result)
[pXrSubmitDebugUtilsMessageEXT] :: InstanceCmds -> FunPtr (Ptr Instance_T -> DebugUtilsMessageSeverityFlagsEXT -> ("messageTypes" ::: DebugUtilsMessageTypeFlagsEXT) -> Ptr DebugUtilsMessengerCallbackDataEXT -> IO Result)
[pXrSessionBeginDebugUtilsLabelRegionEXT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("labelInfo" ::: Ptr DebugUtilsLabelEXT) -> IO Result)
[pXrSessionEndDebugUtilsLabelRegionEXT] :: InstanceCmds -> FunPtr (Ptr Session_T -> IO Result)
[pXrSessionInsertDebugUtilsLabelEXT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("labelInfo" ::: Ptr DebugUtilsLabelEXT) -> IO Result)
[pXrConvertTimeToWin32PerformanceCounterKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Time -> ("performanceCounter" ::: Ptr LARGE_INTEGER) -> IO Result)
[pXrConvertWin32PerformanceCounterToTimeKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("performanceCounter" ::: Ptr LARGE_INTEGER) -> Ptr Time -> IO Result)
[pXrCreateVulkanInstanceKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr VulkanInstanceCreateInfoKHR -> ("vulkanInstance" ::: Ptr (Ptr Instance_T)) -> ("vulkanResult" ::: Ptr Result) -> IO Result)
[pXrCreateVulkanDeviceKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr VulkanDeviceCreateInfoKHR -> ("vulkanDevice" ::: Ptr (Ptr Device_T)) -> ("vulkanResult" ::: Ptr Result) -> IO Result)
[pXrGetVulkanGraphicsDevice2KHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Ptr VulkanGraphicsDeviceGetInfoKHR -> ("vulkanPhysicalDevice" ::: Ptr (Ptr PhysicalDevice_T)) -> IO Result)
[pXrConvertTimeToTimespecTimeKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> Time -> ("timespecTime" ::: Ptr Timespec) -> IO Result)
[pXrConvertTimespecTimeToTimeKHR] :: InstanceCmds -> FunPtr (Ptr Instance_T -> ("timespecTime" ::: Ptr Timespec) -> Ptr Time -> IO Result)
[pXrGetVisibilityMaskKHR] :: InstanceCmds -> FunPtr (Ptr Session_T -> ViewConfigurationType -> ("viewIndex" ::: Word32) -> VisibilityMaskTypeKHR -> Ptr VisibilityMaskKHR -> IO Result)
[pXrCreateSpatialAnchorMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr SpatialAnchorCreateInfoMSFT -> ("anchor" ::: Ptr (Ptr SpatialAnchorMSFT_T)) -> IO Result)
[pXrCreateSpatialAnchorSpaceMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr SpatialAnchorSpaceCreateInfoMSFT -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result)
[pXrDestroySpatialAnchorMSFT] :: InstanceCmds -> FunPtr (Ptr SpatialAnchorMSFT_T -> IO Result)
[pXrCreateSpatialGraphNodeSpaceMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr SpatialGraphNodeSpaceCreateInfoMSFT -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result)
[pXrCreateHandTrackerEXT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("createInfo" ::: Ptr (SomeStruct HandTrackerCreateInfoEXT)) -> ("handTracker" ::: Ptr (Ptr HandTrackerEXT_T)) -> IO Result)
[pXrDestroyHandTrackerEXT] :: InstanceCmds -> FunPtr (Ptr HandTrackerEXT_T -> IO Result)
[pXrLocateHandJointsEXT] :: InstanceCmds -> FunPtr (Ptr HandTrackerEXT_T -> Ptr HandJointsLocateInfoEXT -> ("locations" ::: Ptr (SomeStruct HandJointLocationsEXT)) -> IO Result)
[pXrCreateHandMeshSpaceMSFT] :: InstanceCmds -> FunPtr (Ptr HandTrackerEXT_T -> Ptr HandMeshSpaceCreateInfoMSFT -> ("space" ::: Ptr (Ptr Space_T)) -> IO Result)
[pXrUpdateHandMeshMSFT] :: InstanceCmds -> FunPtr (Ptr HandTrackerEXT_T -> Ptr HandMeshUpdateInfoMSFT -> Ptr HandMeshMSFT -> IO Result)
[pXrGetControllerModelKeyMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("topLevelUserPath" ::: Path) -> Ptr ControllerModelKeyStateMSFT -> IO Result)
[pXrLoadControllerModelMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ControllerModelKeyMSFT -> ("bufferCapacityInput" ::: Word32) -> ("bufferCountOutput" ::: Ptr Word32) -> ("buffer" ::: Ptr Word8) -> IO Result)
[pXrGetControllerModelPropertiesMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ControllerModelKeyMSFT -> Ptr ControllerModelPropertiesMSFT -> IO Result)
[pXrGetControllerModelStateMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ControllerModelKeyMSFT -> Ptr ControllerModelStateMSFT -> IO Result)
[pXrEnumerateDisplayRefreshRatesFB] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("displayRefreshRateCapacityInput" ::: Word32) -> ("displayRefreshRateCountOutput" ::: Ptr Word32) -> ("displayRefreshRates" ::: Ptr CFloat) -> IO Result)
[pXrGetDisplayRefreshRateFB] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("displayRefreshRate" ::: Ptr CFloat) -> IO Result)
[pXrRequestDisplayRefreshRateFB] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("displayRefreshRate" ::: CFloat) -> IO Result)
[pXrCreateSpatialAnchorFromPerceptionAnchorMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("perceptionAnchor" ::: Ptr IUnknown) -> ("anchor" ::: Ptr (Ptr SpatialAnchorMSFT_T)) -> IO Result)
[pXrTryGetPerceptionAnchorFromSpatialAnchorMSFT] :: InstanceCmds -> FunPtr (Ptr Session_T -> Ptr SpatialAnchorMSFT_T -> ("perceptionAnchor" ::: Ptr (Ptr IUnknown)) -> IO Result)
[pXrEnumerateColorSpacesFB] :: InstanceCmds -> FunPtr (Ptr Session_T -> ("colorSpaceCapacityInput" ::: Word32) -> ("colorSpaceCountOutput" ::: Ptr Word32) -> ("colorSpaces" ::: Ptr ColorSpaceFB) -> IO Result)
[pXrSetColorSpaceFB] :: InstanceCmds -> FunPtr (Ptr Session_T -> ColorSpaceFB -> IO Result)

-- | A version of <tt>getInstanceProcAddr</tt> which can be called with a
--   null pointer for the instance.
getInstanceProcAddr' :: Ptr Instance_T -> ("name" ::: Ptr CChar) -> IO PFN_xrVoidFunction
initInstanceCmds :: Ptr Instance_T -> IO InstanceCmds
instance GHC.Classes.Eq OpenXR.Dynamic.InstanceCmds
instance GHC.Show.Show OpenXR.Dynamic.InstanceCmds
instance Vulkan.Zero.Zero OpenXR.Dynamic.InstanceCmds


-- | <h1>Name</h1>
--   
--   XR_KHR_loader_init - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_loader_init</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   89
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>LoaderInitInfoBaseHeaderKHR</a>, <a>initializeLoaderKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_loader_init

-- | xrInitializeLoaderKHR - Initializes loader
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h2>Description</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>LoaderInitInfoBaseHeaderKHR</a>
initializeLoaderKHR :: forall a io. (ToCStruct a, MonadIO io) => ("loaderInitInfo" ::: a) -> io ()

-- | XrLoaderInitInfoBaseHeaderKHR - Initializes OpenXR loader
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>LoaderInitInfoBaseHeaderKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_LOADER_INIT_INFO_ANDROID_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>initializeLoaderKHR</a>
data LoaderInitInfoBaseHeaderKHR
LoaderInitInfoBaseHeaderKHR :: StructureType -> LoaderInitInfoBaseHeaderKHR

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
[$sel:type':LoaderInitInfoBaseHeaderKHR] :: LoaderInitInfoBaseHeaderKHR -> StructureType
class ToCStruct a => IsLoaderInitInfoKHR a
toLoaderInitInfoBaseHeaderKHR :: IsLoaderInitInfoKHR a => a -> LoaderInitInfoBaseHeaderKHR
type KHR_loader_init_SPEC_VERSION = 1
pattern KHR_loader_init_SPEC_VERSION :: forall a. Integral a => a
type KHR_LOADER_INIT_EXTENSION_NAME = "XR_KHR_loader_init"
pattern KHR_LOADER_INIT_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_loader_init.LoaderInitInfoBaseHeaderKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_loader_init.LoaderInitInfoBaseHeaderKHR
instance OpenXR.CStruct.Extends.Inheritable OpenXR.Extensions.XR_KHR_loader_init.LoaderInitInfoBaseHeaderKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_loader_init.LoaderInitInfoBaseHeaderKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_loader_init.LoaderInitInfoBaseHeaderKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_loader_init.LoaderInitInfoBaseHeaderKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_loader_init.LoaderInitInfoBaseHeaderKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_loader_init_android - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_loader_init_android</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   90
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <ul>
--   <li>Requires @@</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>LoaderInitInfoAndroidKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_loader_init_android

-- | XrLoaderInitInfoAndroidKHR - Initializes OpenXR loader on Android
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>LoaderInitInfoAndroidKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_LOADER_INIT_INFO_ANDROID_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>applicationVM</tt> <i>must</i> be a pointer value</li>
--   <li><tt>applicationContext</tt> <i>must</i> be a pointer value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>initializeLoaderKHR</a>
data LoaderInitInfoAndroidKHR
LoaderInitInfoAndroidKHR :: Ptr () -> Ptr () -> LoaderInitInfoAndroidKHR

-- | <tt>applicationVM</tt> is a pointer to the JNI’s opaque
--   <tt>JavaVM</tt> structure, cast to a void pointer.
[$sel:applicationVM:LoaderInitInfoAndroidKHR] :: LoaderInitInfoAndroidKHR -> Ptr ()

-- | <tt>applicationContext</tt> is a JNI reference to an
--   <tt>android.content.Context</tt> associated with the application, cast
--   to a void pointer.
[$sel:applicationContext:LoaderInitInfoAndroidKHR] :: LoaderInitInfoAndroidKHR -> Ptr ()
type KHR_loader_init_android_SPEC_VERSION = 1
pattern KHR_loader_init_android_SPEC_VERSION :: forall a. Integral a => a
type KHR_LOADER_INIT_ANDROID_EXTENSION_NAME = "XR_KHR_loader_init_android"
pattern KHR_LOADER_INIT_ANDROID_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
class ToCStruct a => IsLoaderInitInfoKHR a
toLoaderInitInfoBaseHeaderKHR :: IsLoaderInitInfoKHR a => a -> LoaderInitInfoBaseHeaderKHR

-- | XrLoaderInitInfoBaseHeaderKHR - Initializes OpenXR loader
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>LoaderInitInfoBaseHeaderKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_LOADER_INIT_INFO_ANDROID_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>initializeLoaderKHR</a>
data LoaderInitInfoBaseHeaderKHR
LoaderInitInfoBaseHeaderKHR :: StructureType -> LoaderInitInfoBaseHeaderKHR

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
[$sel:type':LoaderInitInfoBaseHeaderKHR] :: LoaderInitInfoBaseHeaderKHR -> StructureType
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_loader_init_android.LoaderInitInfoAndroidKHR
instance OpenXR.Extensions.XR_KHR_loader_init.IsLoaderInitInfoKHR OpenXR.Extensions.XR_KHR_loader_init_android.LoaderInitInfoAndroidKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_loader_init_android.LoaderInitInfoAndroidKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_loader_init_android.LoaderInitInfoAndroidKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_loader_init_android.LoaderInitInfoAndroidKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_loader_init_android.LoaderInitInfoAndroidKHR

module OpenXR.Core10.Handles

-- | XrInstance - Opaque handle to an instance object
--   
--   <h1>Description</h1>
--   
--   An OpenXR instance is an object that allows an OpenXR application to
--   communicate with an OpenXR runtime. The application accomplishes this
--   communication by calling <a>createInstance</a> and receiving a handle
--   to the resulting <a>Instance</a> object.
--   
--   The <a>Instance</a> object stores and tracks OpenXR-related
--   application state, without storing any such state in the application’s
--   global address space. This allows the application to create multiple
--   instances as well as safely encapsulate the application’s OpenXR state
--   since this object is opaque to the application. OpenXR runtimes
--   <i>may</i> limit the number of simultaneous <a>Instance</a> objects
--   that may be created and used, but they <i>must</i> support the
--   creation and usage of at least one <a>Instance</a> object per process.
--   
--   Physically, this state <i>may</i> be stored in any of the OpenXR
--   loader, OpenXR API layers or the OpenXR runtime components. The exact
--   storage and distribution of this saved state is
--   implementation-dependent, except where indicated by this
--   specification.
--   
--   <h1>See Also</h1>
--   
--   <a>InstanceCreateInfo</a>, <a>InstanceProperties</a>,
--   <a>convertTimeToTimespecTimeKHR</a>,
--   <a>convertTimeToWin32PerformanceCounterKHR</a>,
--   <a>convertTimespecTimeToTimeKHR</a>,
--   <a>convertWin32PerformanceCounterToTimeKHR</a>,
--   <a>createActionSet</a>, <a>createDebugUtilsMessengerEXT</a>,
--   <a>createInstance</a>, <a>createSession</a>,
--   <a>createVulkanDeviceKHR</a>, <a>createVulkanInstanceKHR</a>,
--   <a>destroyInstance</a>, <a>enumerateEnvironmentBlendModes</a>,
--   <a>enumerateViewConfigurationViews</a>,
--   <a>enumerateViewConfigurations</a>,
--   <a>getD3D11GraphicsRequirementsKHR</a>,
--   <a>getD3D12GraphicsRequirementsKHR</a>, <a>getInstanceProcAddr</a>,
--   <a>getInstanceProperties</a>,
--   <a>getOpenGLESGraphicsRequirementsKHR</a>,
--   <a>getOpenGLGraphicsRequirementsKHR</a>, <a>getSystem</a>,
--   <a>getSystemProperties</a>, <a>getViewConfigurationProperties</a>,
--   <a>getVulkanDeviceExtensionsKHR</a>,
--   <a>getVulkanGraphicsDevice2KHR</a>, <a>getVulkanGraphicsDeviceKHR</a>,
--   <a>getVulkanGraphicsRequirements2KHR</a>,
--   <a>getVulkanGraphicsRequirementsKHR</a>,
--   <a>getVulkanInstanceExtensionsKHR</a>, <a>pathToString</a>,
--   <a>pollEvent</a>, <a>resultToString</a>,
--   <a>setDebugUtilsObjectNameEXT</a>, <a>stringToPath</a>,
--   <a>structureTypeToString</a>, <a>submitDebugUtilsMessageEXT</a>,
--   <a>suggestInteractionProfileBindings</a>
data Instance
Instance :: Ptr Instance_T -> InstanceCmds -> Instance
[$sel:instanceHandle:Instance] :: Instance -> Ptr Instance_T
[$sel:instanceCmds:Instance] :: Instance -> InstanceCmds

-- | An opaque type for representing pointers to XrInstance handles
data Instance_T

-- | XrSession - Opaque handle to a session object
--   
--   <h1>Description</h1>
--   
--   A session represents an application’s intention to display XR content
--   to the user.
--   
--   First, the application creates a session by choosing a <a>system</a>
--   and a graphics API and calling <a>createSession</a>, which creates a
--   session in the <a>SESSION_STATE_IDLE</a> state. The application then
--   sets up an <a>pollEvent</a> loop to monitor for session state changes
--   delivered through the <a>EventDataSessionStateChanged</a> event. When
--   the runtime determines that the system is ready to start transitioning
--   to this session’s XR content, it notifies the application that its
--   session has moved into the <a>SESSION_STATE_READY</a> state. When the
--   application is ready to proceed and display its XR content, it calls
--   <a>beginSession</a> and <a>starts its frame loop</a>, which starts its
--   session running. While the session is running, the application is
--   expected to continuously run its frame loop by calling
--   <a>waitFrame</a>, <a>beginFrame</a> and <a>endFrame</a> each frame, to
--   establish synchronization with the runtime. Once the runtime is
--   synchronized with the application’s frame loop and ready to display
--   its frames, the session will move into the
--   <a>SESSION_STATE_SYNCHRONIZED</a> state. For frames where
--   <a>waitFrame</a> returns an <a>FrameState</a> with
--   <tt>shouldRender</tt> set to true, the application should render its
--   composition layers and submit them to <a>endFrame</a>. If the
--   application desires to leave a running session, it should call the
--   <a>requestExitSession</a> function to request that the runtime
--   transition its session to the <a>SESSION_STATE_STOPPING</a> state as
--   soon as possible. Once the application reaches the
--   <a>SESSION_STATE_STOPPING</a> state, it can call <a>endSession</a> to
--   stop the XR session, after which the session will transition through
--   <a>SESSION_STATE_IDLE</a> to the <a>SESSION_STATE_EXITING</a> state.
--   
--   A session is considered <b>running</b> after a successful call to
--   <a>beginSession</a> and remains running until any call is made to
--   <a>endSession</a>. Certain functions are only valid to call when a
--   session is running, such as <a>waitFrame</a>, or else the
--   <a>ERROR_SESSION_NOT_RUNNING</a> error <i>must</i> be returned by the
--   runtime.
--   
--   A session is considered <b>not running</b> before a successful call to
--   <a>beginSession</a> and becomes not running again after any call is
--   made to <a>endSession</a>. Certain functions are only valid to call
--   when a session is not running, such as <a>beginSession</a>, or else
--   the <a>ERROR_SESSION_RUNNING</a> error <i>must</i> be returned by the
--   runtime.
--   
--   If an error is returned from <a>beginSession</a>, the session remains
--   in its current running or not running state. Calling <a>endSession</a>
--   always transitions a session to the not running state, regardless of
--   any errors returned.
--   
--   Only running sessions may become focused sessions that receive XR
--   input. When a session <a>is not running</a>, the application
--   <i>must</i> not submit frames. This is important because without a
--   running session, the runtime no longer has to spend resources on
--   sub-systems (tracking etc.) that are no longer needed by the
--   application.
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataInteractionProfileChanged</a>,
--   <a>EventDataReferenceSpaceChangePending</a>,
--   <a>EventDataSessionStateChanged</a>,
--   <a>EventDataVisibilityMaskChangedKHR</a>, <a>applyHapticFeedback</a>,
--   <a>attachSessionActionSets</a>, <a>beginFrame</a>,
--   <a>beginSession</a>, <a>createActionSpace</a>,
--   <a>createHandTrackerEXT</a>, <a>createReferenceSpace</a>,
--   <a>createSession</a>,
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a>,
--   <a>createSpatialAnchorMSFT</a>, <a>createSpatialAnchorSpaceMSFT</a>,
--   <a>createSpatialGraphNodeSpaceMSFT</a>, <a>createSwapchain</a>,
--   <a>createSwapchainAndroidSurfaceKHR</a>, <a>destroySession</a>,
--   <a>endFrame</a>, <a>endSession</a>,
--   <a>enumerateBoundSourcesForAction</a>, <a>enumerateColorSpacesFB</a>,
--   <a>enumerateDisplayRefreshRatesFB</a>,
--   <a>enumerateReferenceSpaces</a>, <a>enumerateSwapchainFormats</a>,
--   <a>getActionStateBoolean</a>, <a>getActionStateFloat</a>,
--   <a>getActionStatePose</a>, <a>getActionStateVector2f</a>,
--   <a>getControllerModelKeyMSFT</a>,
--   <a>getControllerModelPropertiesMSFT</a>,
--   <a>getControllerModelStateMSFT</a>,
--   <a>getCurrentInteractionProfile</a>, <a>getDisplayRefreshRateFB</a>,
--   <a>getInputSourceLocalizedName</a>,
--   <a>getReferenceSpaceBoundsRect</a>, <a>getVisibilityMaskKHR</a>,
--   <a>loadControllerModelMSFT</a>, <a>locateViews</a>,
--   <a>perfSettingsSetPerformanceLevelEXT</a>,
--   <a>requestDisplayRefreshRateFB</a>, <a>requestExitSession</a>,
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a>,
--   <a>sessionEndDebugUtilsLabelRegionEXT</a>,
--   <a>sessionInsertDebugUtilsLabelEXT</a>,
--   <a>setAndroidApplicationThreadKHR</a>, <a>setColorSpaceFB</a>,
--   <a>xrSetInputDeviceActiveEXT</a>, <a>xrSetInputDeviceLocationEXT</a>,
--   <a>xrSetInputDeviceStateBoolEXT</a>,
--   <a>xrSetInputDeviceStateFloatEXT</a>,
--   <a>xrSetInputDeviceStateVector2fEXT</a>, <a>stopHapticFeedback</a>,
--   <a>syncActions</a>, <a>thermalGetTemperatureTrendEXT</a>,
--   <a>tryGetPerceptionAnchorFromSpatialAnchorMSFT</a>, <a>waitFrame</a>
data Session
Session :: Ptr Session_T -> InstanceCmds -> Session
[$sel:sessionHandle:Session] :: Session -> Ptr Session_T
[$sel:instanceCmds:Session] :: Session -> InstanceCmds

-- | An opaque type for representing pointers to XrSession handles
data Session_T

-- | XrActionSet - Opaque handle to an action set
--   
--   <h1>Description</h1>
--   
--   Action sets are application-defined collections of actions. They are
--   attached to a given <a>Session</a> with a
--   <a>attachSessionActionSets</a> call. They are enabled or disabled by
--   the application via <a>syncActions</a> depending on the current
--   application context. For example, a game may have one set of actions
--   that apply to controlling a character and another set for navigating a
--   menu system. When these actions are grouped into two <a>ActionSet</a>
--   handles they can be selectively enabled and disabled using a single
--   function call.
--   
--   Actions are passed a handle to their <a>ActionSet</a> when they are
--   created.
--   
--   Action sets are created by calling <a>createActionSet</a>:
--   
--   <h1>See Also</h1>
--   
--   <a>ActiveActionSet</a>, <a>SessionActionSetsAttachInfo</a>,
--   <a>createAction</a>, <a>createActionSet</a>, <a>destroyActionSet</a>
data ActionSet
ActionSet :: Ptr ActionSet_T -> InstanceCmds -> ActionSet
[$sel:actionSetHandle:ActionSet] :: ActionSet -> Ptr ActionSet_T
[$sel:instanceCmds:ActionSet] :: ActionSet -> InstanceCmds

-- | An opaque type for representing pointers to XrActionSet handles
data ActionSet_T

-- | XrAction - Opaque handle to an action
--   
--   <h1>Description</h1>
--   
--   Action handles are used to refer to individual actions when retrieving
--   action data, creating action spaces, or sending haptic events.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSpaceCreateInfo</a>, <a>ActionStateGetInfo</a>,
--   <a>ActionSuggestedBinding</a>, <a>ActionType</a>,
--   <a>BoundSourcesForActionEnumerateInfo</a>, <a>HapticActionInfo</a>,
--   <a>InteractionProfileAnalogThresholdVALVE</a>, <a>createAction</a>,
--   <a>destroyAction</a>
data Action
Action :: Ptr Action_T -> InstanceCmds -> Action
[$sel:actionHandle:Action] :: Action -> Ptr Action_T
[$sel:instanceCmds:Action] :: Action -> InstanceCmds

-- | An opaque type for representing pointers to XrAction handles
data Action_T

-- | XrSwapchain - Opaque handle to a swapchain object
--   
--   <h1>Description</h1>
--   
--   Normal XR applications will want to present rendered images to the
--   user. To allow this, the runtime provides images organized in
--   swapchains for the application to render into. The runtime <i>must</i>
--   allow applications to create multiple swapchains.
--   
--   Swapchain image format support by the runtime is specified by the
--   <a>enumerateSwapchainFormats</a> function. Runtimes <i>should</i>
--   support <tt>R8G8B8A8</tt> and <tt>R8G8B8A8</tt> <tt>sRGB</tt> formats
--   if possible.
--   
--   Swapchain images <i>can</i> be 2D or 2D Array.
--   
--   Rendering operations involving composition of submitted layers should
--   be assumed to be internally performed by the runtime in linear color
--   space. Images submitted in sRGB color space must be created using an
--   API-specific sRGB format (e.g.
--   <tt>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</tt>, <tt>GL_SRGB8_ALPHA8</tt>,
--   <tt>VK_FORMAT_R8G8B8A8_SRGB</tt>) to apply automatic sRGB-to-linear
--   conversion when read by the runtime. All other formats will be treated
--   as linear values.
--   
--   Note
--   
--   OpenXR applications should avoid submitting linear encoded 8 bit color
--   data (e.g. <tt>DXGI_FORMAT_R8G8B8A8_UNORM</tt>) whenever possible as
--   it may result in color banding.
--   
--   Gritz, L. and d’Eon, E. 2007. The Importance of Being Linear. In: H.
--   Nguyen, ed., <i>GPU Gems 3</i>. Addison-Wesley Professional.
--   <a>https://developer.nvidia.com/gpugems/gpugems3/part-iv-image-effects/chapter-24-importance-being-linear</a>
--   
--   Note
--   
--   DXGI resources will be created with their associated TYPELESS format,
--   but the runtime will use the application-specified format for reading
--   the data.
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerCubeKHR</a>, <a>SwapchainSubImage</a>,
--   <a>acquireSwapchainImage</a>, <a>createSwapchain</a>,
--   <a>createSwapchainAndroidSurfaceKHR</a>, <a>destroySwapchain</a>,
--   <a>enumerateSwapchainFormats</a>, <a>enumerateSwapchainImages</a>,
--   <a>releaseSwapchainImage</a>, <a>waitSwapchainImage</a>
data Swapchain
Swapchain :: Ptr Swapchain_T -> InstanceCmds -> Swapchain
[$sel:swapchainHandle:Swapchain] :: Swapchain -> Ptr Swapchain_T
[$sel:instanceCmds:Swapchain] :: Swapchain -> InstanceCmds

-- | An opaque type for representing pointers to XrSwapchain handles
data Swapchain_T

-- | XrSpace - Opaque handle to a space
--   
--   <h1>Description</h1>
--   
--   Spaces are represented by <a>Space</a> handles, which the application
--   creates and then uses in API calls. Whenever an application calls a
--   function that returns coordinates, it provides an <a>Space</a> to
--   specify the frame of reference in which those coordinates will be
--   expressed. Similarly, when providing coordinates to a function, the
--   application specifies which <a>Space</a> the runtime should use to
--   interpret those coordinates.
--   
--   OpenXR defines a set of well-known <b>reference spaces</b> that
--   applications use to bootstrap their spatial reasoning. These reference
--   spaces are: <tt>VIEW</tt>, <tt>LOCAL</tt> and <tt>STAGE</tt>. Each
--   reference space has a well-defined meaning, which establishes where
--   its origin is positioned and how its axes are oriented.
--   
--   Runtimes whose tracking systems improve their understanding of the
--   world over time <i>may</i> track spaces independently. For example,
--   even though a <tt>LOCAL</tt> space and a <tt>STAGE</tt> space each map
--   their origin to a static position in the world, a runtime with an
--   inside-out tracking system <i>may</i> introduce slight adjustments to
--   the origin of each space on a continuous basis to keep each origin in
--   place.
--   
--   Beyond well-known reference spaces, runtimes expose other
--   independently-tracked spaces, such as a pose action space that tracks
--   the pose of a motion controller over time.
--   
--   When one or both spaces are tracking a dynamic object, passing in an
--   updated time to <a>locateSpace</a> each frame will result in an
--   updated relative pose. For example, the location of the left hand’s
--   pose action space in the <tt>STAGE</tt> reference space will change
--   each frame as the user’s hand moves relative to the stage’s predefined
--   origin on the floor. In other XR APIs, it is common to report the
--   "pose" of an object relative to some presumed underlying global space.
--   This API is careful to not explicitly define such an underlying global
--   space, because it does not apply to all systems. Some systems will
--   support no <tt>STAGE</tt> space, while others may support a
--   <tt>STAGE</tt> space that switches between various physical stages
--   with dynamic availability. To satisfy this wide variability, "poses"
--   are always described as the relationship between two spaces.
--   
--   Some devices improve their understanding of the world as the device is
--   used. The location returned by <a>locateSpace</a> in later frames
--   <i>may</i> change over time, even for spaces that track static
--   objects, as either the target space or base space adjusts its origin.
--   
--   Composition layers submitted by the application include an
--   <a>Space</a> for the runtime to use to position that layer over time.
--   Composition layers whose <a>Space</a> is relative to the <tt>VIEW</tt>
--   reference space are implicitly "head-locked", even if they may not be
--   "display-locked" for non-head-mounted form factors.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSpaceCreateInfo</a>, <a>CompositionLayerBaseHeader</a>,
--   <a>CompositionLayerCubeKHR</a>, <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>, <a>CompositionLayerProjection</a>,
--   <a>CompositionLayerQuad</a>, <a>HandJointsLocateInfoEXT</a>,
--   <a>ReferenceSpaceCreateInfo</a>, <a>SpatialAnchorCreateInfoMSFT</a>,
--   <a>ViewLocateInfo</a>, <a>createActionSpace</a>,
--   <a>createHandMeshSpaceMSFT</a>, <a>createReferenceSpace</a>,
--   <a>createSpatialAnchorSpaceMSFT</a>,
--   <a>createSpatialGraphNodeSpaceMSFT</a>, <a>destroySpace</a>,
--   <a>locateSpace</a>, <a>xrSetInputDeviceLocationEXT</a>
data Space
Space :: Ptr Space_T -> InstanceCmds -> Space
[$sel:spaceHandle:Space] :: Space -> Ptr Space_T
[$sel:instanceCmds:Space] :: Space -> InstanceCmds

-- | An opaque type for representing pointers to XrSpace handles
data Space_T
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Core10.Handles.Space
instance GHC.Show.Show OpenXR.Core10.Handles.Space
instance GHC.Classes.Eq OpenXR.Core10.Handles.Space
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Core10.Handles.Swapchain
instance GHC.Show.Show OpenXR.Core10.Handles.Swapchain
instance GHC.Classes.Eq OpenXR.Core10.Handles.Swapchain
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Core10.Handles.Action
instance GHC.Show.Show OpenXR.Core10.Handles.Action
instance GHC.Classes.Eq OpenXR.Core10.Handles.Action
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Core10.Handles.ActionSet
instance GHC.Show.Show OpenXR.Core10.Handles.ActionSet
instance GHC.Classes.Eq OpenXR.Core10.Handles.ActionSet
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Core10.Handles.Session
instance GHC.Show.Show OpenXR.Core10.Handles.Session
instance GHC.Classes.Eq OpenXR.Core10.Handles.Session
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Core10.Handles.Instance
instance GHC.Show.Show OpenXR.Core10.Handles.Instance
instance GHC.Classes.Eq OpenXR.Core10.Handles.Instance
instance Vulkan.Zero.Zero OpenXR.Core10.Handles.Space
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Core10.Handles.Space
instance Vulkan.Zero.Zero OpenXR.Core10.Handles.Swapchain
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Core10.Handles.Swapchain
instance Vulkan.Zero.Zero OpenXR.Core10.Handles.Action
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Core10.Handles.Action
instance Vulkan.Zero.Zero OpenXR.Core10.Handles.ActionSet
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Core10.Handles.ActionSet
instance Vulkan.Zero.Zero OpenXR.Core10.Handles.Session
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Core10.Handles.Session
instance Vulkan.Zero.Zero OpenXR.Core10.Handles.Instance
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Core10.Handles.Instance


-- | <h1>Name</h1>
--   
--   XR_KHR_win32_convert_performance_counter_time - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_win32_convert_performance_counter_time</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   36
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>convertTimeToWin32PerformanceCounterKHR</a>,
--   <a>convertWin32PerformanceCounterToTimeKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_win32_convert_performance_counter_time

-- | xrConvertTimeToWin32PerformanceCounterKHR - Convert XrTime to Win32
--   <tt>QueryPerformanceCounter</tt> time
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>convertTimeToWin32PerformanceCounterKHR</a> function converts
--   an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   to time as if generated by the <tt>QueryPerformanceCounter</tt>
--   Windows function.
--   
--   If the output <tt>performanceCounter</tt> cannot represent the input
--   <tt>time</tt>, the runtime <i>must</i> return
--   <a>ERROR_TIME_INVALID</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>convertTimeToWin32PerformanceCounterKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>performanceCounter</tt> <i>must</i> be a pointer to a
--   <a>LARGE_INTEGER</a> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
convertTimeToWin32PerformanceCounterKHR :: forall io. MonadIO io => Instance -> Time -> io ("performanceCounter" ::: LARGE_INTEGER)

-- | xrConvertWin32PerformanceCounterToTimeKHR - Convert Win32
--   <tt>QueryPerformanceCounter</tt> time to XrTime
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>convertWin32PerformanceCounterToTimeKHR</a> function converts a
--   time stamp obtained by the <tt>QueryPerformanceCounter</tt> Windows
--   function to the equivalent
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>.
--   
--   If the output <tt>time</tt> cannot represent the input
--   <tt>performanceCounter</tt>, the runtime <i>must</i> return
--   <a>ERROR_TIME_INVALID</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>convertWin32PerformanceCounterToTimeKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>performanceCounter</tt> <i>must</i> be a pointer to a valid
--   <a>LARGE_INTEGER</a> value</li>
--   <li><tt>time</tt> <i>must</i> be a pointer to an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
convertWin32PerformanceCounterToTimeKHR :: forall io. MonadIO io => Instance -> ("performanceCounter" ::: LARGE_INTEGER) -> io Time
type KHR_win32_convert_performance_counter_time_SPEC_VERSION = 1
pattern KHR_win32_convert_performance_counter_time_SPEC_VERSION :: forall a. Integral a => a
type KHR_WIN32_CONVERT_PERFORMANCE_COUNTER_TIME_EXTENSION_NAME = "XR_KHR_win32_convert_performance_counter_time"
pattern KHR_WIN32_CONVERT_PERFORMANCE_COUNTER_TIME_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
type LARGE_INTEGER = Word64


-- | <h1>Name</h1>
--   
--   XR_KHR_convert_timespec_time - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_convert_timespec_time</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   37
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>convertTimeToTimespecTimeKHR</a>,
--   <a>convertTimespecTimeToTimeKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_convert_timespec_time

-- | xrConvertTimeToTimespecTimeKHR - Convert XrTime to timespec monotonic
--   time
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>convertTimeToTimespecTimeKHR</a> function converts an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   to time as if generated by <tt>clock_gettime</tt>.
--   
--   If the output <tt>unixTime</tt> cannot represent the input
--   <tt>time</tt>, the runtime <i>must</i> return
--   <a>ERROR_TIME_INVALID</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>convertTimeToTimespecTimeKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>timespecTime</tt> <i>must</i> be a pointer to a
--   <tt>timespec</tt> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
convertTimeToTimespecTimeKHR :: forall io. MonadIO io => Instance -> Time -> io ("timespecTime" ::: Timespec)

-- | xrConvertTimespecTimeToTimeKHR - Convert timespec monotonic time to
--   XrTime
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>convertTimespecTimeToTimeKHR</a> function converts a time
--   obtained by the <tt>clock_gettime</tt> function to the equivalent
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>.
--   
--   If the output <tt>time</tt> cannot represent the input
--   <tt>unixTime</tt>, the runtime <i>must</i> return
--   <a>ERROR_TIME_INVALID</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>convertTimespecTimeToTimeKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>timespecTime</tt> <i>must</i> be a pointer to a valid
--   <tt>timespec</tt> value</li>
--   <li><tt>time</tt> <i>must</i> be a pointer to an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
convertTimespecTimeToTimeKHR :: forall io. MonadIO io => Instance -> ("timespecTime" ::: Timespec) -> io Time
type KHR_convert_timespec_time_SPEC_VERSION = 1
pattern KHR_convert_timespec_time_SPEC_VERSION :: forall a. Integral a => a
type KHR_CONVERT_TIMESPEC_TIME_EXTENSION_NAME = "XR_KHR_convert_timespec_time"
pattern KHR_CONVERT_TIMESPEC_TIME_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
data Timespec
Timespec :: CTime -> Int64 -> Timespec
[$sel:tv_sec:Timespec] :: Timespec -> CTime
[$sel:tv_nsec:Timespec] :: Timespec -> Int64
instance GHC.Classes.Ord OpenXR.Extensions.XR_KHR_convert_timespec_time.Timespec
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_convert_timespec_time.Timespec
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_convert_timespec_time.Timespec
instance GHC.Read.Read OpenXR.Extensions.XR_KHR_convert_timespec_time.Timespec
instance GHC.Generics.Generic OpenXR.Extensions.XR_KHR_convert_timespec_time.Timespec
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_convert_timespec_time.Timespec


-- | <h1>Name</h1>
--   
--   XR_KHR_android_thread_settings - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_android_thread_settings</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   4
--   
--   <h1>Revision</h1>
--   
--   5
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>AndroidThreadTypeKHR</a>, <a>setAndroidApplicationThreadKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_android_thread_settings

-- | xrSetAndroidApplicationThreadKHR - declare threads to be of a certain
--   priority type
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>setAndroidApplicationThreadKHR</a> allows to declare an XR-critical
--   thread and to classify it.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>setAndroidApplicationThreadKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>threadType</tt> <i>must</i> be a valid
--   <a>AndroidThreadTypeKHR</a> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ANDROID_THREAD_SETTINGS_ID_INVALID_KHR</a></li><li><a>ERROR_ANDROID_THREAD_SETTINGS_FAILURE_KHR</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>AndroidThreadTypeKHR</a>, <a>Session</a>
setAndroidApplicationThreadKHR :: forall io. MonadIO io => Session -> AndroidThreadTypeKHR -> ("threadId" ::: Word32) -> io Result

-- | XrAndroidThreadTypeKHR - Enum describing Android thread types
--   
--   <h2>Enumerants</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>setAndroidApplicationThreadKHR</a>
newtype AndroidThreadTypeKHR
AndroidThreadTypeKHR :: Int32 -> AndroidThreadTypeKHR

-- | <a>ANDROID_THREAD_TYPE_APPLICATION_MAIN_KHR</a> hints the XR runtime
--   that the thread is doing background CPU tasks
pattern ANDROID_THREAD_TYPE_APPLICATION_MAIN_KHR :: AndroidThreadTypeKHR

-- | <a>ANDROID_THREAD_TYPE_APPLICATION_WORKER_KHR</a> hints the XR runtime
--   that the thread is doing time critical CPU tasks
pattern ANDROID_THREAD_TYPE_APPLICATION_WORKER_KHR :: AndroidThreadTypeKHR

-- | <a>ANDROID_THREAD_TYPE_RENDERER_MAIN_KHR</a> hints the XR runtime that
--   the thread is doing background graphics device tasks
pattern ANDROID_THREAD_TYPE_RENDERER_MAIN_KHR :: AndroidThreadTypeKHR

-- | <a>ANDROID_THREAD_TYPE_RENDERER_WORKER_KHR</a> hints the XR runtime
--   that the thread is doing time critical graphics device tasks
pattern ANDROID_THREAD_TYPE_RENDERER_WORKER_KHR :: AndroidThreadTypeKHR
type KHR_android_thread_settings_SPEC_VERSION = 5
pattern KHR_android_thread_settings_SPEC_VERSION :: forall a. Integral a => a
type KHR_ANDROID_THREAD_SETTINGS_EXTENSION_NAME = "XR_KHR_android_thread_settings"
pattern KHR_ANDROID_THREAD_SETTINGS_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_android_thread_settings.AndroidThreadTypeKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_android_thread_settings.AndroidThreadTypeKHR
instance GHC.Classes.Ord OpenXR.Extensions.XR_KHR_android_thread_settings.AndroidThreadTypeKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_android_thread_settings.AndroidThreadTypeKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_android_thread_settings.AndroidThreadTypeKHR
instance GHC.Read.Read OpenXR.Extensions.XR_KHR_android_thread_settings.AndroidThreadTypeKHR


-- | <h1>Name</h1>
--   
--   XR_FB_color_space - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_FB_color_space</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   109
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ColorSpaceFB</a>, <a>SystemColorSpacePropertiesFB</a>,
--   <a>enumerateColorSpacesFB</a>, <a>setColorSpaceFB</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_FB_color_space

-- | xrEnumerateColorSpacesFB - Enumerates color spaces
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is the session that enumerates the supported
--   color spaces.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>colorSpaceCapacityInput</tt> is the capacity of the
--   <tt>colorSpaces</tt> array, or 0 to retrieve the required
--   capacity.</li>
--   <li><tt>colorSpaceCountOutput</tt> is a pointer to the count of
--   <a>ColorSpaceFB</a> <tt>colorSpaces</tt> written, or a pointer to the
--   required capacity in the case that <tt>colorSpaceCapacityInput</tt> is
--   <tt>0</tt>.</li>
--   <li><tt>colorSpaces</tt> is a pointer to an array of
--   <a>ColorSpaceFB</a> color spaces, but <i>can</i> be <tt>NULL</tt> if
--   <tt>colorSpaceCapacityInput</tt> is <tt>0</tt>.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>colorSpaces</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   <a>enumerateColorSpacesFB</a> enumerates the color spaces supported by
--   the current session. Runtimes <i>must</i> always return identical
--   buffer contents from this enumeration for the lifetime of the session.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>enumerateColorSpacesFB</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>colorSpaceCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>colorSpaceCapacityInput</tt> is not <tt>0</tt>,
--   <tt>colorSpaces</tt> <i>must</i> be a pointer to an array of
--   <tt>colorSpaceCapacityInput</tt> <a>ColorSpaceFB</a> values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ColorSpaceFB</a>, <a>Session</a>, <a>setColorSpaceFB</a>
enumerateColorSpacesFB :: forall io. MonadIO io => Session -> io (Result, "colorSpaces" ::: Vector ColorSpaceFB)

-- | xrSetColorSpaceFB - Set a color space
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>setColorSpaceFB</a> provides a mechanism for an application to
--   specify the color space used in the final rendered frame. If this
--   function is not called, the session will use the color space deemed
--   appropriate by the runtime. Facebook HMDs for both PC and Mobile
--   product lines default to <a>COLOR_SPACE_RIFT_CV1_FB</a>. The runtime
--   <i>must</i> return <a>ERROR_COLOR_SPACE_UNSUPPORTED_FB</a> if
--   <tt>colorSpace</tt> is not one of the values enumerated by
--   <a>enumerateColorSpacesFB</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>setColorSpaceFB</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>colorspace</tt> <i>must</i> be a valid <a>ColorSpaceFB</a>
--   value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_COLOR_SPACE_UNSUPPORTED_FB</a></li><li><a>ERROR_FEATURE_UNSUPPORTED</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ColorSpaceFB</a>, <a>Session</a>, <a>enumerateColorSpacesFB</a>
setColorSpaceFB :: forall io. MonadIO io => Session -> ColorSpaceFB -> io Result

-- | XrSystemColorSpacePropertiesFB - System property for color space
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SystemColorSpacePropertiesFB</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SYSTEM_COLOR_SPACE_PROPERTIES_FB</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>colorSpace</tt> <i>must</i> be a valid <a>ColorSpaceFB</a>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ColorSpaceFB</a>, <a>StructureType</a>
data SystemColorSpacePropertiesFB
SystemColorSpacePropertiesFB :: ColorSpaceFB -> SystemColorSpacePropertiesFB

-- | <tt>colorSpace</tt> is the native color space of the XR device.
[$sel:colorSpace:SystemColorSpacePropertiesFB] :: SystemColorSpacePropertiesFB -> ColorSpaceFB

-- | XrColorSpaceFB - Color Space Type
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>SystemColorSpacePropertiesFB</a>, <a>enumerateColorSpacesFB</a>,
--   <a>setColorSpaceFB</a>
newtype ColorSpaceFB
ColorSpaceFB :: Int32 -> ColorSpaceFB

-- | <a>COLOR_SPACE_UNMANAGED_FB</a>. No color correction, not recommended
--   for production use.
pattern COLOR_SPACE_UNMANAGED_FB :: ColorSpaceFB

-- | <a>COLOR_SPACE_REC2020_FB</a>. Standard Rec. 2020 chromacities. This
--   is the preferred color space for standardized color across all Oculus
--   HMDs with D65 white point.
pattern COLOR_SPACE_REC2020_FB :: ColorSpaceFB

-- | <a>COLOR_SPACE_REC709_FB</a>. Standard Rec. 709 chromaticities,
--   similar to sRGB.
pattern COLOR_SPACE_REC709_FB :: ColorSpaceFB

-- | <a>COLOR_SPACE_RIFT_CV1_FB</a>. Unique color space, between P3 and
--   Adobe RGB using D75 white point.
--   
--   Color Space Details with Chromacity Primaries in CIE 1931 xy:
--   
--   <ul>
--   <li>Red: (0.666, 0.334)</li>
--   <li>Green: (0.238, 0.714)</li>
--   <li>Blue: (0.139, 0.053)</li>
--   <li>White: (0.298, 0.318)</li>
--   </ul>
pattern COLOR_SPACE_RIFT_CV1_FB :: ColorSpaceFB

-- | <a>COLOR_SPACE_RIFT_S_FB</a>. Unique color space. Similar to Rec 709
--   using D75.
--   
--   Color Space Details with Chromacity Primaries in CIE 1931 xy:
--   
--   <ul>
--   <li>Red: (0.640, 0.330)</li>
--   <li>Green: (0.292, 0.586)</li>
--   <li>Blue: (0.156, 0.058)</li>
--   <li>White: (0.298, 0.318)</li>
--   </ul>
pattern COLOR_SPACE_RIFT_S_FB :: ColorSpaceFB

-- | <a>COLOR_SPACE_QUEST_FB</a>. Unique color space. Similar to Rift CV1
--   using D75 white point
--   
--   Color Space Details with Chromacity Primaries in CIE 1931 xy:
--   
--   <ul>
--   <li>Red: (0.661, 0.338)</li>
--   <li>Green: (0.228, 0.718)</li>
--   <li>Blue: (0.142, 0.042)</li>
--   <li>White: (0.298, 0.318)</li>
--   </ul>
pattern COLOR_SPACE_QUEST_FB :: ColorSpaceFB

-- | <a>COLOR_SPACE_P3_FB</a>. Similar to DCI-P3, but uses D65 white point
--   instead.
--   
--   Color Space Details with Chromacity Primaries in CIE 1931 xy:
--   
--   <ul>
--   <li>Red: (0.680, 0.320)</li>
--   <li>Green: (0.265, 0.690)</li>
--   <li>Blue: (0.150, 0.060)</li>
--   <li>White: (0.313, 0.329)</li>
--   </ul>
pattern COLOR_SPACE_P3_FB :: ColorSpaceFB

-- | <a>COLOR_SPACE_ADOBE_RGB_FB</a>. Standard Adobe chromacities.
pattern COLOR_SPACE_ADOBE_RGB_FB :: ColorSpaceFB
type FB_color_space_SPEC_VERSION = 1
pattern FB_color_space_SPEC_VERSION :: forall a. Integral a => a
type FB_COLOR_SPACE_EXTENSION_NAME = "XR_FB_color_space"
pattern FB_COLOR_SPACE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_FB_color_space.SystemColorSpacePropertiesFB
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_FB_color_space.ColorSpaceFB
instance Foreign.Storable.Storable OpenXR.Extensions.XR_FB_color_space.ColorSpaceFB
instance GHC.Classes.Ord OpenXR.Extensions.XR_FB_color_space.ColorSpaceFB
instance GHC.Classes.Eq OpenXR.Extensions.XR_FB_color_space.ColorSpaceFB
instance GHC.Show.Show OpenXR.Extensions.XR_FB_color_space.SystemColorSpacePropertiesFB
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_FB_color_space.SystemColorSpacePropertiesFB
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_FB_color_space.SystemColorSpacePropertiesFB
instance Foreign.Storable.Storable OpenXR.Extensions.XR_FB_color_space.SystemColorSpacePropertiesFB
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_FB_color_space.SystemColorSpacePropertiesFB
instance GHC.Show.Show OpenXR.Extensions.XR_FB_color_space.ColorSpaceFB
instance GHC.Read.Read OpenXR.Extensions.XR_FB_color_space.ColorSpaceFB

module OpenXR.Extensions.Handles

-- | XrDebugUtilsMessengerEXT - Callback for debug data
--   
--   <h1>Description</h1>
--   
--   <a>DebugUtilsMessengerEXT</a> represents a callback function and
--   associated filters registered with the runtime.
--   
--   <h1>See Also</h1>
--   
--   <a>createDebugUtilsMessengerEXT</a>,
--   <a>destroyDebugUtilsMessengerEXT</a>
data DebugUtilsMessengerEXT
DebugUtilsMessengerEXT :: Ptr DebugUtilsMessengerEXT_T -> InstanceCmds -> DebugUtilsMessengerEXT
[$sel:debugUtilsMessengerEXTHandle:DebugUtilsMessengerEXT] :: DebugUtilsMessengerEXT -> Ptr DebugUtilsMessengerEXT_T
[$sel:instanceCmds:DebugUtilsMessengerEXT] :: DebugUtilsMessengerEXT -> InstanceCmds

-- | An opaque type for representing pointers to XrDebugUtilsMessengerEXT
--   handles
data DebugUtilsMessengerEXT_T

-- | XrSpatialAnchorMSFT - Represents a spatial anchor
--   
--   <h1>Description</h1>
--   
--   Spatial anchors are often used in combination with an
--   <tt>UNBOUNDED_MSFT</tt> reference space. <tt>UNBOUNDED_MSFT</tt>
--   reference spaces adjust their origin as necessary to keep the viewer’s
--   coordinates relative to the space’s origin stable. Such adjustments
--   maintain the visual stability of content currently near the viewer,
--   but may cause content placed far from the viewer to drift in its
--   alignment to the real world by the time the user moves close again. By
--   creating an <a>SpatialAnchorMSFT</a> where a piece of content is
--   placed and then always rendering that content relative to its anchor’s
--   space, an application can ensure that each piece of content stays at a
--   fixed location in the environment.
--   
--   <h1>See Also</h1>
--   
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a>,
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a>,
--   <a>createSpatialAnchorMSFT</a>, <a>destroySpatialAnchorMSFT</a>,
--   <a>tryGetPerceptionAnchorFromSpatialAnchorMSFT</a>
data SpatialAnchorMSFT
SpatialAnchorMSFT :: Ptr SpatialAnchorMSFT_T -> InstanceCmds -> SpatialAnchorMSFT
[$sel:spatialAnchorMSFTHandle:SpatialAnchorMSFT] :: SpatialAnchorMSFT -> Ptr SpatialAnchorMSFT_T
[$sel:instanceCmds:SpatialAnchorMSFT] :: SpatialAnchorMSFT -> InstanceCmds

-- | An opaque type for representing pointers to XrSpatialAnchorMSFT
--   handles
data SpatialAnchorMSFT_T

-- | XrHandTrackerEXT - Represents a tracker for a hand joints.
--   
--   <h1>Description</h1>
--   
--   An application creates separate <a>HandTrackerEXT</a> handles for left
--   and right hands. This handle can be used to locate hand joints using
--   <a>locateHandJointsEXT</a> function.
--   
--   A hand tracker provides accurate fidelity to the user’s actual hand
--   shape. When the hand tracking input requires the user to be holding a
--   controller in their hand, the hand tracking input will appear as the
--   user holding the controller. This input can be used to render the hand
--   shape together with rendering the controller in the hand.
--   
--   <h1>See Also</h1>
--   
--   <a>createHandMeshSpaceMSFT</a>, <a>createHandTrackerEXT</a>,
--   <a>destroyHandTrackerEXT</a>, <a>locateHandJointsEXT</a>,
--   <a>updateHandMeshMSFT</a>
data HandTrackerEXT
HandTrackerEXT :: Ptr HandTrackerEXT_T -> InstanceCmds -> HandTrackerEXT
[$sel:handTrackerEXTHandle:HandTrackerEXT] :: HandTrackerEXT -> Ptr HandTrackerEXT_T
[$sel:instanceCmds:HandTrackerEXT] :: HandTrackerEXT -> InstanceCmds

-- | An opaque type for representing pointers to XrHandTrackerEXT handles
data HandTrackerEXT_T

-- | XrInstance - Opaque handle to an instance object
--   
--   <h1>Description</h1>
--   
--   An OpenXR instance is an object that allows an OpenXR application to
--   communicate with an OpenXR runtime. The application accomplishes this
--   communication by calling <a>createInstance</a> and receiving a handle
--   to the resulting <a>Instance</a> object.
--   
--   The <a>Instance</a> object stores and tracks OpenXR-related
--   application state, without storing any such state in the application’s
--   global address space. This allows the application to create multiple
--   instances as well as safely encapsulate the application’s OpenXR state
--   since this object is opaque to the application. OpenXR runtimes
--   <i>may</i> limit the number of simultaneous <a>Instance</a> objects
--   that may be created and used, but they <i>must</i> support the
--   creation and usage of at least one <a>Instance</a> object per process.
--   
--   Physically, this state <i>may</i> be stored in any of the OpenXR
--   loader, OpenXR API layers or the OpenXR runtime components. The exact
--   storage and distribution of this saved state is
--   implementation-dependent, except where indicated by this
--   specification.
--   
--   <h1>See Also</h1>
--   
--   <a>InstanceCreateInfo</a>, <a>InstanceProperties</a>,
--   <a>convertTimeToTimespecTimeKHR</a>,
--   <a>convertTimeToWin32PerformanceCounterKHR</a>,
--   <a>convertTimespecTimeToTimeKHR</a>,
--   <a>convertWin32PerformanceCounterToTimeKHR</a>,
--   <a>createActionSet</a>, <a>createDebugUtilsMessengerEXT</a>,
--   <a>createInstance</a>, <a>createSession</a>,
--   <a>createVulkanDeviceKHR</a>, <a>createVulkanInstanceKHR</a>,
--   <a>destroyInstance</a>, <a>enumerateEnvironmentBlendModes</a>,
--   <a>enumerateViewConfigurationViews</a>,
--   <a>enumerateViewConfigurations</a>,
--   <a>getD3D11GraphicsRequirementsKHR</a>,
--   <a>getD3D12GraphicsRequirementsKHR</a>, <a>getInstanceProcAddr</a>,
--   <a>getInstanceProperties</a>,
--   <a>getOpenGLESGraphicsRequirementsKHR</a>,
--   <a>getOpenGLGraphicsRequirementsKHR</a>, <a>getSystem</a>,
--   <a>getSystemProperties</a>, <a>getViewConfigurationProperties</a>,
--   <a>getVulkanDeviceExtensionsKHR</a>,
--   <a>getVulkanGraphicsDevice2KHR</a>, <a>getVulkanGraphicsDeviceKHR</a>,
--   <a>getVulkanGraphicsRequirements2KHR</a>,
--   <a>getVulkanGraphicsRequirementsKHR</a>,
--   <a>getVulkanInstanceExtensionsKHR</a>, <a>pathToString</a>,
--   <a>pollEvent</a>, <a>resultToString</a>,
--   <a>setDebugUtilsObjectNameEXT</a>, <a>stringToPath</a>,
--   <a>structureTypeToString</a>, <a>submitDebugUtilsMessageEXT</a>,
--   <a>suggestInteractionProfileBindings</a>
data Instance
Instance :: Ptr Instance_T -> InstanceCmds -> Instance
[$sel:instanceHandle:Instance] :: Instance -> Ptr Instance_T
[$sel:instanceCmds:Instance] :: Instance -> InstanceCmds

-- | XrSession - Opaque handle to a session object
--   
--   <h1>Description</h1>
--   
--   A session represents an application’s intention to display XR content
--   to the user.
--   
--   First, the application creates a session by choosing a <a>system</a>
--   and a graphics API and calling <a>createSession</a>, which creates a
--   session in the <a>SESSION_STATE_IDLE</a> state. The application then
--   sets up an <a>pollEvent</a> loop to monitor for session state changes
--   delivered through the <a>EventDataSessionStateChanged</a> event. When
--   the runtime determines that the system is ready to start transitioning
--   to this session’s XR content, it notifies the application that its
--   session has moved into the <a>SESSION_STATE_READY</a> state. When the
--   application is ready to proceed and display its XR content, it calls
--   <a>beginSession</a> and <a>starts its frame loop</a>, which starts its
--   session running. While the session is running, the application is
--   expected to continuously run its frame loop by calling
--   <a>waitFrame</a>, <a>beginFrame</a> and <a>endFrame</a> each frame, to
--   establish synchronization with the runtime. Once the runtime is
--   synchronized with the application’s frame loop and ready to display
--   its frames, the session will move into the
--   <a>SESSION_STATE_SYNCHRONIZED</a> state. For frames where
--   <a>waitFrame</a> returns an <a>FrameState</a> with
--   <tt>shouldRender</tt> set to true, the application should render its
--   composition layers and submit them to <a>endFrame</a>. If the
--   application desires to leave a running session, it should call the
--   <a>requestExitSession</a> function to request that the runtime
--   transition its session to the <a>SESSION_STATE_STOPPING</a> state as
--   soon as possible. Once the application reaches the
--   <a>SESSION_STATE_STOPPING</a> state, it can call <a>endSession</a> to
--   stop the XR session, after which the session will transition through
--   <a>SESSION_STATE_IDLE</a> to the <a>SESSION_STATE_EXITING</a> state.
--   
--   A session is considered <b>running</b> after a successful call to
--   <a>beginSession</a> and remains running until any call is made to
--   <a>endSession</a>. Certain functions are only valid to call when a
--   session is running, such as <a>waitFrame</a>, or else the
--   <a>ERROR_SESSION_NOT_RUNNING</a> error <i>must</i> be returned by the
--   runtime.
--   
--   A session is considered <b>not running</b> before a successful call to
--   <a>beginSession</a> and becomes not running again after any call is
--   made to <a>endSession</a>. Certain functions are only valid to call
--   when a session is not running, such as <a>beginSession</a>, or else
--   the <a>ERROR_SESSION_RUNNING</a> error <i>must</i> be returned by the
--   runtime.
--   
--   If an error is returned from <a>beginSession</a>, the session remains
--   in its current running or not running state. Calling <a>endSession</a>
--   always transitions a session to the not running state, regardless of
--   any errors returned.
--   
--   Only running sessions may become focused sessions that receive XR
--   input. When a session <a>is not running</a>, the application
--   <i>must</i> not submit frames. This is important because without a
--   running session, the runtime no longer has to spend resources on
--   sub-systems (tracking etc.) that are no longer needed by the
--   application.
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataInteractionProfileChanged</a>,
--   <a>EventDataReferenceSpaceChangePending</a>,
--   <a>EventDataSessionStateChanged</a>,
--   <a>EventDataVisibilityMaskChangedKHR</a>, <a>applyHapticFeedback</a>,
--   <a>attachSessionActionSets</a>, <a>beginFrame</a>,
--   <a>beginSession</a>, <a>createActionSpace</a>,
--   <a>createHandTrackerEXT</a>, <a>createReferenceSpace</a>,
--   <a>createSession</a>,
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a>,
--   <a>createSpatialAnchorMSFT</a>, <a>createSpatialAnchorSpaceMSFT</a>,
--   <a>createSpatialGraphNodeSpaceMSFT</a>, <a>createSwapchain</a>,
--   <a>createSwapchainAndroidSurfaceKHR</a>, <a>destroySession</a>,
--   <a>endFrame</a>, <a>endSession</a>,
--   <a>enumerateBoundSourcesForAction</a>, <a>enumerateColorSpacesFB</a>,
--   <a>enumerateDisplayRefreshRatesFB</a>,
--   <a>enumerateReferenceSpaces</a>, <a>enumerateSwapchainFormats</a>,
--   <a>getActionStateBoolean</a>, <a>getActionStateFloat</a>,
--   <a>getActionStatePose</a>, <a>getActionStateVector2f</a>,
--   <a>getControllerModelKeyMSFT</a>,
--   <a>getControllerModelPropertiesMSFT</a>,
--   <a>getControllerModelStateMSFT</a>,
--   <a>getCurrentInteractionProfile</a>, <a>getDisplayRefreshRateFB</a>,
--   <a>getInputSourceLocalizedName</a>,
--   <a>getReferenceSpaceBoundsRect</a>, <a>getVisibilityMaskKHR</a>,
--   <a>loadControllerModelMSFT</a>, <a>locateViews</a>,
--   <a>perfSettingsSetPerformanceLevelEXT</a>,
--   <a>requestDisplayRefreshRateFB</a>, <a>requestExitSession</a>,
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a>,
--   <a>sessionEndDebugUtilsLabelRegionEXT</a>,
--   <a>sessionInsertDebugUtilsLabelEXT</a>,
--   <a>setAndroidApplicationThreadKHR</a>, <a>setColorSpaceFB</a>,
--   <a>xrSetInputDeviceActiveEXT</a>, <a>xrSetInputDeviceLocationEXT</a>,
--   <a>xrSetInputDeviceStateBoolEXT</a>,
--   <a>xrSetInputDeviceStateFloatEXT</a>,
--   <a>xrSetInputDeviceStateVector2fEXT</a>, <a>stopHapticFeedback</a>,
--   <a>syncActions</a>, <a>thermalGetTemperatureTrendEXT</a>,
--   <a>tryGetPerceptionAnchorFromSpatialAnchorMSFT</a>, <a>waitFrame</a>
data Session
Session :: Ptr Session_T -> InstanceCmds -> Session
[$sel:sessionHandle:Session] :: Session -> Ptr Session_T
[$sel:instanceCmds:Session] :: Session -> InstanceCmds

-- | XrAction - Opaque handle to an action
--   
--   <h1>Description</h1>
--   
--   Action handles are used to refer to individual actions when retrieving
--   action data, creating action spaces, or sending haptic events.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSpaceCreateInfo</a>, <a>ActionStateGetInfo</a>,
--   <a>ActionSuggestedBinding</a>, <a>ActionType</a>,
--   <a>BoundSourcesForActionEnumerateInfo</a>, <a>HapticActionInfo</a>,
--   <a>InteractionProfileAnalogThresholdVALVE</a>, <a>createAction</a>,
--   <a>destroyAction</a>
data Action
Action :: Ptr Action_T -> InstanceCmds -> Action
[$sel:actionHandle:Action] :: Action -> Ptr Action_T
[$sel:instanceCmds:Action] :: Action -> InstanceCmds

-- | XrSwapchain - Opaque handle to a swapchain object
--   
--   <h1>Description</h1>
--   
--   Normal XR applications will want to present rendered images to the
--   user. To allow this, the runtime provides images organized in
--   swapchains for the application to render into. The runtime <i>must</i>
--   allow applications to create multiple swapchains.
--   
--   Swapchain image format support by the runtime is specified by the
--   <a>enumerateSwapchainFormats</a> function. Runtimes <i>should</i>
--   support <tt>R8G8B8A8</tt> and <tt>R8G8B8A8</tt> <tt>sRGB</tt> formats
--   if possible.
--   
--   Swapchain images <i>can</i> be 2D or 2D Array.
--   
--   Rendering operations involving composition of submitted layers should
--   be assumed to be internally performed by the runtime in linear color
--   space. Images submitted in sRGB color space must be created using an
--   API-specific sRGB format (e.g.
--   <tt>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</tt>, <tt>GL_SRGB8_ALPHA8</tt>,
--   <tt>VK_FORMAT_R8G8B8A8_SRGB</tt>) to apply automatic sRGB-to-linear
--   conversion when read by the runtime. All other formats will be treated
--   as linear values.
--   
--   Note
--   
--   OpenXR applications should avoid submitting linear encoded 8 bit color
--   data (e.g. <tt>DXGI_FORMAT_R8G8B8A8_UNORM</tt>) whenever possible as
--   it may result in color banding.
--   
--   Gritz, L. and d’Eon, E. 2007. The Importance of Being Linear. In: H.
--   Nguyen, ed., <i>GPU Gems 3</i>. Addison-Wesley Professional.
--   <a>https://developer.nvidia.com/gpugems/gpugems3/part-iv-image-effects/chapter-24-importance-being-linear</a>
--   
--   Note
--   
--   DXGI resources will be created with their associated TYPELESS format,
--   but the runtime will use the application-specified format for reading
--   the data.
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerCubeKHR</a>, <a>SwapchainSubImage</a>,
--   <a>acquireSwapchainImage</a>, <a>createSwapchain</a>,
--   <a>createSwapchainAndroidSurfaceKHR</a>, <a>destroySwapchain</a>,
--   <a>enumerateSwapchainFormats</a>, <a>enumerateSwapchainImages</a>,
--   <a>releaseSwapchainImage</a>, <a>waitSwapchainImage</a>
data Swapchain
Swapchain :: Ptr Swapchain_T -> InstanceCmds -> Swapchain
[$sel:swapchainHandle:Swapchain] :: Swapchain -> Ptr Swapchain_T
[$sel:instanceCmds:Swapchain] :: Swapchain -> InstanceCmds

-- | XrSpace - Opaque handle to a space
--   
--   <h1>Description</h1>
--   
--   Spaces are represented by <a>Space</a> handles, which the application
--   creates and then uses in API calls. Whenever an application calls a
--   function that returns coordinates, it provides an <a>Space</a> to
--   specify the frame of reference in which those coordinates will be
--   expressed. Similarly, when providing coordinates to a function, the
--   application specifies which <a>Space</a> the runtime should use to
--   interpret those coordinates.
--   
--   OpenXR defines a set of well-known <b>reference spaces</b> that
--   applications use to bootstrap their spatial reasoning. These reference
--   spaces are: <tt>VIEW</tt>, <tt>LOCAL</tt> and <tt>STAGE</tt>. Each
--   reference space has a well-defined meaning, which establishes where
--   its origin is positioned and how its axes are oriented.
--   
--   Runtimes whose tracking systems improve their understanding of the
--   world over time <i>may</i> track spaces independently. For example,
--   even though a <tt>LOCAL</tt> space and a <tt>STAGE</tt> space each map
--   their origin to a static position in the world, a runtime with an
--   inside-out tracking system <i>may</i> introduce slight adjustments to
--   the origin of each space on a continuous basis to keep each origin in
--   place.
--   
--   Beyond well-known reference spaces, runtimes expose other
--   independently-tracked spaces, such as a pose action space that tracks
--   the pose of a motion controller over time.
--   
--   When one or both spaces are tracking a dynamic object, passing in an
--   updated time to <a>locateSpace</a> each frame will result in an
--   updated relative pose. For example, the location of the left hand’s
--   pose action space in the <tt>STAGE</tt> reference space will change
--   each frame as the user’s hand moves relative to the stage’s predefined
--   origin on the floor. In other XR APIs, it is common to report the
--   "pose" of an object relative to some presumed underlying global space.
--   This API is careful to not explicitly define such an underlying global
--   space, because it does not apply to all systems. Some systems will
--   support no <tt>STAGE</tt> space, while others may support a
--   <tt>STAGE</tt> space that switches between various physical stages
--   with dynamic availability. To satisfy this wide variability, "poses"
--   are always described as the relationship between two spaces.
--   
--   Some devices improve their understanding of the world as the device is
--   used. The location returned by <a>locateSpace</a> in later frames
--   <i>may</i> change over time, even for spaces that track static
--   objects, as either the target space or base space adjusts its origin.
--   
--   Composition layers submitted by the application include an
--   <a>Space</a> for the runtime to use to position that layer over time.
--   Composition layers whose <a>Space</a> is relative to the <tt>VIEW</tt>
--   reference space are implicitly "head-locked", even if they may not be
--   "display-locked" for non-head-mounted form factors.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSpaceCreateInfo</a>, <a>CompositionLayerBaseHeader</a>,
--   <a>CompositionLayerCubeKHR</a>, <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>, <a>CompositionLayerProjection</a>,
--   <a>CompositionLayerQuad</a>, <a>HandJointsLocateInfoEXT</a>,
--   <a>ReferenceSpaceCreateInfo</a>, <a>SpatialAnchorCreateInfoMSFT</a>,
--   <a>ViewLocateInfo</a>, <a>createActionSpace</a>,
--   <a>createHandMeshSpaceMSFT</a>, <a>createReferenceSpace</a>,
--   <a>createSpatialAnchorSpaceMSFT</a>,
--   <a>createSpatialGraphNodeSpaceMSFT</a>, <a>destroySpace</a>,
--   <a>locateSpace</a>, <a>xrSetInputDeviceLocationEXT</a>
data Space
Space :: Ptr Space_T -> InstanceCmds -> Space
[$sel:spaceHandle:Space] :: Space -> Ptr Space_T
[$sel:instanceCmds:Space] :: Space -> InstanceCmds
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Extensions.Handles.HandTrackerEXT
instance GHC.Show.Show OpenXR.Extensions.Handles.HandTrackerEXT
instance GHC.Classes.Eq OpenXR.Extensions.Handles.HandTrackerEXT
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Extensions.Handles.SpatialAnchorMSFT
instance GHC.Show.Show OpenXR.Extensions.Handles.SpatialAnchorMSFT
instance GHC.Classes.Eq OpenXR.Extensions.Handles.SpatialAnchorMSFT
instance OpenXR.Core10.APIConstants.IsHandle OpenXR.Extensions.Handles.DebugUtilsMessengerEXT
instance GHC.Show.Show OpenXR.Extensions.Handles.DebugUtilsMessengerEXT
instance GHC.Classes.Eq OpenXR.Extensions.Handles.DebugUtilsMessengerEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.Handles.HandTrackerEXT
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Extensions.Handles.HandTrackerEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.Handles.SpatialAnchorMSFT
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Extensions.Handles.SpatialAnchorMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.Handles.DebugUtilsMessengerEXT
instance OpenXR.Core10.APIConstants.HasObjectType OpenXR.Extensions.Handles.DebugUtilsMessengerEXT


-- | <h1>Name</h1>
--   
--   XR_EXT_debug_utils - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_debug_utils</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   20
--   
--   <h1>Revision</h1>
--   
--   3
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>PFN_xrDebugUtilsMessengerCallbackEXT</a>,
--   <a>DebugUtilsLabelEXT</a>, <a>DebugUtilsMessengerCallbackDataEXT</a>,
--   <a>DebugUtilsMessengerCreateInfoEXT</a>,
--   <a>DebugUtilsObjectNameInfoEXT</a>,
--   <a>createDebugUtilsMessengerEXT</a>,
--   <a>destroyDebugUtilsMessengerEXT</a>,
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a>,
--   <a>sessionEndDebugUtilsLabelRegionEXT</a>,
--   <a>sessionInsertDebugUtilsLabelEXT</a>,
--   <a>setDebugUtilsObjectNameEXT</a>, <a>submitDebugUtilsMessageEXT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_debug_utils

-- | xrSetDebugUtilsObjectNameEXT - Sets debug utils object name
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li>In the structure pointed to by <tt>nameInfo</tt>,
--   <a>DebugUtilsObjectNameInfoEXT</a>::<tt>objectType</tt> <i>must</i>
--   not be <a>OBJECT_TYPE_UNKNOWN</a></li>
--   </ul>
--   
--   <ul>
--   <li>In the structure pointed to by <tt>nameInfo</tt>,
--   <a>DebugUtilsObjectNameInfoEXT</a>::<tt>objectHandle</tt> <i>must</i>
--   not be <a>XR_NULL_HANDLE</a></li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>setDebugUtilsObjectNameEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>nameInfo</tt> <i>must</i> be a pointer to a valid
--   <a>DebugUtilsObjectNameInfoEXT</a> structure</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to the <tt>objectHandle</tt> member of the
--   <tt>nameInfo</tt> parameter <i>must</i> be externally
--   synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   Applications <i>may</i> change the name associated with an object
--   simply by calling <a>setDebugUtilsObjectNameEXT</a> again with a new
--   string. If <a>DebugUtilsObjectNameInfoEXT</a>::<tt>objectName</tt> is
--   an empty string, then any previously set name is removed.
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsObjectNameInfoEXT</a>, <a>Instance</a>
setDebugUtilsObjectNameEXT :: forall io. MonadIO io => Instance -> DebugUtilsObjectNameInfoEXT -> io ()

-- | xrCreateDebugUtilsMessengerEXT - Creates a debug messenger
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createDebugUtilsMessengerEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>DebugUtilsMessengerCreateInfoEXT</a> structure</li>
--   <li><tt>messenger</tt> <i>must</i> be a pointer to an
--   <a>DebugUtilsMessengerEXT</a> handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>instance</tt>, and any child handles, <i>must</i> be
--   externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   The application <i>must</i> ensure that
--   <a>createDebugUtilsMessengerEXT</a> is not executed in parallel with
--   any OpenXR function that is also called with <tt>instance</tt> or
--   child of <tt>instance</tt>.
--   
--   When an event of interest occurs a debug messenger calls its
--   <tt>createInfo</tt>-&gt;<tt>userCallback</tt> with a debug message
--   from the producer of the event. Additionally, the debug messenger
--   <i>must</i> filter out any debug messages that the application’s
--   callback is not interested in based on
--   <a>DebugUtilsMessengerCreateInfoEXT</a> flags, as described below.
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessengerCreateInfoEXT</a>,
--   <a>DebugUtilsMessengerEXT</a>, <a>Instance</a>,
--   <a>destroyDebugUtilsMessengerEXT</a>
createDebugUtilsMessengerEXT :: forall io. MonadIO io => Instance -> DebugUtilsMessengerCreateInfoEXT -> io DebugUtilsMessengerEXT

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createDebugUtilsMessengerEXT</a> and
--   <a>destroyDebugUtilsMessengerEXT</a>
--   
--   To ensure that <a>destroyDebugUtilsMessengerEXT</a> is always called:
--   pass <a>bracket</a> (or the allocate function from your favourite
--   resource management library) as the last argument. To just extract the
--   pair pass <tt>(,)</tt> as the last argument.
withDebugUtilsMessengerEXT :: forall io r. MonadIO io => Instance -> DebugUtilsMessengerCreateInfoEXT -> (io DebugUtilsMessengerEXT -> (DebugUtilsMessengerEXT -> io ()) -> r) -> r

-- | xrDestroyDebugUtilsMessengerEXT - Destroys a debug messenger
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>destroyDebugUtilsMessengerEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>messenger</tt> <i>must</i> be a valid
--   <a>DebugUtilsMessengerEXT</a> handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>messenger</tt> <i>must</i> be externally
--   synchronized</li>
--   </ul>
--   
--   <ul>
--   <li>Access to the <a>Instance</a> used to create <tt>messenger</tt>,
--   and all of its child handles <i>must</i> be externally
--   synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   The application <i>must</i> ensure that
--   <a>destroyDebugUtilsMessengerEXT</a> is not executed in parallel with
--   any OpenXR function that is also called with the <tt>instance</tt> or
--   child of <tt>instance</tt> that it was created with.
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessengerEXT</a>, <a>createDebugUtilsMessengerEXT</a>
destroyDebugUtilsMessengerEXT :: forall io. MonadIO io => DebugUtilsMessengerEXT -> io ()

-- | xrSubmitDebugUtilsMessageEXT - Submits debug utils message
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li>For each structure in <tt>objects</tt> found in
--   <tt>callbackData</tt>, the value of
--   <a>DebugUtilsObjectNameInfoEXT</a>::<tt>objectType</tt> <i>must</i>
--   not be <a>OBJECT_TYPE_UNKNOWN</a></li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>submitDebugUtilsMessageEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>messageSeverity</tt> <i>must</i> be a valid combination of
--   <a>XrDebugUtilsMessageSeverityFlagBitsEXT</a> values</li>
--   <li><tt>messageSeverity</tt> <i>must</i> not be <tt>0</tt></li>
--   <li><tt>messageTypes</tt> <i>must</i> be a valid combination of
--   <a>XrDebugUtilsMessageTypeFlagBitsEXT</a> values</li>
--   <li><tt>messageTypes</tt> <i>must</i> not be <tt>0</tt></li>
--   <li><tt>callbackData</tt> <i>must</i> be a pointer to a valid
--   <a>DebugUtilsMessengerCallbackDataEXT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   The application <i>can</i> also produce a debug message, and submit it
--   into the OpenXR messaging system.
--   
--   The call will propagate through the layers and generate callback(s) as
--   indicated by the message’s flags. The parameters are passed on to the
--   callback in addition to the userData value that was defined at the
--   time the messenger was created.
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessageSeverityFlagsEXT</a>,
--   <a>DebugUtilsMessageTypeFlagsEXT</a>,
--   <a>DebugUtilsMessengerCallbackDataEXT</a>, <a>Instance</a>
submitDebugUtilsMessageEXT :: forall io. MonadIO io => Instance -> DebugUtilsMessageSeverityFlagsEXT -> ("messageTypes" ::: DebugUtilsMessageTypeFlagsEXT) -> DebugUtilsMessengerCallbackDataEXT -> io ()

-- | xrSessionBeginDebugUtilsLabelRegionEXT - Session begin debug utils
--   label region
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>labelInfo</tt> <i>must</i> be a pointer to a valid
--   <a>DebugUtilsLabelEXT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   The <a>sessionBeginDebugUtilsLabelRegionEXT</a> function begins a
--   label region within <tt>session</tt>.
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsLabelEXT</a>, <a>Session</a>
sessionBeginDebugUtilsLabelRegionEXT :: forall io. MonadIO io => Session -> ("labelInfo" ::: DebugUtilsLabelEXT) -> io Result

-- | xrSessionEndDebugUtilsLabelRegionEXT - Session end debug utils label
--   region
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li><a>sessionEndDebugUtilsLabelRegionEXT</a> <i>must</i> be called
--   only after a matching
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a>.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>sessionEndDebugUtilsLabelRegionEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   This function ends the last label region begun with the
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a> function within the same
--   <tt>session</tt>.
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>
sessionEndDebugUtilsLabelRegionEXT :: forall io. MonadIO io => Session -> io Result

-- | xrSessionInsertDebugUtilsLabelEXT - Session insert debug utils label
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>sessionInsertDebugUtilsLabelEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>labelInfo</tt> <i>must</i> be a pointer to a valid
--   <a>DebugUtilsLabelEXT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   The <a>sessionInsertDebugUtilsLabelEXT</a> function inserts an
--   individual label within <tt>session</tt>. The individual labels are
--   useful for different reasons based on the type of debugging scenario.
--   When used with something active like a profiler or debugger, it
--   identifies a single point of time. When used with logging, the
--   individual label identifies that a particular location has been passed
--   at the point the log message is triggered. Because of this usage,
--   individual labels only exist in a log until the next call to any of
--   the label functions:
--   
--   <ul>
--   <li><a>sessionBeginDebugUtilsLabelRegionEXT</a></li>
--   <li><a>sessionEndDebugUtilsLabelRegionEXT</a></li>
--   <li><a>sessionInsertDebugUtilsLabelEXT</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsLabelEXT</a>, <a>Session</a>,
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a>,
--   <a>sessionEndDebugUtilsLabelRegionEXT</a>
sessionInsertDebugUtilsLabelEXT :: forall io. MonadIO io => Session -> ("labelInfo" ::: DebugUtilsLabelEXT) -> io Result

-- | XrDebugUtilsObjectNameInfoEXT - Debug utils object name info
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li>If <tt>objectType</tt> is <a>OBJECT_TYPE_UNKNOWN</a>,
--   <tt>objectHandle</tt> <i>must</i> not be <a>XR_NULL_HANDLE</a></li>
--   </ul>
--   
--   <ul>
--   <li>If <tt>objectType</tt> is not <a>OBJECT_TYPE_UNKNOWN</a>,
--   <tt>objectHandle</tt> <i>must</i> be <a>XR_NULL_HANDLE</a> or an
--   OpenXR handle of the type associated with <tt>objectType</tt></li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>DebugUtilsObjectNameInfoEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>objectType</tt> <i>must</i> be a valid <a>ObjectType</a>
--   value</li>
--   <li>If <tt>objectName</tt> is not <tt>NULL</tt>, <tt>objectName</tt>
--   <i>must</i> be a null-terminated UTF-8 string</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessengerCallbackDataEXT</a>, <a>ObjectType</a>,
--   <a>StructureType</a>, <a>setDebugUtilsObjectNameEXT</a>
data DebugUtilsObjectNameInfoEXT
DebugUtilsObjectNameInfoEXT :: ObjectType -> Word64 -> Maybe ByteString -> DebugUtilsObjectNameInfoEXT

-- | <tt>objectType</tt> is an <a>ObjectType</a> specifying the type of the
--   object to be named.
[$sel:objectType:DebugUtilsObjectNameInfoEXT] :: DebugUtilsObjectNameInfoEXT -> ObjectType

-- | <tt>objectHandle</tt> is the object to be named.
[$sel:objectHandle:DebugUtilsObjectNameInfoEXT] :: DebugUtilsObjectNameInfoEXT -> Word64

-- | <tt>objectName</tt> is a <tt>NULL</tt> terminated UTF-8 string
--   specifying the name to apply to objectHandle.
[$sel:objectName:DebugUtilsObjectNameInfoEXT] :: DebugUtilsObjectNameInfoEXT -> Maybe ByteString

-- | XrDebugUtilsLabelEXT - Debug Utils Label
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>DebugUtilsLabelEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_DEBUG_UTILS_LABEL_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>labelName</tt> <i>must</i> be a null-terminated UTF-8
--   string</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessengerCallbackDataEXT</a>, <a>StructureType</a>,
--   <a>sessionBeginDebugUtilsLabelRegionEXT</a>,
--   <a>sessionInsertDebugUtilsLabelEXT</a>
data DebugUtilsLabelEXT
DebugUtilsLabelEXT :: ByteString -> DebugUtilsLabelEXT

-- | <tt>labelName</tt> is a <tt>NULL</tt> terminated UTF-8 string
--   specifying the label name.
[$sel:labelName:DebugUtilsLabelEXT] :: DebugUtilsLabelEXT -> ByteString

-- | XrDebugUtilsMessengerCallbackDataEXT - Debug utils messenger callback
--   data
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>DebugUtilsMessengerCallbackDataEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>messageId</tt> <i>must</i> be a null-terminated UTF-8
--   string</li>
--   <li><tt>functionName</tt> <i>must</i> be a null-terminated UTF-8
--   string</li>
--   <li><tt>message</tt> <i>must</i> be a null-terminated UTF-8
--   string</li>
--   </ul>
--   
--   An <a>DebugUtilsMessengerCallbackDataEXT</a> is a messenger object
--   that handles passing along debug messages to a provided debug
--   callback.
--   
--   Note
--   
--   This structure should only be considered valid during the lifetime of
--   the triggered callback.
--   
--   The labels listed inside <tt>sessionLabels</tt> are organized in time
--   order, with the most recently generated label appearing first, and the
--   oldest label appearing last.
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsLabelEXT</a>, <a>DebugUtilsObjectNameInfoEXT</a>,
--   <a>StructureType</a>, <a>submitDebugUtilsMessageEXT</a>
data DebugUtilsMessengerCallbackDataEXT
DebugUtilsMessengerCallbackDataEXT :: ByteString -> ByteString -> ByteString -> Word32 -> Ptr DebugUtilsObjectNameInfoEXT -> Word32 -> Ptr DebugUtilsLabelEXT -> DebugUtilsMessengerCallbackDataEXT

-- | <tt>messageId</tt> is a <tt>NULL</tt> terminated string that
--   identifies the message in a unique way. If the callback is triggered
--   by a validation layer, this string corresponds the Valid Usage ID
--   (VUID) that can be used to jump to the appropriate location in the
--   OpenXR specification. This value <i>may</i> be <tt>NULL</tt> if no
--   unique message identifier is associated with the message.
[$sel:messageId:DebugUtilsMessengerCallbackDataEXT] :: DebugUtilsMessengerCallbackDataEXT -> ByteString

-- | <tt>functionName</tt> is a <tt>NULL</tt> terminated string that
--   identifies the OpenXR function that was executing at the time the
--   message callback was triggered. This value <i>may</i> be <tt>NULL</tt>
--   in cases where it is difficult to determine the originating OpenXR
--   function.
[$sel:functionName:DebugUtilsMessengerCallbackDataEXT] :: DebugUtilsMessengerCallbackDataEXT -> ByteString

-- | <tt>message</tt> is a <tt>NULL</tt> terminated string detailing the
--   trigger conditions.
[$sel:message:DebugUtilsMessengerCallbackDataEXT] :: DebugUtilsMessengerCallbackDataEXT -> ByteString

-- | <tt>objectCount</tt> is a count of items contained in the
--   <tt>objects</tt> array. This may be <tt>0</tt>.
[$sel:objectCount:DebugUtilsMessengerCallbackDataEXT] :: DebugUtilsMessengerCallbackDataEXT -> Word32

-- | <tt>objects</tt> is a pointer to an array of
--   <a>DebugUtilsObjectNameInfoEXT</a> objects related to the detected
--   issue. The array is roughly in order or importance, but the 0th
--   element is always guaranteed to be the most important object for this
--   message.
[$sel:objects:DebugUtilsMessengerCallbackDataEXT] :: DebugUtilsMessengerCallbackDataEXT -> Ptr DebugUtilsObjectNameInfoEXT

-- | <tt>sessionLabelCount</tt> is a count of items contained in the
--   <tt>sessionLabels</tt> array. This may be <tt>0</tt>.
[$sel:sessionLabelCount:DebugUtilsMessengerCallbackDataEXT] :: DebugUtilsMessengerCallbackDataEXT -> Word32

-- | <tt>sessionLabels</tt> is a pointer to an array of
--   <a>DebugUtilsLabelEXT</a> objects related to the detected issue. The
--   array is roughly in order or importance, but the 0th element is always
--   guaranteed to be the most important object for this message.
--   
--   <tt>sessionLabels</tt> is NULL or a pointer to an array of
--   <a>DebugUtilsLabelEXT</a> active in the current <a>Session</a> at the
--   time the callback was triggered. Refer to <a>Session Labels</a> for
--   more information.
[$sel:sessionLabels:DebugUtilsMessengerCallbackDataEXT] :: DebugUtilsMessengerCallbackDataEXT -> Ptr DebugUtilsLabelEXT

-- | XrDebugUtilsMessengerCreateInfoEXT - Debug utils messenger create info
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li><tt>userCallback</tt> <i>must</i> be a valid
--   PFN_xrDebugUtilsMessengerCallbackEXT</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>DebugUtilsMessengerCreateInfoEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>messageSeverities</tt> <i>must</i> be a valid combination of
--   <a>XrDebugUtilsMessageSeverityFlagBitsEXT</a> values</li>
--   <li><tt>messageSeverities</tt> <i>must</i> not be <tt>0</tt></li>
--   <li><tt>messageTypes</tt> <i>must</i> be a valid combination of
--   <a>XrDebugUtilsMessageTypeFlagBitsEXT</a> values</li>
--   <li><tt>messageTypes</tt> <i>must</i> not be <tt>0</tt></li>
--   <li><tt>userCallback</tt> <i>must</i> be a valid
--   <a>PFN_xrDebugUtilsMessengerCallbackEXT</a> value</li>
--   </ul>
--   
--   For each <a>DebugUtilsMessengerEXT</a> that is created the
--   <a>DebugUtilsMessengerCreateInfoEXT</a>::<tt>messageSeverities</tt>
--   and <a>DebugUtilsMessengerCreateInfoEXT</a>::<tt>messageTypes</tt>
--   determine when that
--   <a>DebugUtilsMessengerCreateInfoEXT</a>::<tt>userCallback</tt> is
--   called. The process to determine if the user’s userCallback is
--   triggered when an event occurs is as follows:
--   
--   <ul>
--   <li>The runtime will perform a bitwise AND of the event’s
--   <a>XrDebugUtilsMessageSeverityFlagBitsEXT</a> with the
--   <a>DebugUtilsMessengerCreateInfoEXT</a>::<tt>messageSeverities</tt>
--   provided during creation of the <a>DebugUtilsMessengerEXT</a>
--   object.</li>
--   <li>If this results in <tt>0</tt>, the message is skipped.</li>
--   <li>The runtime will perform bitwise AND of the event’s
--   <a>XrDebugUtilsMessageTypeFlagBitsEXT</a> with the
--   <a>DebugUtilsMessengerCreateInfoEXT</a>::<tt>messageTypes</tt>
--   provided during the creation of the <a>DebugUtilsMessengerEXT</a>
--   object.</li>
--   <li>If this results in <tt>0</tt>, the message is skipped.</li>
--   <li>If the message of the current event is not skipped, the callback
--   will be called with the message.</li>
--   </ul>
--   
--   The callback will come directly from the component that detected the
--   event, unless some other layer intercepts the calls for its own
--   purposes (filter them in a different way, log to a system error log,
--   etc.).
--   
--   <h1>See Also</h1>
--   
--   <a>PFN_xrDebugUtilsMessengerCallbackEXT</a>,
--   <a>DebugUtilsMessageSeverityFlagsEXT</a>,
--   <a>DebugUtilsMessageTypeFlagsEXT</a>, <a>StructureType</a>,
--   <a>createDebugUtilsMessengerEXT</a>
data DebugUtilsMessengerCreateInfoEXT
DebugUtilsMessengerCreateInfoEXT :: DebugUtilsMessageSeverityFlagsEXT -> DebugUtilsMessageTypeFlagsEXT -> PFN_xrDebugUtilsMessengerCallbackEXT -> Ptr () -> DebugUtilsMessengerCreateInfoEXT

-- | <tt>messageSeverities</tt> is a bitmask of
--   <a>XrDebugUtilsMessageSeverityFlagBitsEXT</a> specifying which
--   severity of event(s) that will cause this callback to be called.
[$sel:messageSeverities:DebugUtilsMessengerCreateInfoEXT] :: DebugUtilsMessengerCreateInfoEXT -> DebugUtilsMessageSeverityFlagsEXT

-- | <tt>messageTypes</tt> is a combination of
--   <a>XrDebugUtilsMessageTypeFlagBitsEXT</a> specifying which type of
--   event(s) will cause this callback to be called.
[$sel:messageTypes:DebugUtilsMessengerCreateInfoEXT] :: DebugUtilsMessengerCreateInfoEXT -> DebugUtilsMessageTypeFlagsEXT

-- | <tt>userCallback</tt> is the application defined callback function to
--   call.
[$sel:userCallback:DebugUtilsMessengerCreateInfoEXT] :: DebugUtilsMessengerCreateInfoEXT -> PFN_xrDebugUtilsMessengerCallbackEXT

-- | <tt>userData</tt> is arbitrary user data to be passed to the callback.
[$sel:userData:DebugUtilsMessengerCreateInfoEXT] :: DebugUtilsMessengerCreateInfoEXT -> Ptr ()

-- | XrDebugUtilsMessageSeverityFlagsEXT -
--   XrDebugUtilsMessageSeverityFlagsEXT
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessengerCreateInfoEXT</a>,
--   <a>submitDebugUtilsMessageEXT</a>
newtype DebugUtilsMessageSeverityFlagsEXT
DebugUtilsMessageSeverityFlagsEXT :: Flags64 -> DebugUtilsMessageSeverityFlagsEXT

-- | XrDebugUtilsMessageTypeFlagsEXT - XrDebugUtilsMessageTypeFlagsEXT
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessengerCreateInfoEXT</a>,
--   <a>submitDebugUtilsMessageEXT</a>
newtype DebugUtilsMessageTypeFlagsEXT
DebugUtilsMessageTypeFlagsEXT :: Flags64 -> DebugUtilsMessageTypeFlagsEXT

-- | PFN_xrDebugUtilsMessengerCallbackEXT - Type of callback function
--   invoked by the debug utils
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The callback <i>must</i> not call
--   <a>destroyDebugUtilsMessengerEXT</a>.
--   
--   The callback returns an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   that indicates to the calling layer the application’s desire to abort
--   the call. A value of <a>TRUE</a> indicates that the application wants
--   to abort this call. If the application returns <a>FALSE</a>, the
--   function <i>must</i> not be aborted. Applications <i>should</i> always
--   return <a>FALSE</a> so that they see the same behavior with and
--   without validation layers enabled.
--   
--   If the application returns <a>TRUE</a> from its callback and the
--   OpenXR call being aborted returns an <a>Result</a>, the layer will
--   return <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   The object pointed to by <tt>callbackData</tt> (and any pointers in it
--   recursively) <i>must</i> be valid during the lifetime of the triggered
--   callback. It <i>may</i> become invalid afterwards.
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsMessengerCreateInfoEXT</a>,
--   <a>createDebugUtilsMessengerEXT</a>
type PFN_xrDebugUtilsMessengerCallbackEXT = FunPtr FN_xrDebugUtilsMessengerCallbackEXT
type FN_xrDebugUtilsMessengerCallbackEXT = DebugUtilsMessageSeverityFlagsEXT -> ("messageTypes" ::: DebugUtilsMessageTypeFlagsEXT) -> Ptr DebugUtilsMessengerCallbackDataEXT -> ("userData" ::: Ptr ()) -> IO Bool32
type EXT_debug_utils_SPEC_VERSION = 3
pattern EXT_debug_utils_SPEC_VERSION :: forall a. Integral a => a
type EXT_DEBUG_UTILS_EXTENSION_NAME = "XR_EXT_debug_utils"
pattern EXT_DEBUG_UTILS_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a

-- | XrDebugUtilsMessengerEXT - Callback for debug data
--   
--   <h1>Description</h1>
--   
--   <a>DebugUtilsMessengerEXT</a> represents a callback function and
--   associated filters registered with the runtime.
--   
--   <h1>See Also</h1>
--   
--   <a>createDebugUtilsMessengerEXT</a>,
--   <a>destroyDebugUtilsMessengerEXT</a>
data DebugUtilsMessengerEXT
DebugUtilsMessengerEXT :: Ptr DebugUtilsMessengerEXT_T -> InstanceCmds -> DebugUtilsMessengerEXT
[$sel:debugUtilsMessengerEXTHandle:DebugUtilsMessengerEXT] :: DebugUtilsMessengerEXT -> Ptr DebugUtilsMessengerEXT_T
[$sel:instanceCmds:DebugUtilsMessengerEXT] :: DebugUtilsMessengerEXT -> InstanceCmds
instance Data.Bits.FiniteBits OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance Data.Bits.Bits OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance Data.Bits.FiniteBits OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance Data.Bits.Bits OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsObjectNameInfoEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsLabelEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCallbackDataEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCreateInfoEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCreateInfoEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCreateInfoEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCreateInfoEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCreateInfoEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageTypeFlagsEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessageSeverityFlagsEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCallbackDataEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCallbackDataEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsMessengerCallbackDataEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsLabelEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsLabelEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsLabelEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsObjectNameInfoEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsObjectNameInfoEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_debug_utils.DebugUtilsObjectNameInfoEXT

module OpenXR.Core10.SemanticPaths

-- | xrStringToPath - Converts a string to a semantic path
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>stringToPath</a> retrieves the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   value for a well-formed path string. If such a value had not yet been
--   assigned by the runtime to the provided path string in this
--   <a>Instance</a>, one <i>must</i> be assigned at this point. All calls
--   to this function with the same <a>Instance</a> and path string
--   <i>must</i> retrieve the same
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   value. Upon failure, <a>stringToPath</a> <i>must</i> return an
--   appropriate <a>Result</a>, and <i>may</i> set the output parameter to
--   <a>NULL_PATH</a>. See <a>Path Atom Type</a> for the conditions under
--   which an error <i>may</i> be returned when this function is given a
--   valid <a>Instance</a> and a well-formed path string.
--   
--   If the runtime’s resources are exhausted and it cannot create the
--   path, a return value of <a>ERROR_PATH_COUNT_EXCEEDED</a> <i>must</i>
--   be returned. If the application specifies a string that is not a
--   well-formed path string, <a>ERROR_PATH_FORMAT_INVALID</a> <i>must</i>
--   be returned.
--   
--   A return value of <a>SUCCESS</a> from <a>stringToPath</a> <i>may</i>
--   not necessarily imply that the runtime has a component or other source
--   of data that will be accessible through that semantic path. It only
--   means that the path string supplied was well-formed and that the
--   retrieved
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   maps to the given path string within and during the lifetime of the
--   <a>Instance</a> given.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_PATH_FORMAT_INVALID</a></li><li><a>ERROR_PATH_COUNT_EXCEEDED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>pathToString</a>
stringToPath :: forall io. MonadIO io => Instance -> ("pathString" ::: ByteString) -> io Path

-- | xrPathToString - Converts a semantic path to a string
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>instance</tt> is an instance previously created.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>path</tt> is the valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   value to retrieve the path string for.</li>
--   <li><tt>bufferCapacityInput</tt> is the capacity of the buffer, or 0
--   to indicate a request to retrieve the required capacity.</li>
--   <li><tt>bufferCountOutput</tt> is a pointer to the count of characters
--   written (including the terminating '\0'), or a pointer to the required
--   capacity in the case that <tt>bufferCapacityInput</tt> is 0.</li>
--   <li><tt>buffer</tt> is a pointer to an application-allocated buffer
--   that will be filled with the semantic path string. It <i>can</i> be
--   <tt>NULL</tt> if <tt>bufferCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>buffer</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   <a>pathToString</a> retrieves the path name string associated with an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   in the context of a given <a>Instance</a>, in the form of a
--   <tt>NULL</tt> terminated string placed into a <i>caller-allocated</i>
--   buffer. Since the mapping between a well-formed path name string and
--   an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   is bijective, there will always be exactly one string for each valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   value. This can be useful if the calling application receives an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   value that they had not previously retrieved via <a>stringToPath</a>.
--   During the lifetime of the given <a>Instance</a>, the path name string
--   retrieved by this function for a given valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   will not change. For invalid paths, including <a>NULL_PATH</a>,
--   <a>ERROR_PATH_INVALID</a> <i>must</i> be returned.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>bufferCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>bufferCapacityInput</tt> is not <tt>0</tt>, <tt>buffer</tt>
--   <i>must</i> be a pointer to an array of <tt>bufferCapacityInput</tt>
--   char values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>stringToPath</a>
pathToString :: forall io. MonadIO io => Instance -> Path -> io ("buffer" ::: ByteString)

-- | XrPath - A semantic path
--   
--   <h1>Description</h1>
--   
--   The
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   is an atom that connects an application with a single path, within the
--   context of a single instance. There is a bijective mapping between
--   well-formed path strings and atoms in use. This atom is used — in
--   place of the path name string it corresponds to — to retrieve state
--   and perform other operations.
--   
--   As an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   is only shorthand for a well-formed path string, they have no explicit
--   life cycle.
--   
--   Lifetime is implicitly managed by the <a>Instance</a>. An
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   <i>must</i> not be used unless it is received at execution time from
--   the runtime in the context of a particular <a>Instance</a>. Therefore,
--   with the exception of <a>NULL_PATH</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   values <i>must</i> not be specified as constant values in
--   applications: the corresponding path string <i>should</i> be used
--   instead. During the lifetime of a given <a>Instance</a>, the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   associated with that instance with any given well-formed path
--   <i>must</i> not vary, and similarly the well-formed path string that
--   corresponds to a given
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   in that instance <i>must</i> not vary. An
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   that is received from one <a>Instance</a> <i>may</i> not be used with
--   another. Such an invalid use <i>may</i> be detected and result in an
--   error being returned, or it <i>may</i> result in undefined behavior.
--   
--   <h1>See Also</h1>
--   
--   <a>NULL_PATH</a>, <a>ActionCreateInfo</a>,
--   <a>ActionSpaceCreateInfo</a>, <a>ActionStateGetInfo</a>,
--   <a>ActionSuggestedBinding</a>, <a>ActiveActionSet</a>,
--   <a>HapticActionInfo</a>, <a>InputSourceLocalizedNameGetInfo</a>,
--   <a>InteractionProfileAnalogThresholdVALVE</a>,
--   <a>InteractionProfileState</a>,
--   <a>InteractionProfileSuggestedBinding</a>,
--   <a>enumerateBoundSourcesForAction</a>,
--   <a>getControllerModelKeyMSFT</a>, <a>getCurrentInteractionProfile</a>,
--   <a>pathToString</a>, <a>xrSetInputDeviceActiveEXT</a>,
--   <a>xrSetInputDeviceLocationEXT</a>,
--   <a>xrSetInputDeviceStateBoolEXT</a>,
--   <a>xrSetInputDeviceStateFloatEXT</a>,
--   <a>xrSetInputDeviceStateVector2fEXT</a>, <a>stringToPath</a>
newtype Path
Path :: Word64 -> Path
instance Vulkan.Zero.Zero OpenXR.Core10.SemanticPaths.Path
instance Foreign.Storable.Storable OpenXR.Core10.SemanticPaths.Path
instance GHC.Classes.Ord OpenXR.Core10.SemanticPaths.Path
instance GHC.Classes.Eq OpenXR.Core10.SemanticPaths.Path
instance GHC.Show.Show OpenXR.Core10.SemanticPaths.Path

module OpenXR.Core10.Space

-- | xrDestroySpace - Creates a space based on a pose action
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>Space</a> handles are destroyed using <a>destroySpace</a>. The
--   runtime <i>may</i> still use this space if there are active
--   dependencies (e.g, compositions in progress).
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>space</tt>, and any child handles, <i>must</i> be
--   externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Space</a>, <a>createActionSpace</a>, <a>createReferenceSpace</a>
destroySpace :: forall io. MonadIO io => Space -> io ()

-- | xrEnumerateReferenceSpaces - Enumerate available reference spaces
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is a handle to an <a>Session</a> previously
--   created with <a>createSession</a>.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>spaceCapacityInput</tt> is the capacity of the spaces array,
--   or 0 to indicate a request to retrieve the required capacity.</li>
--   <li><tt>spaceCountOutput</tt> is a pointer to the count of spaces
--   written, or a pointer to the required capacity in the case that
--   <tt>spaceCapacityInput</tt> is 0.</li>
--   <li><tt>spaces</tt> is a pointer to an application-allocated array
--   that will be filled with the enumerant of each supported reference
--   space. It <i>can</i> be <tt>NULL</tt> if <tt>spaceCapacityInput</tt>
--   is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>spaces</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   Enumerates the set of reference space types that this runtime supports
--   for a given session. Runtimes <i>must</i> always return identical
--   buffer contents from this enumeration for the lifetime of the session.
--   
--   If a session enumerates support for a given reference space type,
--   calls to <a>createReferenceSpace</a> <i>must</i> succeed for that
--   session, with any transient unavailability of poses expressed later
--   during calls to <a>locateSpace</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>spaceCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>spaceCapacityInput</tt> is not <tt>0</tt>, <tt>spaces</tt>
--   <i>must</i> be a pointer to an array of <tt>spaceCapacityInput</tt>
--   <a>ReferenceSpaceType</a> values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ReferenceSpaceType</a>, <a>Session</a>, <a>Space</a>
enumerateReferenceSpaces :: forall io. MonadIO io => Session -> io (Result, "spaces" ::: Vector ReferenceSpaceType)

-- | xrCreateReferenceSpace - Creates a reference space
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Creates an <a>Space</a> handle based on a chosen reference space.
--   Application <i>can</i> provide an <a>Posef</a> to define the position
--   and orientation of the new space’s origin within the natural reference
--   frame of the reference space.
--   
--   Multiple <a>Space</a> handles may exist simultaneously, up to some
--   limit imposed by the runtime. The <a>Space</a> handle <i>must</i> be
--   eventually freed via the <a>destroySpace</a> function.
--   
--   The runtime <i>must</i> return
--   <a>ERROR_REFERENCE_SPACE_UNSUPPORTED</a> if the given reference space
--   type is not supported by this <tt>session</tt>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_REFERENCE_SPACE_UNSUPPORTED</a></li><li><a>ERROR_POSE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ReferenceSpaceCreateInfo</a>, <a>Session</a>, <a>Space</a>,
--   <a>destroySpace</a>
createReferenceSpace :: forall io. MonadIO io => Session -> ReferenceSpaceCreateInfo -> io (Result, Space)

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createReferenceSpace</a> and <a>destroySpace</a>
--   
--   To ensure that <a>destroySpace</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withReferenceSpace :: forall io r. MonadIO io => Session -> ReferenceSpaceCreateInfo -> (io (Result, Space) -> ((Result, Space) -> io ()) -> r) -> r

-- | xrCreateActionSpace - Creates a space based on a pose action
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Creates an <a>Space</a> handle based on a chosen pose action.
--   Application <i>can</i> provide an <a>Posef</a> to define the position
--   and orientation of the new space’s origin within the natural reference
--   frame of the action space.
--   
--   Multiple <a>Space</a> handles may exist simultaneously, up to some
--   limit imposed by the runtime. The <a>Space</a> handle must be
--   eventually freed via the <a>destroySpace</a> function or by destroying
--   the parent <a>Action</a> handle.
--   
--   The runtime <i>must</i> return <a>ERROR_ACTION_TYPE_MISMATCH</a> if
--   the action provided in <tt>action</tt> is not of type
--   <a>ACTION_TYPE_POSE_INPUT</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTION_TYPE_MISMATCH</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_POSE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li><li><a>ERROR_PATH_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSpaceCreateInfo</a>, <a>Session</a>, <a>Space</a>,
--   <a>destroySpace</a>
createActionSpace :: forall io. MonadIO io => Session -> ActionSpaceCreateInfo -> io (Result, Space)

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createActionSpace</a> and <a>destroySpace</a>
--   
--   To ensure that <a>destroySpace</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withActionSpace :: forall io r. MonadIO io => Session -> ActionSpaceCreateInfo -> (io (Result, Space) -> ((Result, Space) -> io ()) -> r) -> r

-- | xrLocateSpace - Locates a space with reference to another space
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   For a <tt>time</tt> in the past, the runtime <i>should</i> locate the
--   spaces based on the runtime’s most accurate current understanding of
--   how the world was at that historical time.
--   
--   For a <tt>time</tt> in the future, the runtime <i>should</i> locate
--   the spaces based on the runtime’s most up-to-date prediction of how
--   the world will be at that future time.
--   
--   The minimum valid range of values for <tt>time</tt> are described in
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#prediction-time-limits</a>.
--   For values of <tt>time</tt> outside this range, <a>locateSpace</a>
--   <i>may</i> return a location with no position and
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> unset.
--   
--   Some devices improve their understanding of the world as the device is
--   used. The location returned by <a>locateSpace</a> for a given
--   <tt>space</tt>, <tt>baseSpace</tt> and <tt>time</tt> <i>may</i> change
--   over time, even for spaces that track static objects, as one or both
--   spaces adjust their origins.
--   
--   During tracking loss of <tt>space</tt> relative to <tt>baseSpace</tt>,
--   runtimes <i>should</i> continue to provide inferred or last-known
--   <tt>position</tt> and <tt>orientation</tt> values. These inferred
--   poses can, for example, be based on neck model updates, inertial dead
--   reckoning, or a last-known position, so long as it is still reasonable
--   for the application to use that pose. While a runtime is providing
--   position data, it <i>must</i> continue to set
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> but it <i>can</i> clear
--   <tt>XR_SPACE_LOCATION_POSITION_TRACKED_BIT</tt> to indicate that the
--   position is inferred or last-known in this way.
--   
--   If the runtime has not yet observed even a last-known pose for how to
--   locate <tt>space</tt> in <tt>baseSpace</tt> (e.g. one space is an
--   action space bound to a motion controller that has not yet been
--   detected, or the two spaces are in disconnected fragments of the
--   runtime’s tracked volume), the runtime <i>should</i> return a location
--   with no position and <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt>
--   unset.
--   
--   The runtime <i>must</i> return a location with both
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> and
--   <tt>XR_SPACE_LOCATION_POSITION_TRACKED_BIT</tt> set when locating
--   <tt>space</tt> and <tt>baseSpace</tt> if both spaces were created
--   relative to the same entity (e.g. two action spaces for the same
--   action), even if the entity is currently untracked. The location in
--   this case is the difference in the two spaces' application-specified
--   transforms relative to that common entity.
--   
--   The runtime <i>should</i> return a location with
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> set and
--   <tt>XR_SPACE_LOCATION_POSITION_TRACKED_BIT</tt> unset for spaces
--   tracking two static entities in the world when their relative pose is
--   known to the runtime. This enables applications to make use of the
--   runtime’s latest knowledge of the world, even during tracking loss.
--   
--   If an <a>SpaceVelocity</a> structure is chained to the <tt>next</tt>
--   pointer of <a>SpaceLocation</a> and the velocity is observed or can be
--   calculated by the runtime, the runtime <i>must</i> fill in the linear
--   velocity of the origin of space within the reference frame of
--   <tt>baseSpace</tt> and set the
--   <tt>XR_SPACE_VELOCITY_LINEAR_VALID_BIT</tt>. Similarly, if an
--   <a>SpaceVelocity</a> structure is chained to the <tt>next</tt> pointer
--   of <a>SpaceLocation</a> and the angular velocity is observed or can be
--   calculated by the runtime, the runtime <i>must</i> fill in the angular
--   velocity of the origin of space within the reference frame of
--   <tt>baseSpace</tt> and set the
--   <tt>XR_SPACE_VELOCITY_ANGULAR_VALID_BIT</tt>.
--   
--   The following example code shows how an application can get both the
--   location and velocity of a space within a base space using the
--   <a>locateSpace</a> function by chaining an <a>SpaceVelocity</a> to the
--   next pointer of <a>SpaceLocation</a> and calling <a>locateSpace</a>.
--   
--   <pre>
--   XrSpace space;      // previously initialized
--   XrSpace baseSpace;  // previously initialized
--   XrTime time;        // previously initialized
--   
--   XrSpaceVelocity velocity {XR_TYPE_SPACE_VELOCITY};
--   XrSpaceLocation location {XR_TYPE_SPACE_LOCATION, &amp;velocity};
--   xrLocateSpace(space, baseSpace, time, &amp;location);
--   </pre>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>baseSpace</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   <li><tt>location</tt> <i>must</i> be a pointer to an
--   <a>SpaceLocation</a> structure</li>
--   <li>Both of <tt>baseSpace</tt> and <tt>space</tt> <i>must</i> have
--   been created, allocated, or retrieved from the same
--   <a>Session</a></li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Space</a>, <a>SpaceLocation</a>, <a>XrSpaceLocationFlagBits</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
locateSpace :: forall a io. (Extendss SpaceLocation a, PokeChain a, PeekChain a, MonadIO io) => Space -> ("baseSpace" ::: Space) -> Time -> io (Result, SpaceLocation a)

-- | xrGetReferenceSpaceBoundsRect - Gets the bounds rectangle of a
--   reference space
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SPACE_BOUNDS_UNAVAILABLE</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_REFERENCE_SPACE_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Extent2Df</a>, <a>ReferenceSpaceType</a>, <a>Session</a>,
--   <a>createReferenceSpace</a>
getReferenceSpaceBoundsRect :: forall io. MonadIO io => Session -> ReferenceSpaceType -> io (Result, "bounds" ::: Extent2Df)

-- | XrVector3f - Three-dimensional vector
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If used to represent physical distances (rather than e.g. velocity or
--   angular velocity) and not otherwise specified, values <i>must</i> be
--   in meters.
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointVelocityEXT</a>, <a>HandMeshVertexMSFT</a>, <a>Posef</a>,
--   <a>Quaternionf</a>, <a>SpaceVelocity</a>, <a>Vector2f</a>,
--   <a>Vector4f</a>
data Vector3f
Vector3f :: Float -> Float -> Float -> Vector3f

-- | <tt>x</tt> is the x coordinate of the vector.
[$sel:x:Vector3f] :: Vector3f -> Float

-- | <tt>y</tt> is the y coordinate of the vector.
[$sel:y:Vector3f] :: Vector3f -> Float

-- | <tt>z</tt> is the z coordinate of the vector.
[$sel:z:Vector3f] :: Vector3f -> Float

-- | XrQuaternionf - Unit Quaternion
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerCubeKHR</a>, <a>Posef</a>, <a>Vector2f</a>,
--   <a>Vector3f</a>, <a>Vector4f</a>
data Quaternionf
Quaternionf :: Float -> Float -> Float -> Float -> Quaternionf

-- | <tt>x</tt> is the x coordinate of the quaternion.
[$sel:x:Quaternionf] :: Quaternionf -> Float

-- | <tt>y</tt> is the y coordinate of the quaternion.
[$sel:y:Quaternionf] :: Quaternionf -> Float

-- | <tt>z</tt> is the z coordinate of the quaternion.
[$sel:z:Quaternionf] :: Quaternionf -> Float

-- | <tt>w</tt> is the w coordinate of the quaternion.
[$sel:w:Quaternionf] :: Quaternionf -> Float

-- | XrPosef - Location and orientation in a space.
--   
--   <h2>Member Descriptions</h2>
--   
--   A construct representing a position and orientation within a space,
--   with position expressed in meters, and orientation represented as a
--   unit quaternion. When using <a>Posef</a> the rotation described by
--   <tt>orientation</tt> is always applied before the translation
--   described by <tt>position</tt>.
--   
--   <h1>Description</h1>
--   
--   A runtime <i>must</i> return <a>ERROR_POSE_INVALID</a> if the
--   <tt>orientation</tt> norm deviates by more than 1% from unit length.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSpaceCreateInfo</a>, <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>,
--   <a>CompositionLayerProjectionView</a>, <a>CompositionLayerQuad</a>,
--   <a>ControllerModelNodeStateMSFT</a>,
--   <a>EventDataReferenceSpaceChangePending</a>,
--   <a>HandJointLocationEXT</a>, <a>HandMeshSpaceCreateInfoMSFT</a>,
--   <a>Quaternionf</a>, <a>ReferenceSpaceCreateInfo</a>,
--   <a>SpaceLocation</a>, <a>SpatialAnchorCreateInfoMSFT</a>,
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a>,
--   <a>SpatialGraphNodeSpaceCreateInfoMSFT</a>, <a>Vector2f</a>,
--   <a>Vector3f</a>, <a>Vector4f</a>, <a>View</a>,
--   <a>xrSetInputDeviceLocationEXT</a>
data Posef
Posef :: Quaternionf -> Vector3f -> Posef

-- | <tt>orientation</tt> is an <a>Quaternionf</a> representing the
--   orientation within a space.
[$sel:orientation:Posef] :: Posef -> Quaternionf

-- | <tt>position</tt> is an <a>Vector3f</a> representing position within a
--   space.
[$sel:position:Posef] :: Posef -> Vector3f

-- | XrReferenceSpaceCreateInfo - Creation info for a reference space
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Posef</a>, <a>ReferenceSpaceType</a>, <a>Space</a>,
--   <a>StructureType</a>, <a>createReferenceSpace</a>
data ReferenceSpaceCreateInfo
ReferenceSpaceCreateInfo :: ReferenceSpaceType -> Posef -> ReferenceSpaceCreateInfo

-- | <tt>referenceSpaceType</tt> is the chosen <a>ReferenceSpaceType</a>.
--   
--   <tt>referenceSpaceType</tt> <i>must</i> be a valid
--   <a>ReferenceSpaceType</a> value
[$sel:referenceSpaceType:ReferenceSpaceCreateInfo] :: ReferenceSpaceCreateInfo -> ReferenceSpaceType

-- | <tt>poseInReferenceSpace</tt> is an <a>Posef</a> defining the position
--   and orientation of the new space’s origin within the natural reference
--   frame of the reference space.
[$sel:poseInReferenceSpace:ReferenceSpaceCreateInfo] :: ReferenceSpaceCreateInfo -> Posef

-- | XrActionSpaceCreateInfo - Creation info for an action space
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>Posef</a>, <a>Space</a>, <a>StructureType</a>,
--   <a>createActionSpace</a>
data ActionSpaceCreateInfo
ActionSpaceCreateInfo :: Ptr Action_T -> Path -> Posef -> ActionSpaceCreateInfo

-- | <tt>action</tt> is a handle to a pose <a>Action</a> previously created
--   with <a>createAction</a>.
--   
--   <tt>action</tt> <i>must</i> be a valid <a>Action</a> handle
[$sel:action:ActionSpaceCreateInfo] :: ActionSpaceCreateInfo -> Ptr Action_T

-- | <tt>subactionPath</tt> is <a>NULL_PATH</a> or an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   that was specified when the action was created. If
--   <tt>subactionPath</tt> is a valid path not specified when the action
--   was created the runtime <i>must</i> return
--   <a>ERROR_PATH_UNSUPPORTED</a>. If this parameter is set, the runtime
--   <i>must</i> create a space that is relative to only that subaction’s
--   pose binding.
[$sel:subactionPath:ActionSpaceCreateInfo] :: ActionSpaceCreateInfo -> Path

-- | <tt>poseInActionSpace</tt> is an <a>Posef</a> defining the position
--   and orientation of the new space’s origin within the natural reference
--   frame of the pose action.
[$sel:poseInActionSpace:ActionSpaceCreateInfo] :: ActionSpaceCreateInfo -> Posef

-- | XrSpaceLocation - Contains info about a space
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Posef</a>, <a>Space</a>, <a>SpaceLocationFlags</a>,
--   <a>SpaceVelocity</a>, <a>StructureType</a>, <a>locateSpace</a>
data SpaceLocation (es :: [Type])
SpaceLocation :: Chain es -> SpaceLocationFlags -> Posef -> SpaceLocation (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain, such as <a>SpaceVelocity</a>.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>EyeGazeSampleTimeEXT</a>, <a>SpaceVelocity</a>
[$sel:next:SpaceLocation] :: SpaceLocation (es :: [Type]) -> Chain es

-- | <tt>locationFlags</tt> is a bitfield, with bit masks defined in
--   <a>XrSpaceLocationFlagBits</a>, to indicate which members contain
--   valid data. If none of the bits are set, no other fields in this
--   structure <i>should</i> be considered to be valid or meaningful.
--   
--   <tt>locationFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrSpaceLocationFlagBits</a> values
[$sel:locationFlags:SpaceLocation] :: SpaceLocation (es :: [Type]) -> SpaceLocationFlags

-- | <tt>pose</tt> is an <a>Posef</a> defining the position and orientation
--   of the origin of <a>locateSpace</a>::<tt>space</tt> within the
--   reference frame of <a>locateSpace</a>::<tt>baseSpace</tt>.
[$sel:pose:SpaceLocation] :: SpaceLocation (es :: [Type]) -> Posef

-- | XrSpaceVelocity - Contains info about a space
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Space</a>, <a>SpaceLocation</a>, <a>SpaceVelocityFlags</a>,
--   <a>StructureType</a>, <a>Vector3f</a>, <a>locateSpace</a>
data SpaceVelocity
SpaceVelocity :: SpaceVelocityFlags -> Vector3f -> Vector3f -> SpaceVelocity

-- | <tt>velocityFlags</tt> is a bitfield, with bit masks defined in
--   <a>XrSpaceVelocityFlagBits</a>, to indicate which members contain
--   valid data. If none of the bits are set, no other fields in this
--   structure <i>should</i> be considered to be valid or meaningful.
--   
--   <tt>velocityFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrSpaceVelocityFlagBits</a> values
[$sel:velocityFlags:SpaceVelocity] :: SpaceVelocity -> SpaceVelocityFlags

-- | <tt>linearVelocity</tt> is the relative linear velocity of the origin
--   of <a>locateSpace</a>::<tt>space</tt> with respect to and expressed in
--   the reference frame of <a>locateSpace</a>::<tt>baseSpace</tt>, in
--   units of meters per second.
[$sel:linearVelocity:SpaceVelocity] :: SpaceVelocity -> Vector3f

-- | <tt>angularVelocity</tt> is the relative angular velocity of
--   <a>locateSpace</a>::<tt>space</tt> with respect to
--   <a>locateSpace</a>::<tt>baseSpace</tt>. The vector’s direction is
--   expressed in the reference frame of
--   <a>locateSpace</a>::<tt>baseSpace</tt> and is parallel to the
--   rotational axis of <a>locateSpace</a>::<tt>space</tt>. The vector’s
--   magnitude is the relative angular speed of
--   <a>locateSpace</a>::<tt>space</tt> in radians per second. The vector
--   follows the right-hand rule for torque/rotation.
[$sel:angularVelocity:SpaceVelocity] :: SpaceVelocity -> Vector3f
instance GHC.Classes.Eq OpenXR.Core10.Space.Quaternionf
instance GHC.Classes.Eq OpenXR.Core10.Space.Vector3f
instance GHC.Show.Show OpenXR.Core10.Space.Vector3f
instance GHC.Show.Show OpenXR.Core10.Space.Quaternionf
instance GHC.Show.Show OpenXR.Core10.Space.Posef
instance GHC.Show.Show OpenXR.Core10.Space.ReferenceSpaceCreateInfo
instance GHC.Show.Show OpenXR.Core10.Space.ActionSpaceCreateInfo
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.Space.SpaceLocation es)
instance GHC.Show.Show OpenXR.Core10.Space.SpaceVelocity
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.Space.SpaceLocation
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Space.SpaceVelocity
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Space.SpaceVelocity
instance Foreign.Storable.Storable OpenXR.Core10.Space.SpaceVelocity
instance Vulkan.Zero.Zero OpenXR.Core10.Space.SpaceVelocity
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Space.SpaceLocation es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.Space.SpaceLocation es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Space.SpaceLocation es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.Space.SpaceLocation es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.Space.SpaceLocation es)
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Space.ActionSpaceCreateInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Space.ActionSpaceCreateInfo
instance Foreign.Storable.Storable OpenXR.Core10.Space.ActionSpaceCreateInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Space.ActionSpaceCreateInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Space.ReferenceSpaceCreateInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Space.ReferenceSpaceCreateInfo
instance Foreign.Storable.Storable OpenXR.Core10.Space.ReferenceSpaceCreateInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Space.ReferenceSpaceCreateInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Space.Posef
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Space.Posef
instance Foreign.Storable.Storable OpenXR.Core10.Space.Posef
instance Vulkan.Zero.Zero OpenXR.Core10.Space.Posef
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Space.Quaternionf
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Space.Quaternionf
instance Foreign.Storable.Storable OpenXR.Core10.Space.Quaternionf
instance Vulkan.Zero.Zero OpenXR.Core10.Space.Quaternionf
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Space.Vector3f
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Space.Vector3f
instance Foreign.Storable.Storable OpenXR.Core10.Space.Vector3f
instance Vulkan.Zero.Zero OpenXR.Core10.Space.Vector3f


-- | <h1>Name</h1>
--   
--   XR_MSFT_spatial_graph_bridge - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_spatial_graph_bridge</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   50
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>SpatialGraphNodeSpaceCreateInfoMSFT</a>,
--   <a>SpatialGraphNodeTypeMSFT</a>,
--   <a>createSpatialGraphNodeSpaceMSFT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_spatial_graph_bridge

-- | xrCreateSpatialGraphNodeSpaceMSFT - Create an <a>Space</a> from a
--   spatial graph node.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createSpatialGraphNodeSpaceMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>SpatialGraphNodeSpaceCreateInfoMSFT</a> structure</li>
--   <li><tt>space</tt> <i>must</i> be a pointer to an <a>Space</a>
--   handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li><li><a>ERROR_POSE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>Space</a>,
--   <a>SpatialGraphNodeSpaceCreateInfoMSFT</a>
createSpatialGraphNodeSpaceMSFT :: forall io. MonadIO io => Session -> SpatialGraphNodeSpaceCreateInfoMSFT -> io Space

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createSpatialGraphNodeSpaceMSFT</a> and <a>destroySpace</a>
--   
--   To ensure that <a>destroySpace</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withSpatialGraphNodeSpaceMSFT :: forall io r. MonadIO io => Session -> SpatialGraphNodeSpaceCreateInfoMSFT -> (io Space -> (Space -> io ()) -> r) -> r

-- | XrSpatialGraphNodeSpaceCreateInfoMSFT - The information to create
--   space from a spatial graph node.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SpatialGraphNodeSpaceCreateInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SPATIAL_GRAPH_NODE_SPACE_CREATE_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>nodeType</tt> <i>must</i> be a valid
--   <a>SpatialGraphNodeTypeMSFT</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Posef</a>, <a>SpatialGraphNodeTypeMSFT</a>, <a>StructureType</a>,
--   <a>createSpatialGraphNodeSpaceMSFT</a>
data SpatialGraphNodeSpaceCreateInfoMSFT
SpatialGraphNodeSpaceCreateInfoMSFT :: SpatialGraphNodeTypeMSFT -> ByteString -> Posef -> SpatialGraphNodeSpaceCreateInfoMSFT

-- | <tt>nodeType</tt> is an <a>SpatialGraphNodeTypeMSFT</a> specifying the
--   spatial node type.
[$sel:nodeType:SpatialGraphNodeSpaceCreateInfoMSFT] :: SpatialGraphNodeSpaceCreateInfoMSFT -> SpatialGraphNodeTypeMSFT

-- | <tt>nodeId</tt> is a global unique identifier (a.k.a. GUID or 16 byte
--   array), representing the spatial node that is being tracked.
[$sel:nodeId:SpatialGraphNodeSpaceCreateInfoMSFT] :: SpatialGraphNodeSpaceCreateInfoMSFT -> ByteString

-- | <tt>pose</tt> is an <a>Posef</a> defining the position and orientation
--   of the new space’s origin within the natural reference frame of the
--   spatial graph node.
[$sel:pose:SpatialGraphNodeSpaceCreateInfoMSFT] :: SpatialGraphNodeSpaceCreateInfoMSFT -> Posef

-- | XrSpatialGraphNodeTypeMSFT - The type of spatial graph node.
--   
--   <h1>Description</h1>
--   
--   There are two types of spatial graph nodes: static and dynamic.
--   
--   Static spatial nodes track the pose of a fixed location in the world
--   relative to reference spaces. The tracking of static nodes <i>may</i>
--   slowly adjust the pose over time for better accuracy but the pose is
--   relatively stable in the short term, such as between rendering frames.
--   For example, a QR code tracking library can use a static node to
--   represent the location of the tracked QR code. Static spatial nodes
--   are represented by <a>SPATIAL_GRAPH_NODE_TYPE_STATIC_MSFT</a>.
--   
--   Dynamic spatial nodes track the pose of a physical object that moves
--   continuously relative to reference spaces. The pose of dynamic spatial
--   nodes <i>can</i> be very different within the duration of a rendering
--   frame. It is important for the application to use the correct
--   timestamp to query the space location using <a>locateSpace</a>. For
--   example, a color camera mounted in front of a HMD is also tracked by
--   the HMD so a web camera library can use a dynamic node to represent
--   the camera location. Dynamic spatial nodes are represented by
--   <a>SPATIAL_GRAPH_NODE_TYPE_DYNAMIC_MSFT</a>.
--   
--   <h1>See Also</h1>
--   
--   <a>SpatialGraphNodeSpaceCreateInfoMSFT</a>
newtype SpatialGraphNodeTypeMSFT
SpatialGraphNodeTypeMSFT :: Int32 -> SpatialGraphNodeTypeMSFT
pattern SPATIAL_GRAPH_NODE_TYPE_STATIC_MSFT :: SpatialGraphNodeTypeMSFT
pattern SPATIAL_GRAPH_NODE_TYPE_DYNAMIC_MSFT :: SpatialGraphNodeTypeMSFT
type MSFT_spatial_graph_bridge_SPEC_VERSION = 1
pattern MSFT_spatial_graph_bridge_SPEC_VERSION :: forall a. Integral a => a
type MSFT_SPATIAL_GRAPH_BRIDGE_EXTENSION_NAME = "XR_MSFT_spatial_graph_bridge"
pattern MSFT_SPATIAL_GRAPH_BRIDGE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeTypeMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeTypeMSFT
instance GHC.Classes.Ord OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeTypeMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeTypeMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeSpaceCreateInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeSpaceCreateInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeSpaceCreateInfoMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeSpaceCreateInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeSpaceCreateInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeTypeMSFT
instance GHC.Read.Read OpenXR.Extensions.XR_MSFT_spatial_graph_bridge.SpatialGraphNodeTypeMSFT


-- | <h1>Name</h1>
--   
--   XR_MSFT_spatial_anchor - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_spatial_anchor</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   40
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>createSpatialAnchorMSFT</a>, <a>createSpatialAnchorSpaceMSFT</a>,
--   <a>destroySpatialAnchorMSFT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_spatial_anchor

-- | xrCreateSpatialAnchorMSFT - Creates a spatial anchor
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Creates an <a>SpatialAnchorMSFT</a> handle representing a spatial
--   anchor that will track a fixed location in the physical world over
--   time. That real-world location is specified by the position and
--   orientation of the specified <tt>pose</tt> within <tt>space</tt> at
--   <tt>time</tt>.
--   
--   If <tt>space</tt> cannot be located relative to the environment at the
--   moment of the call to <a>createSpatialAnchorMSFT</a>, the runtime
--   <i>must</i> return <a>ERROR_CREATE_SPATIAL_ANCHOR_FAILED_MSFT</a>.
--   
--   After the anchor is created, the runtime <i>should</i> then adjust its
--   position and orientation over time relative to other spaces so as to
--   maintain maximum alignment to its original real-world location, even
--   if that changes the anchor’s relationship to the original
--   <tt>space</tt> used to initialize it.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createSpatialAnchorMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>SpatialAnchorCreateInfoMSFT</a> structure</li>
--   <li><tt>anchor</tt> <i>must</i> be a pointer to an
--   <a>SpatialAnchorMSFT</a> handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_POSE_INVALID</a></li><li><a>ERROR_CREATE_SPATIAL_ANCHOR_FAILED_MSFT</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>SpatialAnchorCreateInfoMSFT</a>,
--   <a>SpatialAnchorMSFT</a>
createSpatialAnchorMSFT :: forall io. MonadIO io => Session -> SpatialAnchorCreateInfoMSFT -> io SpatialAnchorMSFT

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createSpatialAnchorMSFT</a> and <a>destroySpatialAnchorMSFT</a>
--   
--   To ensure that <a>destroySpatialAnchorMSFT</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withSpatialAnchorMSFT :: forall io r. MonadIO io => Session -> SpatialAnchorCreateInfoMSFT -> (io SpatialAnchorMSFT -> (SpatialAnchorMSFT -> io ()) -> r) -> r

-- | xrCreateSpatialAnchorSpaceMSFT - Creates a space from a spatial anchor
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Creates an <a>Space</a> handle based on a spatial anchor. Application
--   <i>can</i> provide an <a>Posef</a> to define the position and
--   orientation of the new space’s origin relative to the anchor’s natural
--   origin.
--   
--   Multiple <a>Space</a> handles may exist for a given
--   <a>SpatialAnchorMSFT</a> simultaneously, up to some limit imposed by
--   the runtime. The <a>Space</a> handle must be eventually freed via the
--   <a>destroySpace</a> function or by destroying the parent
--   <a>SpatialAnchorMSFT</a> handle.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createSpatialAnchorSpaceMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a> structure</li>
--   <li><tt>space</tt> <i>must</i> be a pointer to an <a>Space</a>
--   handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_POSE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>Space</a>, <a>SpatialAnchorMSFT</a>,
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a>
createSpatialAnchorSpaceMSFT :: forall io. MonadIO io => Session -> SpatialAnchorSpaceCreateInfoMSFT -> io Space

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createSpatialAnchorSpaceMSFT</a> and <a>destroySpace</a>
--   
--   To ensure that <a>destroySpace</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withSpatialAnchorSpaceMSFT :: forall io r. MonadIO io => Session -> SpatialAnchorSpaceCreateInfoMSFT -> (io Space -> (Space -> io ()) -> r) -> r

-- | xrDestroySpatialAnchorMSFT - Destroys a spatial anchor
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>SpatialAnchorMSFT</a> handles are destroyed using
--   <a>destroySpatialAnchorMSFT</a>. By destroying an anchor, the runtime
--   <i>can</i> stop spending resources used to maintain tracking for that
--   anchor’s origin.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>destroySpatialAnchorMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>anchor</tt> <i>must</i> be a valid <a>SpatialAnchorMSFT</a>
--   handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>SpatialAnchorMSFT</a>, <a>createSpatialAnchorMSFT</a>
destroySpatialAnchorMSFT :: forall io. MonadIO io => SpatialAnchorMSFT -> io ()

-- | XrSpatialAnchorCreateInfoMSFT - Information to create a spatial anchor
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SpatialAnchorCreateInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SPATIAL_ANCHOR_CREATE_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Posef</a>, <a>Space</a>, <a>SpatialAnchorMSFT</a>,
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>createSpatialAnchorMSFT</a>
data SpatialAnchorCreateInfoMSFT
SpatialAnchorCreateInfoMSFT :: Ptr Space_T -> Posef -> Time -> SpatialAnchorCreateInfoMSFT

-- | <tt>space</tt> is a handle to the <a>Space</a> in which <tt>pose</tt>
--   is specified.
[$sel:space:SpatialAnchorCreateInfoMSFT] :: SpatialAnchorCreateInfoMSFT -> Ptr Space_T

-- | <tt>pose</tt> is the <a>Posef</a> within <tt>space</tt> at
--   <tt>time</tt> that specifies the point in the real world used to
--   initialize the new anchor.
[$sel:pose:SpatialAnchorCreateInfoMSFT] :: SpatialAnchorCreateInfoMSFT -> Posef

-- | <tt>time</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   at which <tt>pose</tt> will be evaluated within <tt>space</tt>.
[$sel:time:SpatialAnchorCreateInfoMSFT] :: SpatialAnchorCreateInfoMSFT -> Time

-- | XrSpatialAnchorSpaceCreateInfoMSFT - Information to create a space
--   from a spatial anchor
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SPATIAL_ANCHOR_SPACE_CREATE_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>anchor</tt> <i>must</i> be a valid <a>SpatialAnchorMSFT</a>
--   handle</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Posef</a>, <a>Space</a>, <a>SpatialAnchorMSFT</a>,
--   <a>StructureType</a>, <a>createSpatialAnchorSpaceMSFT</a>
data SpatialAnchorSpaceCreateInfoMSFT
SpatialAnchorSpaceCreateInfoMSFT :: Ptr SpatialAnchorMSFT_T -> Posef -> SpatialAnchorSpaceCreateInfoMSFT

-- | <tt>anchor</tt> is a handle to an <a>SpatialAnchorMSFT</a> previously
--   created with <a>createSpatialAnchorMSFT</a>.
[$sel:anchor:SpatialAnchorSpaceCreateInfoMSFT] :: SpatialAnchorSpaceCreateInfoMSFT -> Ptr SpatialAnchorMSFT_T

-- | <tt>poseInAnchorSpace</tt> is an <a>Posef</a> defining the position
--   and orientation of the new space’s origin relative to the anchor’s
--   natural origin.
[$sel:poseInAnchorSpace:SpatialAnchorSpaceCreateInfoMSFT] :: SpatialAnchorSpaceCreateInfoMSFT -> Posef
type MSFT_spatial_anchor_SPEC_VERSION = 1
pattern MSFT_spatial_anchor_SPEC_VERSION :: forall a. Integral a => a
type MSFT_SPATIAL_ANCHOR_EXTENSION_NAME = "XR_MSFT_spatial_anchor"
pattern MSFT_SPATIAL_ANCHOR_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a

-- | XrSpatialAnchorMSFT - Represents a spatial anchor
--   
--   <h1>Description</h1>
--   
--   Spatial anchors are often used in combination with an
--   <tt>UNBOUNDED_MSFT</tt> reference space. <tt>UNBOUNDED_MSFT</tt>
--   reference spaces adjust their origin as necessary to keep the viewer’s
--   coordinates relative to the space’s origin stable. Such adjustments
--   maintain the visual stability of content currently near the viewer,
--   but may cause content placed far from the viewer to drift in its
--   alignment to the real world by the time the user moves close again. By
--   creating an <a>SpatialAnchorMSFT</a> where a piece of content is
--   placed and then always rendering that content relative to its anchor’s
--   space, an application can ensure that each piece of content stays at a
--   fixed location in the environment.
--   
--   <h1>See Also</h1>
--   
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a>,
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a>,
--   <a>createSpatialAnchorMSFT</a>, <a>destroySpatialAnchorMSFT</a>,
--   <a>tryGetPerceptionAnchorFromSpatialAnchorMSFT</a>
data SpatialAnchorMSFT
SpatialAnchorMSFT :: Ptr SpatialAnchorMSFT_T -> InstanceCmds -> SpatialAnchorMSFT
[$sel:spatialAnchorMSFTHandle:SpatialAnchorMSFT] :: SpatialAnchorMSFT -> Ptr SpatialAnchorMSFT_T
[$sel:instanceCmds:SpatialAnchorMSFT] :: SpatialAnchorMSFT -> InstanceCmds
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorCreateInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorSpaceCreateInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorSpaceCreateInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorSpaceCreateInfoMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorSpaceCreateInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorSpaceCreateInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorCreateInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorCreateInfoMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorCreateInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_spatial_anchor.SpatialAnchorCreateInfoMSFT


-- | <h1>Name</h1>
--   
--   XR_MSFT_perception_anchor_interop - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_perception_anchor_interop</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   57
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <ul>
--   <li>Requires @@</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a>,
--   <a>tryGetPerceptionAnchorFromSpatialAnchorMSFT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_perception_anchor_interop

-- | xrCreateSpatialAnchorFromPerceptionAnchorMSFT - Create a
--   <a>SpatialAnchorMSFT</a> from a Windows SpatialAnchor pointer
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The input <tt>perceptionAnchor</tt> <i>must</i> support successful
--   <tt>QueryInterface</tt> to
--   <a>Windows.Perception.Spatial.SpatialAnchor</a> , otherwise the
--   runtime <i>must</i> return <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   If the function successfully returned, the output <tt>anchor</tt>
--   <i>must</i> be a valid handle. This also increments the refcount of
--   the <tt>perceptionAnchor</tt> object.
--   
--   When application is done with the <tt>anchor</tt> handle, it
--   <i>can</i> be destroyed using <a>destroySpatialAnchorMSFT</a>
--   function. This also decrements the refcount of underlying windows
--   perception anchor object.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>perceptionAnchor</tt> <i>must</i> be a pointer to an
--   <a>IUnknown</a> value</li>
--   <li><tt>anchor</tt> <i>must</i> be a pointer to an
--   <a>SpatialAnchorMSFT</a> handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>SpatialAnchorMSFT</a>
createSpatialAnchorFromPerceptionAnchorMSFT :: forall io. MonadIO io => Session -> ("perceptionAnchor" ::: Ptr IUnknown) -> io SpatialAnchorMSFT

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a> and
--   <a>destroySpatialAnchorMSFT</a>
--   
--   To ensure that <a>destroySpatialAnchorMSFT</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withSpatialAnchorFromPerceptionAnchorMSFT :: forall io r. MonadIO io => Session -> Ptr IUnknown -> (io SpatialAnchorMSFT -> (SpatialAnchorMSFT -> io ()) -> r) -> r

-- | xrTryGetPerceptionAnchorFromSpatialAnchorMSFT - Convert a
--   <a>SpatialAnchorMSFT</a> to a Windows SpatialAnchor
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If the runtime can convert the <tt>anchor</tt> to a
--   <a>Windows.Perception.Spatial.SpatialAnchor</a> object, this function
--   <i>must</i> return <a>SUCCESS</a>, and the output <a>IUnknown</a> in
--   the pointer of <tt>perceptionAnchor</tt> <i>must</i> be not
--   <tt>NULL</tt>. This also increments the refcount of the object. The
--   application <i>can</i> then use <tt>QueryInterface</tt> to get the
--   pointer for <a>Windows.Perception.Spatial.SpatialAnchor</a> object.
--   The application <i>should</i> release the COM pointer after done with
--   the object, or attach it to a smart COM pointer such as
--   <tt>winrt::com_ptr</tt>.
--   
--   If the runtime cannot convert the <tt>anchor</tt> to a
--   <a>Windows.Perception.Spatial.SpatialAnchor</a> object, the function
--   <i>must</i> return <a>SUCCESS</a>, and the output <a>IUnknown</a> in
--   the pointer of <tt>perceptionAnchor</tt> <i>must</i> be <tt>NULL</tt>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>tryGetPerceptionAnchorFromSpatialAnchorMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>anchor</tt> <i>must</i> be a valid <a>SpatialAnchorMSFT</a>
--   handle</li>
--   <li><tt>perceptionAnchor</tt> <i>must</i> be a pointer to a pointer to
--   an <a>IUnknown</a> value</li>
--   <li><tt>anchor</tt> <i>must</i> have been created, allocated, or
--   retrieved from <tt>session</tt></li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>SpatialAnchorMSFT</a>
tryGetPerceptionAnchorFromSpatialAnchorMSFT :: forall io. MonadIO io => Session -> SpatialAnchorMSFT -> io ("perceptionAnchor" ::: Ptr IUnknown)
type MSFT_perception_anchor_interop_SPEC_VERSION = 1
pattern MSFT_perception_anchor_interop_SPEC_VERSION :: forall a. Integral a => a
type MSFT_PERCEPTION_ANCHOR_INTEROP_EXTENSION_NAME = "XR_MSFT_perception_anchor_interop"
pattern MSFT_PERCEPTION_ANCHOR_INTEROP_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
data IUnknown

-- | XrSpatialAnchorMSFT - Represents a spatial anchor
--   
--   <h1>Description</h1>
--   
--   Spatial anchors are often used in combination with an
--   <tt>UNBOUNDED_MSFT</tt> reference space. <tt>UNBOUNDED_MSFT</tt>
--   reference spaces adjust their origin as necessary to keep the viewer’s
--   coordinates relative to the space’s origin stable. Such adjustments
--   maintain the visual stability of content currently near the viewer,
--   but may cause content placed far from the viewer to drift in its
--   alignment to the real world by the time the user moves close again. By
--   creating an <a>SpatialAnchorMSFT</a> where a piece of content is
--   placed and then always rendering that content relative to its anchor’s
--   space, an application can ensure that each piece of content stays at a
--   fixed location in the environment.
--   
--   <h1>See Also</h1>
--   
--   <a>SpatialAnchorSpaceCreateInfoMSFT</a>,
--   <a>createSpatialAnchorFromPerceptionAnchorMSFT</a>,
--   <a>createSpatialAnchorMSFT</a>, <a>destroySpatialAnchorMSFT</a>,
--   <a>tryGetPerceptionAnchorFromSpatialAnchorMSFT</a>
data SpatialAnchorMSFT
SpatialAnchorMSFT :: Ptr SpatialAnchorMSFT_T -> InstanceCmds -> SpatialAnchorMSFT
[$sel:spatialAnchorMSFTHandle:SpatialAnchorMSFT] :: SpatialAnchorMSFT -> Ptr SpatialAnchorMSFT_T
[$sel:instanceCmds:SpatialAnchorMSFT] :: SpatialAnchorMSFT -> InstanceCmds

-- | xrDestroySpatialAnchorMSFT - Destroys a spatial anchor
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>SpatialAnchorMSFT</a> handles are destroyed using
--   <a>destroySpatialAnchorMSFT</a>. By destroying an anchor, the runtime
--   <i>can</i> stop spending resources used to maintain tracking for that
--   anchor’s origin.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>destroySpatialAnchorMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>anchor</tt> <i>must</i> be a valid <a>SpatialAnchorMSFT</a>
--   handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>SpatialAnchorMSFT</a>, <a>createSpatialAnchorMSFT</a>
destroySpatialAnchorMSFT :: forall io. MonadIO io => SpatialAnchorMSFT -> io ()


-- | <h1>Name</h1>
--   
--   XR_MSFT_holographic_window_attachment - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_holographic_window_attachment</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   64
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HolographicWindowAttachmentMSFT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_holographic_window_attachment

-- | XrHolographicWindowAttachmentMSFT - The holographic window binding
--   structure which can be passed at session creation
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating a holographic window-backed <a>Session</a>, the
--   application provides a pointer to an
--   <a>HolographicWindowAttachmentMSFT</a> in the <tt>next</tt> chain of
--   the <a>SessionCreateInfo</a>.
--   
--   The session state of a holographic window-backed <a>Session</a> will
--   only reach <a>SESSION_STATE_VISIBLE</a> when the provided CoreWindow
--   is made visible. If the CoreWindow is for a secondary app view, the
--   application must programmatically request to make the CoreWindow
--   visible (e.g. with
--   <tt>ApplicationViewSwitcher.TryShowAsStandaloneAsync</tt> or
--   <tt>ApplicationViewSwitcher.SwitchAsync</tt>).
--   
--   The app <i>must</i> not call <a>createSession</a> while the specified
--   CoreWindow thread is blocked, otherwise the call <i>may</i> deadlock.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HolographicWindowAttachmentMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HOLOGRAPHIC_WINDOW_ATTACHMENT_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>holographicSpace</tt> <i>must</i> be a pointer to an
--   <a>IUnknown</a> value</li>
--   <li><tt>coreWindow</tt> <i>must</i> be a pointer to an <a>IUnknown</a>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data HolographicWindowAttachmentMSFT
HolographicWindowAttachmentMSFT :: Ptr IUnknown -> Ptr IUnknown -> HolographicWindowAttachmentMSFT

-- | <tt>holographicSpace</tt> is a pointer to a valid
--   <tt>Windows</tt>.Graphics.Holographic.HolographicSpace.
[$sel:holographicSpace:HolographicWindowAttachmentMSFT] :: HolographicWindowAttachmentMSFT -> Ptr IUnknown

-- | <tt>coreWindow</tt> is a pointer to a valid
--   <tt>Windows</tt>.UI.Core.CoreWindow.
[$sel:coreWindow:HolographicWindowAttachmentMSFT] :: HolographicWindowAttachmentMSFT -> Ptr IUnknown
type MSFT_holographic_window_attachment_SPEC_VERSION = 1
pattern MSFT_holographic_window_attachment_SPEC_VERSION :: forall a. Integral a => a
type MSFT_HOLOGRAPHIC_WINDOW_ATTACHMENT_EXTENSION_NAME = "XR_MSFT_holographic_window_attachment"
pattern MSFT_HOLOGRAPHIC_WINDOW_ATTACHMENT_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
data IUnknown
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_holographic_window_attachment.HolographicWindowAttachmentMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_holographic_window_attachment.HolographicWindowAttachmentMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_holographic_window_attachment.HolographicWindowAttachmentMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_holographic_window_attachment.HolographicWindowAttachmentMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_holographic_window_attachment.HolographicWindowAttachmentMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_holographic_window_attachment.HolographicWindowAttachmentMSFT


-- | <h1>Name</h1>
--   
--   XR_MSFT_hand_tracking_mesh - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_hand_tracking_mesh</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   53
--   
--   <h1>Revision</h1>
--   
--   2
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <ul>
--   <li>Requires @@</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandMeshIndexBufferMSFT</a>, <a>HandMeshMSFT</a>,
--   <a>HandMeshSpaceCreateInfoMSFT</a>, <a>HandMeshUpdateInfoMSFT</a>,
--   <a>HandMeshVertexBufferMSFT</a>, <a>HandMeshVertexMSFT</a>,
--   <a>HandPoseTypeInfoMSFT</a>, <a>HandPoseTypeMSFT</a>,
--   <a>SystemHandTrackingMeshPropertiesMSFT</a>,
--   <a>createHandMeshSpaceMSFT</a>, <a>updateHandMeshMSFT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_hand_tracking_mesh

-- | xrCreateHandMeshSpaceMSFT - Create a space for hand mesh tracking
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   A hand mesh space location is specified by runtime preference to
--   effectively represent hand mesh vertices without unnecessary
--   transformations. For example, an optical hand tracking system
--   <i>can</i> define the hand mesh space origin at the depth camera’s
--   optical center.
--   
--   An application should create separate hand mesh space handles for each
--   hand to retrieve the corresponding hand mesh data. The runtime
--   <i>may</i> use the lifetime of this hand mesh space handle to manage
--   the underlying device resources. Therefore, the application
--   <i>should</i> destroy the hand mesh handle after it is finished using
--   the hand mesh.
--   
--   The hand mesh space can be related to other spaces in the session,
--   such as view reference space, or grip action space from the
--   /interaction_profiles/khr/simple_controller interaction profile. The
--   hand mesh space may be not locatable when the hand is outside of the
--   tracking range, or if focus is removed from the application. In these
--   cases, the runtime <i>must</i> not set the
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> and
--   <tt>XR_SPACE_LOCATION_ORIENTATION_VALID_BIT</tt> bits on calls to
--   <a>locateSpace</a> with the hand mesh space, and the application
--   <i>should</i> avoid using the returned poses or query for hand mesh
--   data.
--   
--   If the underlying <a>HandTrackerEXT</a> is destroyed, the runtime
--   <i>must</i> continue to support <a>locateSpace</a> using the hand mesh
--   space, and it <i>must</i> return space location with
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> and
--   <tt>XR_SPACE_LOCATION_ORIENTATION_VALID_BIT</tt> unset.
--   
--   The application <i>may</i> create a mesh space for the reference hand
--   by setting <tt>handPoseType</tt> to
--   <a>HAND_POSE_TYPE_REFERENCE_OPEN_PALM_MSFT</a>. Hand mesh spaces for
--   the reference hand <i>must</i> only be locatable in reference to mesh
--   spaces or joint spaces of the reference hand.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createHandMeshSpaceMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>handTracker</tt> <i>must</i> be a valid <a>HandTrackerEXT</a>
--   handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>HandMeshSpaceCreateInfoMSFT</a> structure</li>
--   <li><tt>space</tt> <i>must</i> be a pointer to an <a>Space</a>
--   handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_POSE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_FEATURE_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandMeshSpaceCreateInfoMSFT</a>, <a>HandTrackerEXT</a>,
--   <a>Space</a>
createHandMeshSpaceMSFT :: forall io. MonadIO io => HandTrackerEXT -> HandMeshSpaceCreateInfoMSFT -> io (Result, Space)

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createHandMeshSpaceMSFT</a> and <a>destroySpace</a>
--   
--   To ensure that <a>destroySpace</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withHandMeshSpaceMSFT :: forall io r. MonadIO io => HandTrackerEXT -> HandMeshSpaceCreateInfoMSFT -> (io (Result, Space) -> ((Result, Space) -> io ()) -> r) -> r

-- | xrUpdateHandMeshMSFT - Update hand mesh buffers
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The application <i>should</i> preallocate the index buffer and vertex
--   buffer in <a>HandMeshMSFT</a> using the <tt>maxHandMeshIndexCount</tt>
--   and <tt>maxHandMeshVertexCount</tt> from the
--   <a>SystemHandTrackingMeshPropertiesMSFT</a> returned from the
--   <a>getSystemProperties</a> function.
--   
--   The application <i>should</i> preallocate the <a>HandMeshMSFT</a>
--   structure and reuse it for each frame so as to reduce the copies of
--   data when underlying tracking data is not changed. The application
--   should use <tt>indexBufferChanged</tt> and
--   <tt>vertexBufferChanged</tt> in <a>HandMeshMSFT</a> to detect changes
--   and avoid unnecessary data processing when there is no changes.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>updateHandMeshMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>handTracker</tt> <i>must</i> be a valid <a>HandTrackerEXT</a>
--   handle</li>
--   <li><tt>updateInfo</tt> <i>must</i> be a pointer to a valid
--   <a>HandMeshUpdateInfoMSFT</a> structure</li>
--   <li><tt>handMesh</tt> <i>must</i> be a pointer to an
--   <a>HandMeshMSFT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_FEATURE_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandMeshMSFT</a>, <a>HandMeshUpdateInfoMSFT</a>,
--   <a>HandTrackerEXT</a>
updateHandMeshMSFT :: forall io. MonadIO io => HandTrackerEXT -> HandMeshUpdateInfoMSFT -> io (Result, HandMeshMSFT)

-- | XrHandMeshSpaceCreateInfoMSFT - The information to create a hand mesh
--   space
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandMeshSpaceCreateInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HAND_MESH_SPACE_CREATE_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>handPoseType</tt> <i>must</i> be a valid
--   <a>HandPoseTypeMSFT</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandPoseTypeMSFT</a>, <a>Posef</a>, <a>StructureType</a>,
--   <a>createHandMeshSpaceMSFT</a>
data HandMeshSpaceCreateInfoMSFT
HandMeshSpaceCreateInfoMSFT :: HandPoseTypeMSFT -> Posef -> HandMeshSpaceCreateInfoMSFT

-- | <tt>handPoseType</tt> is an <a>HandPoseTypeMSFT</a> used to specify
--   the type of hand this mesh is tracking. Indices and vertices returned
--   from <a>updateHandMeshMSFT</a> for a hand type will be relative to the
--   corresponding space create with the same hand type.
[$sel:handPoseType:HandMeshSpaceCreateInfoMSFT] :: HandMeshSpaceCreateInfoMSFT -> HandPoseTypeMSFT

-- | <tt>poseInHandMeshSpace</tt> is an <a>Posef</a> defining the position
--   and orientation of the new space’s origin within the natural reference
--   frame of the hand mesh space.
[$sel:poseInHandMeshSpace:HandMeshSpaceCreateInfoMSFT] :: HandMeshSpaceCreateInfoMSFT -> Posef

-- | XrHandMeshUpdateInfoMSFT - The information to update a hand mesh
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   A runtime <i>may</i> not maintain a full history of hand mesh data,
--   therefore the returned <a>HandMeshMSFT</a> might return data that’s
--   not exactly corresponding to the <tt>time</tt> input. If the runtime
--   cannot return any tracking data for the given <tt>time</tt> at all, it
--   <i>must</i> set <tt>isActive</tt> to <a>FALSE</a> for the call to
--   <a>updateHandMeshMSFT</a>. Otherwise, if the runtime returns
--   <tt>isActive</tt> as <a>TRUE</a>, the data in <a>HandMeshMSFT</a> must
--   be valid to use.
--   
--   An application can choose different <tt>handPoseType</tt> values to
--   query the hand mesh data. The returned hand mesh <i>must</i> be
--   consistent to the hand joint space location on the same
--   <a>HandTrackerEXT</a> when using the same <a>HandPoseTypeMSFT</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandMeshUpdateInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HAND_MESH_UPDATE_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>handPoseType</tt> <i>must</i> be a valid
--   <a>HandPoseTypeMSFT</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandPoseTypeMSFT</a>, <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>updateHandMeshMSFT</a>
data HandMeshUpdateInfoMSFT
HandMeshUpdateInfoMSFT :: Time -> HandPoseTypeMSFT -> HandMeshUpdateInfoMSFT

-- | <tt>time</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   that describes the time for which the application wishes to query the
--   hand mesh state.
[$sel:time:HandMeshUpdateInfoMSFT] :: HandMeshUpdateInfoMSFT -> Time

-- | <tt>handPoseType</tt> is an <a>HandPoseTypeMSFT</a> which describes
--   the type of hand pose of the hand mesh to update.
[$sel:handPoseType:HandMeshUpdateInfoMSFT] :: HandMeshUpdateInfoMSFT -> HandPoseTypeMSFT

-- | XrHandMeshMSFT - The data of a hand mesh
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When the returned <tt>isActive</tt> value is <a>FALSE</a>, the runtime
--   indicates the hand is not actively tracked, for example, the hand is
--   outside of sensor’s range, or the input focus is taken away from the
--   application. When the runtime returns <a>FALSE</a> to
--   <tt>isActive</tt>, it <i>must</i> set <tt>indexBufferChanged</tt> and
--   <tt>vertexBufferChanged</tt> to <a>FALSE</a>, and <i>must</i> not
--   change the content in <tt>indexBuffer</tt> or <tt>vertexBuffer</tt>,
--   
--   When the returned <tt>isActive</tt> value is <a>TRUE</a>, the hand
--   tracking mesh represented in <tt>indexBuffer</tt> and
--   <tt>vertexBuffer</tt> are updated to the latest data of the
--   <tt>time</tt> given to the <a>updateHandMeshMSFT</a> function. The
--   runtime <i>must</i> set <tt>indexBufferChanged</tt> and
--   <tt>vertexBufferChanged</tt> to reflect whether the index or vertex
--   buffer’s content are changed during the update. In this way, the
--   application can easily avoid unnecessary processing of buffers when
--   there’s no new data.
--   
--   The hand mesh is represented in triangle lists and each triangle’s
--   vertices are in counter-clockwise order when looking from outside of
--   the hand. When hand tracking is active, i.e. when <tt>isActive</tt> is
--   returned as <a>TRUE</a>, the returned
--   <tt>indexBuffer.indexCountOutput</tt> value <i>must</i> be positive
--   and multiple of 3, and <tt>vertexBuffer.vertexCountOutput</tt> value
--   <i>must</i> be equal to or larger than 3.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandMeshMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be <a>TYPE_HAND_MESH_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>indexBuffer</tt> <i>must</i> be a valid
--   <a>HandMeshIndexBufferMSFT</a> structure</li>
--   <li><tt>vertexBuffer</tt> <i>must</i> be a valid
--   <a>HandMeshVertexBufferMSFT</a> structure</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>HandMeshIndexBufferMSFT</a>, <a>HandMeshVertexBufferMSFT</a>,
--   <a>StructureType</a>, <a>updateHandMeshMSFT</a>
data HandMeshMSFT
HandMeshMSFT :: Bool -> Bool -> Bool -> HandMeshIndexBufferMSFT -> HandMeshVertexBufferMSFT -> HandMeshMSFT

-- | <tt>isActive</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   indicating if the current hand tracker is active.
[$sel:isActive:HandMeshMSFT] :: HandMeshMSFT -> Bool

-- | <tt>indexBufferChanged</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   indicating if the <tt>indexBuffer</tt> content was changed during the
--   update.
[$sel:indexBufferChanged:HandMeshMSFT] :: HandMeshMSFT -> Bool

-- | <tt>vertexBufferChanged</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   indicating if the <tt>vertexBuffer</tt> content was changed during the
--   update.
[$sel:vertexBufferChanged:HandMeshMSFT] :: HandMeshMSFT -> Bool

-- | <tt>indexBuffer</tt> is an <a>HandMeshIndexBufferMSFT</a> returns the
--   index buffer of the tracked hand mesh.
[$sel:indexBuffer:HandMeshMSFT] :: HandMeshMSFT -> HandMeshIndexBufferMSFT

-- | <tt>vertexBuffer</tt> is an <a>HandMeshVertexBufferMSFT</a> returns
--   the vertex buffer of the tracked hand mesh.
[$sel:vertexBuffer:HandMeshMSFT] :: HandMeshMSFT -> HandMeshVertexBufferMSFT

-- | XrHandMeshIndexBufferMSFT - The index buffer of a hand mesh
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   An application <i>should</i> preallocate the indices array using the
--   <tt>maxHandMeshIndexCount</tt> in
--   <a>SystemHandTrackingMeshPropertiesMSFT</a> returned from
--   <a>getSystemProperties</a>. In this way, the application can avoid
--   possible insufficient buffer sizees for each query, and therefore
--   avoid reallocating memory each frame.
--   
--   The input <tt>indexCapacityInput</tt> <i>must</i> not be 0, and
--   <tt>indices</tt> <i>must</i> not be <tt>NULL</tt>, or else the runtime
--   <i>must</i> return <a>ERROR_VALIDATION_FAILURE</a> on calls to the
--   <a>updateHandMeshMSFT</a> function.
--   
--   If the input <tt>indexCapacityInput</tt> is not sufficient to contain
--   all output indices, the runtime <i>must</i> return
--   <a>ERROR_SIZE_INSUFFICIENT</a> on calls to <a>updateHandMeshMSFT</a>,
--   not change the content in <tt>indexBufferKey</tt> and
--   <tt>indices</tt>, and return 0 for <tt>indexCountOutput</tt>.
--   
--   If the input <tt>indexCapacityInput</tt> is equal to or larger than
--   the <tt>maxHandMeshIndexCount</tt> in
--   <a>SystemHandTrackingMeshPropertiesMSFT</a> returned from
--   <a>getSystemProperties</a>, the runtime <i>must</i> not return
--   <a>ERROR_SIZE_INSUFFICIENT</a> error on <a>updateHandMeshMSFT</a>
--   because of insufficient index buffer size.
--   
--   If the input <tt>indexBufferKey</tt> is 0, the capacity of indices
--   array is sufficient, and hand mesh tracking is active, the runtime
--   <i>must</i> return the latest non-zero <tt>indexBufferKey</tt>, and
--   fill in <tt>indexCountOutput</tt> and <tt>indices</tt>.
--   
--   If the input <tt>indexBufferKey</tt> is not 0, the runtime <i>can</i>
--   either return without changing <tt>indexCountOutput</tt> or content in
--   <tt>indices</tt>, and return <a>FALSE</a> for
--   <tt>indexBufferChanged</tt> indicating the indices are not changed; or
--   return a new non-zero <tt>indexBufferKey</tt> and fill in latest data
--   in <tt>indexCountOutput</tt> and <tt>indices</tt>, and return
--   <a>TRUE</a> for <tt>indexBufferChanged</tt> indicating the indices are
--   updated to a newer version.
--   
--   An application <i>can</i> keep the <a>HandMeshIndexBufferMSFT</a>
--   structure for each frame in a frame loop and use the returned
--   <tt>indexBufferKey</tt> to identify different triangle list topology
--   described in <tt>indices</tt>. The application can therefore avoid
--   unnecessary processing of indices, such as coping them to GPU memory.
--   
--   The runtime <i>must</i> return the same <tt>indexBufferKey</tt> for
--   the same <a>HandTrackerEXT</a> at a given time, regardless of the
--   input <a>HandPoseTypeMSFT</a> in <a>HandMeshUpdateInfoMSFT</a>. This
--   ensures the index buffer has the same mesh topology and allows the
--   application to reason about vertices across different hand pose types.
--   For example, the application <i>can</i> build a procedure to perform
--   UV mapping on vertices of a hand mesh using
--   <a>HAND_POSE_TYPE_REFERENCE_OPEN_PALM_MSFT</a>, and apply the
--   resultant UV data on vertices to the mesh returned from the same hand
--   tracker using <a>HAND_POSE_TYPE_TRACKED_MSFT</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandMeshIndexBufferMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>indices</tt> <i>must</i> be a pointer to an array of
--   <tt>indexCapacityInput</tt> <tt>uint32_t</tt> values</li>
--   <li>The <tt>indexCapacityInput</tt> parameter <i>must</i> be greater
--   than <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandMeshMSFT</a>
data HandMeshIndexBufferMSFT
HandMeshIndexBufferMSFT :: Word32 -> Word32 -> Word32 -> Ptr Word32 -> HandMeshIndexBufferMSFT

-- | <tt>indexBufferKey</tt> is a <tt>uint32_t</tt> serving as the key of
--   the returned index buffer content or 0 to indicate a request to
--   retrieve the latest indices regardless of existing content in
--   <tt>indices</tt>.
[$sel:indexBufferKey:HandMeshIndexBufferMSFT] :: HandMeshIndexBufferMSFT -> Word32

-- | <tt>indexCapacityInput</tt> is a positive <tt>uint32_t</tt> describes
--   the capacity of the <tt>indices</tt> array.
[$sel:indexCapacityInput:HandMeshIndexBufferMSFT] :: HandMeshIndexBufferMSFT -> Word32

-- | <tt>indexCountOutput</tt> is a <tt>uint32_t</tt> returned by the
--   runtime with the count of indices written in <tt>indices</tt>.
[$sel:indexCountOutput:HandMeshIndexBufferMSFT] :: HandMeshIndexBufferMSFT -> Word32

-- | <tt>indices</tt> is an array of indices filled in by the runtime,
--   specifying the indices of the triangles list in the vertex buffer.
[$sel:indices:HandMeshIndexBufferMSFT] :: HandMeshIndexBufferMSFT -> Ptr Word32

-- | XrHandMeshVertexBufferMSFT - The vertex buffer of a hand mesh
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   An application <i>should</i> preallocate the vertices array using the
--   <tt>maxHandMeshVertexCount</tt> in
--   <a>SystemHandTrackingMeshPropertiesMSFT</a> returned from
--   <a>getSystemProperties</a>. In this way, the application can avoid
--   possible insufficient buffer sizes for each query, and therefore avoid
--   reallocating memory each frame.
--   
--   The input <tt>vertexCapacityInput</tt> <i>must</i> not be 0, and
--   <tt>vertices</tt> <i>must</i> not be <tt>NULL</tt>, or else the
--   runtime <i>must</i> return <a>ERROR_VALIDATION_FAILURE</a> on calls to
--   the <a>updateHandMeshMSFT</a> function.
--   
--   If the input <tt>vertexCapacityInput</tt> is not sufficient to contain
--   all output vertices, the runtime <i>must</i> return
--   <a>ERROR_SIZE_INSUFFICIENT</a> on calls to the
--   <a>updateHandMeshMSFT</a>, do not change content in
--   <tt>vertexUpdateTime</tt> and <tt>vertices</tt>, and return 0 for
--   <tt>vertexCountOutput</tt>.
--   
--   If the input <tt>vertexCapacityInput</tt> is equal to or larger than
--   the <tt>maxHandMeshVertexCount</tt> in
--   <a>SystemHandTrackingMeshPropertiesMSFT</a> returned from
--   <a>getSystemProperties</a>, the runtime <i>must</i> not return
--   <a>ERROR_SIZE_INSUFFICIENT</a> on calls to the
--   <a>updateHandMeshMSFT</a> because of insufficient vertex buffer size.
--   
--   If the input <tt>vertexUpdateTime</tt> is 0, and the capacity of the
--   vertices array is sufficient, and hand mesh tracking is active, the
--   runtime <i>must</i> return the latest non-zero
--   <tt>vertexUpdateTime</tt>, and fill in the <tt>vertexCountOutput</tt>
--   and <tt>vertices</tt> fields.
--   
--   If the input <tt>vertexUpdateTime</tt> is not 0, the runtime
--   <i>can</i> either return without changing <tt>vertexCountOutput</tt>
--   or the content in <tt>vertices</tt>, and return <a>FALSE</a> for
--   <tt>vertexBufferChanged</tt> indicating the vertices are not changed;
--   or return a new non-zero <tt>vertexUpdateTime</tt> and fill in latest
--   data in <tt>vertexCountOutput</tt> and <tt>vertices</tt> and return
--   <a>TRUE</a> for <tt>vertexBufferChanged</tt> indicating the vertices
--   are updated to a newer version.
--   
--   An application <i>can</i> keep the <a>HandMeshVertexBufferMSFT</a>
--   structure for each frame in frame loop and use the returned
--   <tt>vertexUpdateTime</tt> to detect the changes of the content in
--   <tt>vertices</tt>. The application can therefore avoid unnecessary
--   processing of vertices, such as coping them to GPU memory.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandMeshVertexBufferMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>vertices</tt> <i>must</i> be a pointer to an array of
--   <tt>vertexCapacityInput</tt> <a>HandMeshVertexMSFT</a> structures</li>
--   <li>The <tt>vertexCapacityInput</tt> parameter <i>must</i> be greater
--   than <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandMeshMSFT</a>, <a>HandMeshVertexMSFT</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
data HandMeshVertexBufferMSFT
HandMeshVertexBufferMSFT :: Time -> Word32 -> Word32 -> Ptr HandMeshVertexMSFT -> HandMeshVertexBufferMSFT

-- | <tt>vertexUpdateTime</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   representing the time when the runtime receives the vertex buffer
--   content or 0 to indicate a request to retrieve latest vertices
--   regardless of existing content in <tt>vertices</tt>.
[$sel:vertexUpdateTime:HandMeshVertexBufferMSFT] :: HandMeshVertexBufferMSFT -> Time

-- | <tt>vertexCapacityInput</tt> is a positive <tt>uint32_t</tt> describes
--   the capacity of the <tt>vertices</tt> array.
[$sel:vertexCapacityInput:HandMeshVertexBufferMSFT] :: HandMeshVertexBufferMSFT -> Word32

-- | <tt>vertexCountOutput</tt> is a <tt>uint32_t</tt> filled in by the
--   runtime with the count of vertices written in <tt>vertices</tt>.
[$sel:vertexCountOutput:HandMeshVertexBufferMSFT] :: HandMeshVertexBufferMSFT -> Word32

-- | <tt>vertices</tt> is an array of <a>HandMeshVertexMSFT</a> filled in
--   by the runtime, specifying the vertices of the hand mesh including the
--   position and normal vector in the hand mesh space.
[$sel:vertices:HandMeshVertexBufferMSFT] :: HandMeshVertexBufferMSFT -> Ptr HandMeshVertexMSFT

-- | XrHandMeshVertexMSFT - The vertex of hand mesh
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandMeshVertexMSFT</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandMeshVertexBufferMSFT</a>, <a>Vector3f</a>
data HandMeshVertexMSFT
HandMeshVertexMSFT :: Vector3f -> Vector3f -> HandMeshVertexMSFT

-- | <tt>position</tt> is an <a>Vector3f</a> structure representing the
--   position of the vertex in the hand mesh space, measured in meters.
[$sel:position:HandMeshVertexMSFT] :: HandMeshVertexMSFT -> Vector3f

-- | <tt>normal</tt> is an <a>Vector3f</a> structure representing the
--   unweighted normal of the triangle surface at the vertex as a unit
--   vector in hand mesh space.
[$sel:normal:HandMeshVertexMSFT] :: HandMeshVertexMSFT -> Vector3f

-- | XrSystemHandTrackingMeshPropertiesMSFT - System property for hand
--   tracking mesh
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a runtime returns <a>FALSE</a> for
--   <tt>supportsHandTrackingMesh</tt>, the system does not support hand
--   tracking mesh input, and therefore <i>must</i> return
--   <a>ERROR_FEATURE_UNSUPPORTED</a> from <a>createHandMeshSpaceMSFT</a>
--   and <a>updateHandMeshMSFT</a>. The application <i>should</i> avoid
--   using hand mesh functionality when <tt>supportsHandTrackingMesh</tt>
--   is <a>FALSE</a>.
--   
--   If a runtime returns <a>TRUE</a> for
--   <tt>supportsHandTrackingMesh</tt>, the system supports hand tracking
--   mesh input. In this case, the runtime <i>must</i> return a positive
--   number for <tt>maxHandMeshIndexCount</tt> and
--   <tt>maxHandMeshVertexCount</tt>. An application <i>should</i> use
--   <tt>maxHandMeshIndexCount</tt> and <tt>maxHandMeshVertexCount</tt> to
--   preallocate hand mesh buffers and reuse them in their render loop when
--   calling <a>updateHandMeshMSFT</a> every frame.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SystemHandTrackingMeshPropertiesMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SYSTEM_HAND_TRACKING_MESH_PROPERTIES_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>
data SystemHandTrackingMeshPropertiesMSFT
SystemHandTrackingMeshPropertiesMSFT :: Bool -> Word32 -> Word32 -> SystemHandTrackingMeshPropertiesMSFT

-- | <tt>supportsHandTrackingMesh</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   indicating if current system is capable of hand tracking mesh input.
[$sel:supportsHandTrackingMesh:SystemHandTrackingMeshPropertiesMSFT] :: SystemHandTrackingMeshPropertiesMSFT -> Bool

-- | <tt>maxHandMeshIndexCount</tt> is a <tt>uint32_t</tt> returns the
--   maximum count of indices that will be returned from the hand tracker.
[$sel:maxHandMeshIndexCount:SystemHandTrackingMeshPropertiesMSFT] :: SystemHandTrackingMeshPropertiesMSFT -> Word32

-- | <tt>maxHandMeshVertexCount</tt> is a <tt>uint32_t</tt> returns the
--   maximum count of vertices that will be returned from the hand tracker.
[$sel:maxHandMeshVertexCount:SystemHandTrackingMeshPropertiesMSFT] :: SystemHandTrackingMeshPropertiesMSFT -> Word32

-- | XrHandPoseTypeInfoMSFT - Describes what hand pose type for the hand
--   joint tracking.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandPoseTypeInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HAND_POSE_TYPE_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>handPoseType</tt> <i>must</i> be a valid
--   <a>HandPoseTypeMSFT</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandPoseTypeMSFT</a>, <a>StructureType</a>
data HandPoseTypeInfoMSFT
HandPoseTypeInfoMSFT :: HandPoseTypeMSFT -> HandPoseTypeInfoMSFT

-- | <tt>handPoseType</tt> is an <a>HandPoseTypeMSFT</a> that describes the
--   type of hand pose of the hand tracking.
[$sel:handPoseType:HandPoseTypeInfoMSFT] :: HandPoseTypeInfoMSFT -> HandPoseTypeMSFT

-- | XrHandPoseTypeMSFT - Describe type of input hand pose
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   The <a>HAND_POSE_TYPE_TRACKED_MSFT</a> input provides best fidelity to
--   the user’s actual hand motion. When the hand tracking input requires
--   the user to be holding a controller in their hand, the hand tracking
--   input will appear as the user virtually holding the controller. This
--   input can be used to render the hand shape together with the
--   controller in hand.
--   
--   The <a>HAND_POSE_TYPE_REFERENCE_OPEN_PALM_MSFT</a> input does not move
--   with the user’s actual hand. Through this reference hand pose, an
--   application <i>can</i> get a stable hand joint and mesh that has the
--   same mesh topology as the tracked hand mesh using the same
--   <a>HandTrackerEXT</a>, so that the application can apply the data
--   computed from a reference hand pose to the corresponding tracked hand.
--   
--   Although a reference hand pose does not move with user’s hand motion,
--   the bone length and hand thickness <i>may</i> be updated, for example
--   when tracking result refines, or a different user’s hand is detected.
--   The application <i>should</i> update reference hand joints and meshes
--   when the tracked mesh’s <tt>indexBufferKey</tt> is changed or when the
--   <tt>isActive</tt> value returned from <a>updateHandMeshMSFT</a>
--   changes from <a>FALSE</a> to <a>TRUE</a>. It can use the returned
--   <tt>indexBufferKey</tt> and <tt>vertexUpdateTime</tt> from
--   <a>updateHandMeshMSFT</a> to avoid unnecessary CPU or GPU work to
--   process the neutral hand inputs.
--   
--   <h1>See Also</h1>
--   
--   <a>HandMeshSpaceCreateInfoMSFT</a>, <a>HandMeshUpdateInfoMSFT</a>,
--   <a>HandPoseTypeInfoMSFT</a>
newtype HandPoseTypeMSFT
HandPoseTypeMSFT :: Int32 -> HandPoseTypeMSFT

-- | <a>HAND_POSE_TYPE_TRACKED_MSFT</a> represents a hand pose provided by
--   actual tracking of the user’s hand.
pattern HAND_POSE_TYPE_TRACKED_MSFT :: HandPoseTypeMSFT

-- | <a>HAND_POSE_TYPE_REFERENCE_OPEN_PALM_MSFT</a> represents a stable
--   reference hand pose in a relaxed open hand shape.
pattern HAND_POSE_TYPE_REFERENCE_OPEN_PALM_MSFT :: HandPoseTypeMSFT
type MSFT_hand_tracking_mesh_SPEC_VERSION = 2
pattern MSFT_hand_tracking_mesh_SPEC_VERSION :: forall a. Integral a => a
type MSFT_HAND_TRACKING_MESH_EXTENSION_NAME = "XR_MSFT_hand_tracking_mesh"
pattern MSFT_HAND_TRACKING_MESH_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a

-- | XrHandTrackerEXT - Represents a tracker for a hand joints.
--   
--   <h1>Description</h1>
--   
--   An application creates separate <a>HandTrackerEXT</a> handles for left
--   and right hands. This handle can be used to locate hand joints using
--   <a>locateHandJointsEXT</a> function.
--   
--   A hand tracker provides accurate fidelity to the user’s actual hand
--   shape. When the hand tracking input requires the user to be holding a
--   controller in their hand, the hand tracking input will appear as the
--   user holding the controller. This input can be used to render the hand
--   shape together with rendering the controller in the hand.
--   
--   <h1>See Also</h1>
--   
--   <a>createHandMeshSpaceMSFT</a>, <a>createHandTrackerEXT</a>,
--   <a>destroyHandTrackerEXT</a>, <a>locateHandJointsEXT</a>,
--   <a>updateHandMeshMSFT</a>
data HandTrackerEXT
HandTrackerEXT :: Ptr HandTrackerEXT_T -> InstanceCmds -> HandTrackerEXT
[$sel:handTrackerEXTHandle:HandTrackerEXT] :: HandTrackerEXT -> Ptr HandTrackerEXT_T
[$sel:instanceCmds:HandTrackerEXT] :: HandTrackerEXT -> InstanceCmds
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshUpdateInfoMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeMSFT
instance GHC.Classes.Ord OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.SystemHandTrackingMeshPropertiesMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexBufferMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshIndexBufferMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshSpaceCreateInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshUpdateInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshIndexBufferMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexBufferMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.SystemHandTrackingMeshPropertiesMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshSpaceCreateInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshSpaceCreateInfoMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshSpaceCreateInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshSpaceCreateInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshUpdateInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshUpdateInfoMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshUpdateInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshUpdateInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeInfoMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeMSFT
instance GHC.Read.Read OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandPoseTypeMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.SystemHandTrackingMeshPropertiesMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.SystemHandTrackingMeshPropertiesMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.SystemHandTrackingMeshPropertiesMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.SystemHandTrackingMeshPropertiesMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexBufferMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexBufferMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexBufferMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexBufferMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshVertexMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshIndexBufferMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshIndexBufferMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshIndexBufferMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_hand_tracking_mesh.HandMeshIndexBufferMSFT


-- | <h1>Name</h1>
--   
--   XR_MSFT_controller_model - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_controller_model</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   56
--   
--   <h1>Revision</h1>
--   
--   2
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>MAX_CONTROLLER_MODEL_NODE_NAME_SIZE_MSFT</a>,
--   <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrControllerModelKeyMSFT</a>,
--   <a>ControllerModelKeyStateMSFT</a>,
--   <a>ControllerModelNodePropertiesMSFT</a>,
--   <a>ControllerModelNodeStateMSFT</a>,
--   <a>ControllerModelPropertiesMSFT</a>, <a>ControllerModelStateMSFT</a>,
--   <a>getControllerModelKeyMSFT</a>,
--   <a>getControllerModelPropertiesMSFT</a>,
--   <a>getControllerModelStateMSFT</a>, <a>loadControllerModelMSFT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_controller_model

-- | xrGetControllerModelKeyMSFT - Retrieve the model key for the
--   controller
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getControllerModelKeyMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>controllerModelKeyState</tt> <i>must</i> be a pointer to an
--   <a>ControllerModelKeyStateMSFT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li><li><a>ERROR_PATH_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ControllerModelKeyStateMSFT</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>Session</a>
getControllerModelKeyMSFT :: forall io. MonadIO io => Session -> ("topLevelUserPath" ::: Path) -> io ControllerModelKeyStateMSFT

-- | xrLoadControllerModelMSFT - Load controller render model
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is the specified <a>Session</a>.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>modelKey</tt> is the model key corresponding to the controller
--   render model being queried.</li>
--   <li><tt>bufferCapacityInput</tt> is the capacity of the
--   <tt>buffer</tt> array, or 0 to indicate a request to retrieve the
--   required capacity.</li>
--   <li><tt>bufferCountOutput</tt> filled in by the runtime with the count
--   of elements in <tt>buffer</tt> array, or returns the required capacity
--   in the case that <tt>bufferCapacityInput</tt> is 0.</li>
--   <li><tt>buffer</tt> is a pointer to an application-allocated array of
--   the model for the device that will be filled with the <tt>uint8_t</tt>
--   values by the runtime. It <i>can</i> be <tt>NULL</tt> if
--   <tt>bufferCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>buffer</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   The <a>loadControllerModelMSFT</a> function <i>may</i> be a slow
--   operation and therefore <i>should</i> be invoked from a non-timing
--   critical thread.
--   
--   If the input <tt>modelKey</tt> is invalid, i.e. it is
--   <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a> or not a key returned from
--   <a>ControllerModelKeyStateMSFT</a>, the runtime <i>must</i> return
--   <a>ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>loadControllerModelMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>bufferCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>bufferCapacityInput</tt> is not <tt>0</tt>, <tt>buffer</tt>
--   <i>must</i> be a pointer to an array of <tt>bufferCapacityInput</tt>
--   <tt>uint8_t</tt> values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrControllerModelKeyMSFT</a>,
--   <a>Session</a>
loadControllerModelMSFT :: forall io. MonadIO io => Session -> ControllerModelKeyMSFT -> io ("buffer" ::: Vector Word8)

-- | xrGetControllerModelPropertiesMSFT - Get controller model properties
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The runtime <i>must</i> return the same data in
--   <a>ControllerModelPropertiesMSFT</a> for a valid <tt>modelKey</tt>.
--   Therefore, the application <i>can</i> cache the returned
--   <a>ControllerModelPropertiesMSFT</a> using <tt>modelKey</tt> and reuse
--   the data for each frame.
--   
--   If the input <tt>modelKey</tt> is invalid, i.e. it is
--   <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a> or not a key returned from
--   <a>ControllerModelKeyStateMSFT</a>, the runtime <i>must</i> return
--   <a>ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getControllerModelPropertiesMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>properties</tt> <i>must</i> be a pointer to an
--   <a>ControllerModelPropertiesMSFT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrControllerModelKeyMSFT</a>,
--   <a>ControllerModelPropertiesMSFT</a>, <a>Session</a>
getControllerModelPropertiesMSFT :: forall io. MonadIO io => Session -> ControllerModelKeyMSFT -> io ControllerModelPropertiesMSFT

-- | xrGetControllerModelStateMSFT - Get controller model state
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The runtime <i>may</i> return different state for a model key after
--   each call to <a>syncActions</a>, which represents the latest state of
--   the user interactions.
--   
--   If the input <tt>modelKey</tt> is invalid, i.e. it is
--   <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a> or not a key returned from
--   <a>ControllerModelKeyStateMSFT</a>, the runtime <i>must</i> return
--   <a>ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getControllerModelStateMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>state</tt> <i>must</i> be a pointer to an
--   <a>ControllerModelStateMSFT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_CONTROLLER_MODEL_KEY_INVALID_MSFT</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrControllerModelKeyMSFT</a>,
--   <a>ControllerModelStateMSFT</a>, <a>Session</a>
getControllerModelStateMSFT :: forall io. MonadIO io => Session -> ControllerModelKeyMSFT -> io ControllerModelStateMSFT

-- | XrControllerModelKeyMSFT - Controller renderable model key
--   
--   <h1>Description</h1>
--   
--   The controller model key used to retrieve the data for the renderable
--   controller model and associated properties and state.
--   
--   <h1>See Also</h1>
--   
--   <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a>,
--   <a>ControllerModelKeyStateMSFT</a>,
--   <a>getControllerModelPropertiesMSFT</a>,
--   <a>getControllerModelStateMSFT</a>, <a>loadControllerModelMSFT</a>
newtype ControllerModelKeyMSFT
ControllerModelKeyMSFT :: Word64 -> ControllerModelKeyMSFT

-- | XrControllerModelKeyStateMSFT - The model key state for a controller
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <tt>modelKey</tt> value for the session represents a unique
--   controller model that can be retrieved from
--   <a>loadControllerModelMSFT</a> function. Therefore, the application
--   <i>can</i> use <tt>modelKey</tt> to cache the returned data from
--   <a>loadControllerModelMSFT</a> for the session.
--   
--   A <tt>modelKey</tt> value of <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a>,
--   represents an invalid model key and indicates there is no controller
--   model yet available. The application <i>should</i> keep calling
--   <a>getControllerModelKeyMSFT</a> because the model <i>may</i> become
--   available at a later point.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>ControllerModelKeyStateMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_CONTROLLER_MODEL_KEY_STATE_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrControllerModelKeyMSFT</a>,
--   <a>StructureType</a>, <a>getControllerModelKeyMSFT</a>
data ControllerModelKeyStateMSFT
ControllerModelKeyStateMSFT :: ControllerModelKeyMSFT -> ControllerModelKeyStateMSFT

-- | <tt>modelKey</tt> is the model key corresponding to the controller
--   render model being queried.
[$sel:modelKey:ControllerModelKeyStateMSFT] :: ControllerModelKeyStateMSFT -> ControllerModelKeyMSFT

-- | XrControllerModelNodePropertiesMSFT - Describes the controller model
--   node properties
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The node can be located in the glTF node hierarchy by finding the
--   node(s) with the matching node name and parent node name. If the
--   <tt>parentNodeName</tt> is empty, the matching will be solely based on
--   the <tt>nodeName</tt>.
--   
--   If there are multiple nodes in the glTF file matches the condition
--   above, the first matching node using depth-first traversal in the glTF
--   scene <i>should</i> be animated and the rest <i>should</i> be ignored.
--   
--   The runtime <i>must</i> not return any <tt>nodeName</tt> or
--   <tt>parentName</tt> that doesn’t match any gltTF nodes in the
--   corresponding controller model.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>ControllerModelNodePropertiesMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_CONTROLLER_MODEL_NODE_PROPERTIES_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>parentNodeName</tt> <i>must</i> be a null-terminated UTF-8
--   string whose length is less than or equal to
--   XR_MAX_CONTROLLER_MODEL_NODE_NAME_SIZE_MSFT</li>
--   <li><tt>nodeName</tt> <i>must</i> be a null-terminated UTF-8 string
--   whose length is less than or equal to
--   XR_MAX_CONTROLLER_MODEL_NODE_NAME_SIZE_MSFT</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ControllerModelPropertiesMSFT</a>, <a>StructureType</a>,
--   <a>getControllerModelPropertiesMSFT</a>,
--   <a>loadControllerModelMSFT</a>
data ControllerModelNodePropertiesMSFT
ControllerModelNodePropertiesMSFT :: ByteString -> ByteString -> ControllerModelNodePropertiesMSFT

-- | <tt>parentNodeName</tt> is the name of the parent node in the provided
--   glTF file. The parent name <i>may</i> be empty if it should not be
--   used to locate this node.
[$sel:parentNodeName:ControllerModelNodePropertiesMSFT] :: ControllerModelNodePropertiesMSFT -> ByteString

-- | <tt>nodeName</tt> is the name of this node in the provided glTF file.
[$sel:nodeName:ControllerModelNodePropertiesMSFT] :: ControllerModelNodePropertiesMSFT -> ByteString

-- | XrControllerModelPropertiesMSFT - Describes the properties of a
--   controller model
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>type</tt> is the <a>StructureType</a> of this structure.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure
--   in a structure chain.</li>
--   <li><tt>nodeCapacityInput</tt> is the capacity of the
--   <tt>nodeProperties</tt> array, or 0 to indicate a request to retrieve
--   the required capacity.</li>
--   <li><tt>nodeCountOutput</tt> filled in by the runtime with the count
--   of elements in <tt>nodeProperties</tt> array, or returns the required
--   capacity in the case that <tt>nodeCapacityInput</tt> is 0.</li>
--   <li><tt>nodeProperties</tt> is a pointer to an application-allocated
--   array that will be filled with the
--   <a>ControllerModelNodePropertiesMSFT</a> values. It <i>can</i> be
--   <tt>NULL</tt> if <tt>nodeCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>nodeProperties</tt>
--   size.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>ControllerModelPropertiesMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_CONTROLLER_MODEL_PROPERTIES_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li>If <tt>nodeCapacityInput</tt> is not <tt>0</tt>,
--   <tt>nodeProperties</tt> <i>must</i> be a pointer to an array of
--   <tt>nodeCapacityInput</tt> <a>ControllerModelNodePropertiesMSFT</a>
--   structures</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ControllerModelNodePropertiesMSFT</a>, <a>StructureType</a>,
--   <a>getControllerModelPropertiesMSFT</a>,
--   <a>loadControllerModelMSFT</a>
data ControllerModelPropertiesMSFT
ControllerModelPropertiesMSFT :: Word32 -> Word32 -> Ptr ControllerModelNodePropertiesMSFT -> ControllerModelPropertiesMSFT
[$sel:nodeCapacityInput:ControllerModelPropertiesMSFT] :: ControllerModelPropertiesMSFT -> Word32
[$sel:nodeCountOutput:ControllerModelPropertiesMSFT] :: ControllerModelPropertiesMSFT -> Word32
[$sel:nodeProperties:ControllerModelPropertiesMSFT] :: ControllerModelPropertiesMSFT -> Ptr ControllerModelNodePropertiesMSFT

-- | XrControllerModelNodeStateMSFT - Describes the state of a node in a
--   controller model
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The state is corresponding to the glTF node identified by the
--   <tt>nodeName</tt> and <tt>nodeParentName</tt> of the node property at
--   the same array index in the <tt>nodeProperties</tt> in
--   <a>ControllerModelPropertiesMSFT</a>.
--   
--   The <tt>nodePose</tt> is based on the user’s interaction on the
--   controller at the latest <a>syncActions</a>, represented as the
--   <a>Posef</a> of the node in it’s parent node space.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>ControllerModelNodeStateMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_CONTROLLER_MODEL_NODE_STATE_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ControllerModelStateMSFT</a>, <a>Posef</a>, <a>StructureType</a>,
--   <a>getControllerModelStateMSFT</a>
data ControllerModelNodeStateMSFT
ControllerModelNodeStateMSFT :: Posef -> ControllerModelNodeStateMSFT

-- | <tt>nodePose</tt> is an <a>Posef</a> of the node in its parent node
--   space.
[$sel:nodePose:ControllerModelNodeStateMSFT] :: ControllerModelNodeStateMSFT -> Posef

-- | XrControllerModelStateMSFT - Describes the state of a controller model
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>type</tt> is the <a>StructureType</a> of this structure.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure
--   in a structure chain.</li>
--   <li><tt>nodeCapacityInput</tt> is the capacity of the
--   <tt>nodeStates</tt> array, or 0 to indicate a request to retrieve the
--   required capacity.</li>
--   <li><tt>nodeCountOutput</tt> filled in by the runtime with the count
--   of elements in <tt>nodeStates</tt> array, or returns the required
--   capacity in the case that <tt>nodeCapacityInput</tt> is 0.</li>
--   <li><tt>nodeStates</tt> is a pointer to an application-allocated array
--   that will be filled with the <a>ControllerModelNodeStateMSFT</a>
--   values. It <i>can</i> be <tt>NULL</tt> if <tt>sourceCapacityInput</tt>
--   is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>nodeStates</tt> size.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>ControllerModelStateMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_CONTROLLER_MODEL_STATE_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li>If <tt>nodeCapacityInput</tt> is not <tt>0</tt>,
--   <tt>nodeStates</tt> <i>must</i> be a pointer to an array of
--   <tt>nodeCapacityInput</tt> <a>ControllerModelNodeStateMSFT</a>
--   structures</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ControllerModelNodeStateMSFT</a>, <a>StructureType</a>,
--   <a>getControllerModelStateMSFT</a>
data ControllerModelStateMSFT
ControllerModelStateMSFT :: Word32 -> Word32 -> Ptr ControllerModelNodeStateMSFT -> ControllerModelStateMSFT
[$sel:nodeCapacityInput:ControllerModelStateMSFT] :: ControllerModelStateMSFT -> Word32
[$sel:nodeCountOutput:ControllerModelStateMSFT] :: ControllerModelStateMSFT -> Word32
[$sel:nodeStates:ControllerModelStateMSFT] :: ControllerModelStateMSFT -> Ptr ControllerModelNodeStateMSFT
type MSFT_controller_model_SPEC_VERSION = 2
pattern MSFT_controller_model_SPEC_VERSION :: forall a. Integral a => a
type MSFT_CONTROLLER_MODEL_EXTENSION_NAME = "XR_MSFT_controller_model"
pattern MSFT_CONTROLLER_MODEL_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
type MAX_CONTROLLER_MODEL_NODE_NAME_SIZE_MSFT = 64
pattern MAX_CONTROLLER_MODEL_NODE_NAME_SIZE_MSFT :: forall a. Integral a => a
type NULL_CONTROLLER_MODEL_KEY_MSFT = 0

-- | XR_NULL_CONTROLLER_MODEL_KEY_MSFT - The value representing an invalid
--   model key
--   
--   <h1>Description</h1>
--   
--   <a>NULL_CONTROLLER_MODEL_KEY_MSFT</a> defines an invalid model key
--   value.
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrControllerModelKeyMSFT</a>
pattern NULL_CONTROLLER_MODEL_KEY_MSFT :: forall a. Integral a => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelStateMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelPropertiesMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyStateMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyMSFT
instance GHC.Classes.Ord OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyStateMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodePropertiesMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelPropertiesMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodeStateMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelStateMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodePropertiesMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodePropertiesMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelStateMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelStateMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelStateMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelStateMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodeStateMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodeStateMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodeStateMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodeStateMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelPropertiesMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelPropertiesMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelPropertiesMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelPropertiesMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodePropertiesMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelNodePropertiesMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyStateMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyStateMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyStateMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyStateMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_controller_model.ControllerModelKeyMSFT


-- | <h1>Name</h1>
--   
--   XR_EXT_hand_tracking - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_hand_tracking</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   52
--   
--   <h1>Revision</h1>
--   
--   2
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HAND_JOINT_COUNT_EXT</a>, <a>HandEXT</a>, <a>HandJointEXT</a>,
--   <a>HandJointLocationEXT</a>, <a>HandJointLocationsEXT</a>,
--   <a>HandJointSetEXT</a>, <a>HandJointVelocitiesEXT</a>,
--   <a>HandJointVelocityEXT</a>, <a>HandJointsLocateInfoEXT</a>,
--   <a>HandTrackerCreateInfoEXT</a>,
--   <a>SystemHandTrackingPropertiesEXT</a>, <a>createHandTrackerEXT</a>,
--   <a>destroyHandTrackerEXT</a>, <a>locateHandJointsEXT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_hand_tracking

-- | xrCreateHandTrackerEXT - Create a hand joints handle.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createHandTrackerEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>HandTrackerCreateInfoEXT</a> structure</li>
--   <li><tt>handTracker</tt> <i>must</i> be a pointer to an
--   <a>HandTrackerEXT</a> handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_FEATURE_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   If the system does not support hand tracking, runtime <i>must</i>
--   return <a>ERROR_FEATURE_UNSUPPORTED</a> from
--   <a>createHandTrackerEXT</a>. In this case, the runtime <i>must</i>
--   return <a>FALSE</a> for <tt>supportsHandTracking</tt> in
--   <a>SystemHandTrackingPropertiesEXT</a> when the function
--   <a>getSystemProperties</a> is called, so that the application
--   <i>can</i> avoid creating a hand tracker.
--   
--   <h1>See Also</h1>
--   
--   <a>HandTrackerCreateInfoEXT</a>, <a>HandTrackerEXT</a>, <a>Session</a>
createHandTrackerEXT :: forall a io. (Extendss HandTrackerCreateInfoEXT a, PokeChain a, MonadIO io) => Session -> HandTrackerCreateInfoEXT a -> io (Result, HandTrackerEXT)

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createHandTrackerEXT</a> and <a>destroyHandTrackerEXT</a>
--   
--   To ensure that <a>destroyHandTrackerEXT</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withHandTrackerEXT :: forall a io r. (Extendss HandTrackerCreateInfoEXT a, PokeChain a, MonadIO io) => Session -> HandTrackerCreateInfoEXT a -> (io (Result, HandTrackerEXT) -> ((Result, HandTrackerEXT) -> io ()) -> r) -> r

-- | xrDestroyHandTrackerEXT - Destroy a hand joints handle
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>destroyHandTrackerEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>handTracker</tt> <i>must</i> be a valid <a>HandTrackerEXT</a>
--   handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>handTracker</tt>, and any child handles, <i>must</i>
--   be externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandTrackerEXT</a>
destroyHandTrackerEXT :: forall io. MonadIO io => HandTrackerEXT -> io ()

-- | xrLocateHandJointsEXT - Locate hand joint locations
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>locateHandJointsEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>handTracker</tt> <i>must</i> be a valid <a>HandTrackerEXT</a>
--   handle</li>
--   <li><tt>locateInfo</tt> <i>must</i> be a pointer to a valid
--   <a>HandJointsLocateInfoEXT</a> structure</li>
--   <li><tt>locations</tt> <i>must</i> be a pointer to an
--   <a>HandJointLocationsEXT</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointLocationsEXT</a>, <a>HandJointsLocateInfoEXT</a>,
--   <a>HandTrackerEXT</a>
locateHandJointsEXT :: forall a io. (Extendss HandJointLocationsEXT a, PokeChain a, PeekChain a, MonadIO io) => HandTrackerEXT -> HandJointsLocateInfoEXT -> io (Result, HandJointLocationsEXT a)

-- | XrSystemHandTrackingPropertiesEXT - System property for hand tracking
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SystemHandTrackingPropertiesEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SYSTEM_HAND_TRACKING_PROPERTIES_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   If a runtime returns <a>FALSE</a> for <tt>supportsHandTracking</tt>,
--   the runtime <i>must</i> return <a>ERROR_FEATURE_UNSUPPORTED</a> from
--   <a>createHandTrackerEXT</a>.
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>
data SystemHandTrackingPropertiesEXT
SystemHandTrackingPropertiesEXT :: Bool -> SystemHandTrackingPropertiesEXT

-- | <tt>supportsHandTracking</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   indicating if current system is capable of hand tracking input.
[$sel:supportsHandTracking:SystemHandTrackingPropertiesEXT] :: SystemHandTrackingPropertiesEXT -> Bool

-- | XrHandTrackerCreateInfoEXT - Information to create a hand joints
--   handle
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandTrackerCreateInfoEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HAND_TRACKER_CREATE_INFO_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a>. See also:
--   <a>HandPoseTypeInfoMSFT</a></li>
--   <li><tt>hand</tt> <i>must</i> be a valid <a>HandEXT</a> value</li>
--   <li><tt>handJointSet</tt> <i>must</i> be a valid
--   <a>HandJointSetEXT</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandEXT</a>, <a>HandJointSetEXT</a>, <a>StructureType</a>,
--   <a>createHandTrackerEXT</a>
data HandTrackerCreateInfoEXT (es :: [Type])
HandTrackerCreateInfoEXT :: Chain es -> HandEXT -> HandJointSetEXT -> HandTrackerCreateInfoEXT (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR or this
--   extension.
[$sel:next:HandTrackerCreateInfoEXT] :: HandTrackerCreateInfoEXT (es :: [Type]) -> Chain es

-- | <tt>hand</tt> is an <a>HandEXT</a> which describes which hand the
--   tracker is tracking.
[$sel:hand:HandTrackerCreateInfoEXT] :: HandTrackerCreateInfoEXT (es :: [Type]) -> HandEXT

-- | <tt>handJointSet</tt> is an <a>HandJointSetEXT</a> describe the set of
--   hand joints to retrieve.
[$sel:handJointSet:HandTrackerCreateInfoEXT] :: HandTrackerCreateInfoEXT (es :: [Type]) -> HandJointSetEXT

-- | XrHandJointsLocateInfoEXT - Describes the information to locate hand
--   joints
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandJointsLocateInfoEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HAND_JOINTS_LOCATE_INFO_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>baseSpace</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Space</a>, <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>locateHandJointsEXT</a>
data HandJointsLocateInfoEXT
HandJointsLocateInfoEXT :: Ptr Space_T -> Time -> HandJointsLocateInfoEXT

-- | <tt>baseSpace</tt> is an <a>Space</a> within which the returned hand
--   joint locations will be represented.
[$sel:baseSpace:HandJointsLocateInfoEXT] :: HandJointsLocateInfoEXT -> Ptr Space_T

-- | <tt>time</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   at which to locate the hand joints.
[$sel:time:HandJointsLocateInfoEXT] :: HandJointsLocateInfoEXT -> Time

-- | XrHandJointLocationEXT - Describes the location and radius of a hand
--   joint
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If the returned <tt>locationFlags</tt> has
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> set, the returned radius
--   <i>must</i> be a positive value.
--   
--   If the returned <tt>locationFlags</tt> has
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> unset, the returned
--   radius value is undefined and should be avoided.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandJointLocationEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>locationFlags</tt> <i>must</i> be a valid combination of
--   <a>XrSpaceLocationFlagBits</a> values</li>
--   <li><tt>locationFlags</tt> <i>must</i> not be <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointLocationsEXT</a>, <a>Posef</a>, <a>SpaceLocationFlags</a>
data HandJointLocationEXT
HandJointLocationEXT :: SpaceLocationFlags -> Posef -> Float -> HandJointLocationEXT

-- | <tt>locationFlags</tt> is a bitfield, with bit masks defined in
--   <a>XrSpaceLocationFlagBits</a>, to indicate which members contain
--   valid data. If none of the bits are set, no other fields in this
--   structure <i>should</i> be considered to be valid or meaningful.
[$sel:locationFlags:HandJointLocationEXT] :: HandJointLocationEXT -> SpaceLocationFlags

-- | <tt>pose</tt> is an <a>Posef</a> defining the position and orientation
--   of the origin of a hand joint within the reference frame of the
--   corresponding <a>HandJointsLocateInfoEXT</a>::<tt>baseSpace</tt>.
[$sel:pose:HandJointLocationEXT] :: HandJointLocationEXT -> Posef

-- | <tt>radius</tt> is a <tt>float</tt> value radius of the corresponding
--   joint in units of meters.
[$sel:radius:HandJointLocationEXT] :: HandJointLocationEXT -> Float

-- | XrHandJointVelocityEXT - Describes the velocity of a hand joint
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandJointVelocityEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>velocityFlags</tt> <i>must</i> be a valid combination of
--   <a>XrSpaceVelocityFlagBits</a> values</li>
--   <li><tt>velocityFlags</tt> <i>must</i> not be <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointVelocitiesEXT</a>, <a>SpaceVelocityFlags</a>,
--   <a>Vector3f</a>
data HandJointVelocityEXT
HandJointVelocityEXT :: SpaceVelocityFlags -> Vector3f -> Vector3f -> HandJointVelocityEXT

-- | <tt>velocityFlags</tt> is a bitfield, with bit masks defined in
--   <a>XrSpaceVelocityFlagBits</a>, to indicate which members contain
--   valid data. If none of the bits are set, no other fields in this
--   structure <i>should</i> be considered to be valid or meaningful.
[$sel:velocityFlags:HandJointVelocityEXT] :: HandJointVelocityEXT -> SpaceVelocityFlags

-- | <tt>linearVelocity</tt> is the relative linear velocity of the hand
--   joint with respect to and expressed in the reference frame of the
--   corresponding <a>HandJointsLocateInfoEXT</a>::<tt>baseSpace</tt>, in
--   units of meters per second.
[$sel:linearVelocity:HandJointVelocityEXT] :: HandJointVelocityEXT -> Vector3f

-- | <tt>angularVelocity</tt> is the relative angular velocity of the hand
--   joint with respect to the corresponding
--   <a>HandJointsLocateInfoEXT</a>::<tt>baseSpace</tt>. The vector’s
--   direction is expressed in the reference frame of the corresponding
--   <a>HandJointsLocateInfoEXT</a>::<tt>baseSpace</tt> and is parallel to
--   the rotational axis of the hand joint. The vector’s magnitude is the
--   relative angular speed of the hand joint in radians per second. The
--   vector follows the right-hand rule for torque/rotation.
[$sel:angularVelocity:HandJointVelocityEXT] :: HandJointVelocityEXT -> Vector3f

-- | XrHandJointLocationsEXT - Returns the hand joint locations
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The application <i>must</i> allocate the memory for the output array
--   <tt>jointLocations</tt> that can contain at least <tt>jointCount</tt>
--   of <a>HandJointLocationEXT</a>.
--   
--   The application <i>must</i> set <tt>jointCount</tt> as described by
--   the <a>HandJointSetEXT</a> when creating the <a>HandTrackerEXT</a>
--   otherwise the runtime <i>must</i> return
--   <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   The runtime <i>must</i> update the <tt>jointLocations</tt> array
--   ordered so that the application can index elements using the
--   corresponding hand joint enum (e.g. <a>HandJointEXT</a>) as described
--   by <a>HandJointSetEXT</a> when creating the <a>HandTrackerEXT</a>. For
--   example, when the <a>HandTrackerEXT</a> is created with
--   <a>HAND_JOINT_SET_DEFAULT_EXT</a>, the application <i>must</i> set the
--   <tt>jointCount</tt> to <a>HAND_JOINT_COUNT_EXT</a>, and the runtime
--   <i>must</i> fill the <tt>jointLocations</tt> array ordered so that it
--   may be indexed by the <a>HandJointEXT</a> enum.
--   
--   If the returned <tt>isActive</tt> is true, the runtime <i>must</i>
--   return all joint locations with both
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> and
--   <tt>XR_SPACE_LOCATION_ORIENTATION_VALID_BIT</tt> set. Although, in
--   this case, some joint space locations <i>may</i> be untracked (i.e.
--   <tt>XR_SPACE_LOCATION_POSITION_TRACKED_BIT</tt> or
--   <tt>XR_SPACE_LOCATION_ORIENTATION_TRACKED_BIT</tt> is unset).
--   
--   If the returned <tt>isActive</tt> is false, it indicates the hand
--   tracker did not detect the hand input or the application lost input
--   focus. In this case, the runtime <i>must</i> return all
--   <tt>jointLocations</tt> with neither
--   <tt>XR_SPACE_LOCATION_POSITION_VALID_BIT</tt> nor
--   <tt>XR_SPACE_LOCATION_ORIENTATION_VALID_BIT</tt> set.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandJointLocationsEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HAND_JOINT_LOCATIONS_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a>. See also:
--   <a>HandJointVelocitiesEXT</a></li>
--   <li><tt>jointLocations</tt> <i>must</i> be a pointer to an array of
--   <tt>jointCount</tt> <a>HandJointLocationEXT</a> structures</li>
--   <li>The <tt>jointCount</tt> parameter <i>must</i> be greater than
--   <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>HandJointLocationEXT</a>, <a>StructureType</a>,
--   <a>locateHandJointsEXT</a>
data HandJointLocationsEXT (es :: [Type])
HandJointLocationsEXT :: Chain es -> Bool -> Word32 -> Ptr HandJointLocationEXT -> HandJointLocationsEXT (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain, such as <a>HandJointVelocitiesEXT</a>.
[$sel:next:HandJointLocationsEXT] :: HandJointLocationsEXT (es :: [Type]) -> Chain es

-- | <tt>isActive</tt> is a
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   indicating if the hand tracker is actively tracking.
[$sel:isActive:HandJointLocationsEXT] :: HandJointLocationsEXT (es :: [Type]) -> Bool

-- | <tt>jointCount</tt> is a <tt>uint32_t</tt> describing the count of
--   elements in <tt>jointLocations</tt> array.
[$sel:jointCount:HandJointLocationsEXT] :: HandJointLocationsEXT (es :: [Type]) -> Word32

-- | <tt>jointLocations</tt> is an array of <a>HandJointLocationEXT</a>
--   receiving the returned hand joint locations.
[$sel:jointLocations:HandJointLocationsEXT] :: HandJointLocationsEXT (es :: [Type]) -> Ptr HandJointLocationEXT

-- | XrHandJointVelocitiesEXT - Returns the hand joint velocities
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The application <i>must</i> allocate the memory for the output array
--   <tt>jointVelocities</tt> that can contain at least <tt>jointCount</tt>
--   of <a>HandJointVelocityEXT</a>.
--   
--   The application <i>must</i> input <tt>jointCount</tt> as described by
--   the <a>HandJointSetEXT</a> when creating the <a>HandTrackerEXT</a>.
--   Otherwise, the runtime <i>must</i> return
--   <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   The runtime <i>must</i> update the <tt>jointVelocities</tt> array in
--   the order so that the application can index elements using the
--   corresponding hand joint enum (e.g. <a>HandJointEXT</a>) as described
--   by the <a>HandJointSetEXT</a> when creating the <a>HandTrackerEXT</a>.
--   For example, when the <a>HandTrackerEXT</a> is created with
--   <a>HAND_JOINT_SET_DEFAULT_EXT</a>, the application <i>must</i> set the
--   <tt>jointCount</tt> to <a>HAND_JOINT_COUNT_EXT</a>, and the returned
--   <tt>jointVelocities</tt> array <i>must</i> be ordered to be indexed by
--   enum <a>HandJointEXT</a> enum.
--   
--   If the returned <a>HandJointLocationsEXT</a>::<tt>isActive</tt> is
--   false, it indicates the hand tracker did not detect a hand input or
--   the application lost input focus. In this case, the runtime
--   <i>must</i> return all <tt>jointVelocities</tt> with neither
--   <tt>XR_SPACE_VELOCITY_LINEAR_VALID_BIT</tt> nor
--   <tt>XR_SPACE_VELOCITY_ANGULAR_VALID_BIT</tt> set.
--   
--   If an <a>HandJointVelocitiesEXT</a> structure is chained to
--   <a>HandJointLocationsEXT</a>::<tt>next</tt>, the returned
--   <a>HandJointLocationsEXT</a>::<tt>isActive</tt> is true, and the
--   velocity is observed or can be calculated by the runtime, the runtime
--   <i>must</i> fill in the linear velocity of each hand joint within the
--   reference frame of <tt>baseSpace</tt> and set the
--   <tt>XR_SPACE_VELOCITY_LINEAR_VALID_BIT</tt>. Similarly, if an
--   <a>HandJointVelocitiesEXT</a> structure is chained to
--   <a>HandJointLocationsEXT</a>::<tt>next</tt>, the returned
--   <a>HandJointLocationsEXT</a>::<tt>isActive</tt> is true, and the
--   <i>angular velocity</i> is observed or can be calculated by the
--   runtime, the runtime <i>must</i> fill in the angular velocity of each
--   joint within the reference frame of <tt>baseSpace</tt> and set the
--   <tt>XR_SPACE_VELOCITY_ANGULAR_VALID_BIT</tt>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>HandJointVelocitiesEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_HAND_JOINT_VELOCITIES_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>jointVelocities</tt> <i>must</i> be a pointer to an array of
--   <tt>jointCount</tt> <a>HandJointVelocityEXT</a> structures</li>
--   <li>The <tt>jointCount</tt> parameter <i>must</i> be greater than
--   <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointLocationsEXT</a>, <a>HandJointVelocityEXT</a>,
--   <a>StructureType</a>
data HandJointVelocitiesEXT
HandJointVelocitiesEXT :: Word32 -> Ptr HandJointVelocityEXT -> HandJointVelocitiesEXT

-- | <tt>jointCount</tt> is a <tt>uint32_t</tt> describing the number of
--   elements in <tt>jointVelocities</tt> array.
[$sel:jointCount:HandJointVelocitiesEXT] :: HandJointVelocitiesEXT -> Word32

-- | <tt>jointVelocities</tt> is an array of <a>HandJointVelocityEXT</a>
--   receiving the returned hand joint velocities.
[$sel:jointVelocities:HandJointVelocitiesEXT] :: HandJointVelocitiesEXT -> Ptr HandJointVelocityEXT

-- | XrHandEXT - Describes which hand the tracker is tracking.
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>HandTrackerCreateInfoEXT</a>
newtype HandEXT
HandEXT :: Int32 -> HandEXT

-- | <a>HAND_LEFT_EXT</a> specifies the hand tracker will be tracking the
--   user’s left hand.
pattern HAND_LEFT_EXT :: HandEXT

-- | <a>HAND_RIGHT_EXT</a> specifies the hand tracker will be tracking the
--   user’s right hand.
pattern HAND_RIGHT_EXT :: HandEXT

-- | XrHandJointEXT - The name of hand joints that can be tracked
--   
--   <h1>See Also</h1>
--   
--   No cross-references are available
newtype HandJointEXT
HandJointEXT :: Int32 -> HandJointEXT
pattern HAND_JOINT_PALM_EXT :: HandJointEXT
pattern HAND_JOINT_WRIST_EXT :: HandJointEXT
pattern HAND_JOINT_THUMB_METACARPAL_EXT :: HandJointEXT
pattern HAND_JOINT_THUMB_PROXIMAL_EXT :: HandJointEXT
pattern HAND_JOINT_THUMB_DISTAL_EXT :: HandJointEXT
pattern HAND_JOINT_THUMB_TIP_EXT :: HandJointEXT
pattern HAND_JOINT_INDEX_METACARPAL_EXT :: HandJointEXT
pattern HAND_JOINT_INDEX_PROXIMAL_EXT :: HandJointEXT
pattern HAND_JOINT_INDEX_INTERMEDIATE_EXT :: HandJointEXT
pattern HAND_JOINT_INDEX_DISTAL_EXT :: HandJointEXT
pattern HAND_JOINT_INDEX_TIP_EXT :: HandJointEXT
pattern HAND_JOINT_MIDDLE_METACARPAL_EXT :: HandJointEXT
pattern HAND_JOINT_MIDDLE_PROXIMAL_EXT :: HandJointEXT
pattern HAND_JOINT_MIDDLE_INTERMEDIATE_EXT :: HandJointEXT
pattern HAND_JOINT_MIDDLE_DISTAL_EXT :: HandJointEXT
pattern HAND_JOINT_MIDDLE_TIP_EXT :: HandJointEXT
pattern HAND_JOINT_RING_METACARPAL_EXT :: HandJointEXT
pattern HAND_JOINT_RING_PROXIMAL_EXT :: HandJointEXT
pattern HAND_JOINT_RING_INTERMEDIATE_EXT :: HandJointEXT
pattern HAND_JOINT_RING_DISTAL_EXT :: HandJointEXT
pattern HAND_JOINT_RING_TIP_EXT :: HandJointEXT
pattern HAND_JOINT_LITTLE_METACARPAL_EXT :: HandJointEXT
pattern HAND_JOINT_LITTLE_PROXIMAL_EXT :: HandJointEXT
pattern HAND_JOINT_LITTLE_INTERMEDIATE_EXT :: HandJointEXT
pattern HAND_JOINT_LITTLE_DISTAL_EXT :: HandJointEXT
pattern HAND_JOINT_LITTLE_TIP_EXT :: HandJointEXT

-- | XrHandJointSetEXT - The set of hand joints to track.
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>HandTrackerCreateInfoEXT</a>
newtype HandJointSetEXT
HandJointSetEXT :: Int32 -> HandJointSetEXT

-- | <a>HAND_JOINT_SET_DEFAULT_EXT</a> indicates that the created
--   <a>HandTrackerEXT</a> tracks the set of hand joints described by
--   <a>HandJointEXT</a> enum, i.e. the <a>locateHandJointsEXT</a> function
--   returns an array of joint locations with the count of
--   <a>HAND_JOINT_COUNT_EXT</a> and can be indexed using
--   <a>HandJointEXT</a>.
pattern HAND_JOINT_SET_DEFAULT_EXT :: HandJointSetEXT
type EXT_hand_tracking_SPEC_VERSION = 2
pattern EXT_hand_tracking_SPEC_VERSION :: forall a. Integral a => a
type EXT_HAND_TRACKING_EXTENSION_NAME = "XR_EXT_hand_tracking"
pattern EXT_HAND_TRACKING_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a

-- | XrHandTrackerEXT - Represents a tracker for a hand joints.
--   
--   <h1>Description</h1>
--   
--   An application creates separate <a>HandTrackerEXT</a> handles for left
--   and right hands. This handle can be used to locate hand joints using
--   <a>locateHandJointsEXT</a> function.
--   
--   A hand tracker provides accurate fidelity to the user’s actual hand
--   shape. When the hand tracking input requires the user to be holding a
--   controller in their hand, the hand tracking input will appear as the
--   user holding the controller. This input can be used to render the hand
--   shape together with rendering the controller in the hand.
--   
--   <h1>See Also</h1>
--   
--   <a>createHandMeshSpaceMSFT</a>, <a>createHandTrackerEXT</a>,
--   <a>destroyHandTrackerEXT</a>, <a>locateHandJointsEXT</a>,
--   <a>updateHandMeshMSFT</a>
data HandTrackerEXT
HandTrackerEXT :: Ptr HandTrackerEXT_T -> InstanceCmds -> HandTrackerEXT
[$sel:handTrackerEXTHandle:HandTrackerEXT] :: HandTrackerEXT -> Ptr HandTrackerEXT_T
[$sel:instanceCmds:HandTrackerEXT] :: HandTrackerEXT -> InstanceCmds
type HAND_JOINT_COUNT_EXT = 26

-- | XR_HAND_JOINT_COUNT_EXT - The number of hand joint enums defined in
--   XrHandJointEXT
--   
--   <h1>Description</h1>
--   
--   <a>HAND_JOINT_COUNT_EXT</a> defines the number of hand joint
--   enumerants defined in <a>HandJointEXT</a>
--   
--   <h1>See Also</h1>
--   
--   <a>HandJointEXT</a>
pattern HAND_JOINT_COUNT_EXT :: forall a. Integral a => a
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.HandJointSetEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.HandJointSetEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_hand_tracking.HandJointSetEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_hand_tracking.HandJointSetEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.HandJointEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.HandJointEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_hand_tracking.HandJointEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_hand_tracking.HandJointEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.HandEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.HandEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_hand_tracking.HandEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_hand_tracking.HandEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocitiesEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_hand_tracking.HandJointsLocateInfoEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_hand_tracking.SystemHandTrackingPropertiesEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.SystemHandTrackingPropertiesEXT
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Extensions.XR_EXT_hand_tracking.HandTrackerCreateInfoEXT es)
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.HandJointsLocateInfoEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocityEXT
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationsEXT es)
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocitiesEXT
instance OpenXR.CStruct.Extends.Extensible OpenXR.Extensions.XR_EXT_hand_tracking.HandTrackerCreateInfoEXT
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Extensions.XR_EXT_hand_tracking.HandTrackerCreateInfoEXT es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Extensions.XR_EXT_hand_tracking.HandTrackerCreateInfoEXT es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Extensions.XR_EXT_hand_tracking.HandTrackerCreateInfoEXT es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Extensions.XR_EXT_hand_tracking.HandTrackerCreateInfoEXT es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Extensions.XR_EXT_hand_tracking.HandTrackerCreateInfoEXT es)
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.HandJointSetEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_hand_tracking.HandJointSetEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.HandJointEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_hand_tracking.HandJointEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_hand_tracking.HandEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_hand_tracking.HandEXT
instance OpenXR.CStruct.Extends.Extensible OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationsEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocitiesEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocitiesEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocitiesEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocitiesEXT
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationsEXT es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationsEXT es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationsEXT es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationsEXT es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationsEXT es)
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocityEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocityEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocityEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.HandJointVelocityEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.HandJointLocationEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointsLocateInfoEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_hand_tracking.HandJointsLocateInfoEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.HandJointsLocateInfoEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.HandJointsLocateInfoEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_hand_tracking.SystemHandTrackingPropertiesEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_hand_tracking.SystemHandTrackingPropertiesEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_hand_tracking.SystemHandTrackingPropertiesEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_hand_tracking.SystemHandTrackingPropertiesEXT

module OpenXR.Core10.Session

-- | xrBeginSession - Begins an XrSession
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When the application receives <a>EventDataSessionStateChanged</a>
--   event with the <a>SESSION_STATE_READY</a> state, the application
--   <i>should</i> then call <a>beginSession</a> to start rendering frames
--   for display to the user.
--   
--   After this function successfully returns, the session <a>is considered
--   to be running</a>. The application <i>should</i> then start its frame
--   loop consisting of some sequence of
--   <a>waitFrame</a>/<a>beginFrame</a>/<a>endFrame</a> calls.
--   
--   If the session <a>is already running</a> when the application calls
--   <a>beginSession</a>, the runtime <i>must</i> return error
--   <a>ERROR_SESSION_RUNNING</a>. If the session <a>is not running</a>
--   when the application calls <a>beginSession</a>, but the session is not
--   yet in the <a>SESSION_STATE_READY</a> state, the runtime <i>must</i>
--   return error <a>ERROR_SESSION_NOT_READY</a>.
--   
--   Note that a runtime <i>may</i> decide not to show the user any given
--   frame from a session at any time, for example if the user has switched
--   to a different application’s running session. The application should
--   check whether <a>waitFrame</a> returns an <a>FrameState</a> with
--   <tt>shouldRender</tt> set to true before rendering a given frame to
--   determine whether that frame will be visible to the user.
--   
--   Runtime session frame state <i>must</i> start in a reset state when a
--   session transitions to <a>running</a> so that no state is carried over
--   from when the same session was previously running.
--   
--   If <tt>primaryViewConfigurationType</tt> in <tt>beginInfo</tt> is not
--   supported by the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   used to create the <tt>session</tt>, the runtime <i>must</i> return
--   <a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_SESSION_NOT_READY</a></li><li><a>ERROR_SESSION_RUNNING</a></li><li><a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>SessionBeginInfo</a>, <a>createSession</a>,
--   <a>destroySession</a>, <a>endSession</a>
beginSession :: forall a io. (Extendss SessionBeginInfo a, PokeChain a, MonadIO io) => Session -> SessionBeginInfo a -> io Result

-- | This function will call the supplied action between calls to
--   <a>beginSession</a> and <a>endSession</a>
--   
--   Note that <a>endSession</a> is *not* called if an exception is thrown
--   by the inner action.
useSession :: forall a io r. (Extendss SessionBeginInfo a, PokeChain a, MonadIO io) => Session -> SessionBeginInfo a -> (Result -> io r) -> io (Result, r)

-- | xrEndSession - Ends an XrSession
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When the application receives <a>EventDataSessionStateChanged</a>
--   event with the <a>SESSION_STATE_STOPPING</a> state, the application
--   should stop its frame loop and then call <a>endSession</a> to end the
--   <a>running</a> session. This function signals to the runtime that the
--   application will no longer call <a>waitFrame</a>, <a>beginFrame</a> or
--   <a>endFrame</a> from any thread allowing the runtime to safely
--   transition the session to <a>SESSION_STATE_IDLE</a>. The application
--   <i>must</i> also avoid reading input state or sending haptic output
--   after calling <a>endSession</a>.
--   
--   If the session <a>is not running</a> when the application calls
--   <a>endSession</a>, the runtime <i>must</i> return error
--   <a>ERROR_SESSION_NOT_RUNNING</a>. If the session <a>is still
--   running</a> when the application calls <a>endSession</a>, but the
--   session is not yet in the <a>SESSION_STATE_STOPPING</a> state, the
--   runtime <i>must</i> return error <a>ERROR_SESSION_NOT_STOPPING</a>.
--   
--   If the application wishes to exit a running session, the application
--   can call <a>requestExitSession</a> so that the session transitions
--   from <a>SESSION_STATE_IDLE</a> to <a>SESSION_STATE_EXITING</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_NOT_STOPPING</a></li><li><a>ERROR_SESSION_NOT_RUNNING</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>beginSession</a>, <a>createSession</a>,
--   <a>destroySession</a>
endSession :: forall io. MonadIO io => Session -> io Result

-- | xrRequestExitSession - Request to exit a running session.
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   An application can only call <a>endSession</a> when the session is in
--   the <a>SESSION_STATE_STOPPING</a> state, which allows runtimes to
--   seamlessly transition from one application’s session to another. When
--   an application wishes to exit a <a>running</a> session, the
--   application can call <a>requestExitSession</a>, requesting that the
--   runtime transition through the various intermediate session states
--   including <a>SESSION_STATE_STOPPING</a> to
--   <a>SESSION_STATE_EXITING</a>.
--   
--   If <tt>session</tt> <a>is not running</a> when
--   <a>requestExitSession</a> is called, <a>ERROR_SESSION_NOT_RUNNING</a>
--   <i>must</i> be returned.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_NOT_RUNNING</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>destroySession</a>, <a>endSession</a>
requestExitSession :: forall io. MonadIO io => Session -> io Result

-- | XrSessionBeginInfo - Struct containing session begin info
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>ViewConfigurationType</a>,
--   <a>beginSession</a>
data SessionBeginInfo (es :: [Type])
SessionBeginInfo :: Chain es -> ViewConfigurationType -> SessionBeginInfo (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>SecondaryViewConfigurationSessionBeginInfoMSFT</a>
[$sel:next:SessionBeginInfo] :: SessionBeginInfo (es :: [Type]) -> Chain es

-- | <tt>primaryViewConfigurationType</tt> is the
--   <a>ViewConfigurationType</a> to use during this session to provide
--   images for the form factor’s primary displays.
--   
--   <tt>primaryViewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value
[$sel:primaryViewConfigurationType:SessionBeginInfo] :: SessionBeginInfo (es :: [Type]) -> ViewConfigurationType
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.Session.SessionBeginInfo es)
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.Session.SessionBeginInfo
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Session.SessionBeginInfo es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.Session.SessionBeginInfo es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Session.SessionBeginInfo es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.Session.SessionBeginInfo es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.Session.SessionBeginInfo es)

module OpenXR.Core10.Instance

-- | xrGetInstanceProcAddr - Gets a function pointer for an OpenXR function
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>getInstanceProcAddr</a> itself is obtained in a platform- and
--   loader- specific manner. Typically, the loader library will export
--   this function as a function symbol, so applications <i>can</i> link
--   against the loader library, or load it dynamically and look up the
--   symbol using platform-specific APIs. Loaders <i>must</i> export
--   function symbols for all core OpenXR functions. Because of this,
--   applications that use only the core OpenXR functions have no need to
--   use <a>getInstanceProcAddr</a>.
--   
--   Because an application <i>can</i> call <a>getInstanceProcAddr</a>
--   before creating an instance, <a>getInstanceProcAddr</a> returns a
--   valid function pointer when the <tt>instance</tt> parameter is
--   <a>XR_NULL_HANDLE</a> and the <tt>name</tt> parameter is one of the
--   following strings:
--   
--   <h2>No Instance Required</h2>
--   
--   <ul>
--   <li><a>enumerateInstanceExtensionProperties</a></li>
--   </ul>
--   
--   <ul>
--   <li><a>enumerateApiLayerProperties</a></li>
--   <li><a>createInstance</a></li>
--   </ul>
--   
--   <a>getInstanceProcAddr</a> <i>must</i> return
--   <a>ERROR_HANDLE_INVALID</a> if <tt>name</tt> is not one of the above
--   strings and <tt>instance</tt> is <a>XR_NULL_HANDLE</a>.
--   <a>getInstanceProcAddr</a> <i>may</i> return
--   <a>ERROR_HANDLE_INVALID</a> if <tt>name</tt> is not one of the above
--   strings and <tt>instance</tt> is invalid but not
--   <a>XR_NULL_HANDLE</a>.
--   
--   <a>getInstanceProcAddr</a> <i>must</i> return
--   <a>ERROR_FUNCTION_UNSUPPORTED</a> if <tt>instance</tt> is a valid
--   instance and the string specified in <tt>name</tt> is not the name of
--   an OpenXR core or enabled extension function.
--   
--   If <tt>name</tt> is the name of an extension function, then the result
--   returned by <a>getInstanceProcAddr</a> will depend upon how the
--   <tt>instance</tt> was created. If <tt>instance</tt> was created with
--   the related extension’s name appearing in the
--   <a>InstanceCreateInfo</a>::<tt>enabledExtensionNames</tt> array, then
--   <a>getInstanceProcAddr</a> returns a valid function pointer. If the
--   related extension’s name did not appear in the
--   <a>InstanceCreateInfo</a>::<tt>enabledExtensionNames</tt> array during
--   the creation of <tt>instance</tt>, then <a>getInstanceProcAddr</a>
--   returns <a>ERROR_FUNCTION_UNSUPPORTED</a>. Because of this, function
--   pointers returned by <a>getInstanceProcAddr</a> using one
--   <a>Instance</a> may not be valid when used with objects related to a
--   different <a>Instance</a>.
--   
--   The returned function pointer is of type <a>PFN_xrVoidFunction</a>,
--   and must be cast to the type of the function being queried.
--   
--   The table below defines the various use cases for
--   <a>getInstanceProcAddr</a> and return value (“fp” is “function
--   pointer”) for each case.
--   
--   TODO: table
--   
--   xrGetInstanceProcAddr behavior
--   
--   <ul>
--   <li><i>1</i> The returned function pointer <i>must</i> only be called
--   with a handle (the first parameter) that is <tt>instance</tt> or a
--   child of <tt>instance</tt>.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>If <tt>instance</tt> is not <a>XR_NULL_HANDLE</a>,
--   <tt>instance</tt> <i>must</i> be a valid <a>Instance</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>name</tt> <i>must</i> be a null-terminated UTF-8 string</li>
--   <li><tt>function</tt> <i>must</i> be a pointer to a
--   <a>PFN_xrVoidFunction</a> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>PFN_xrVoidFunction</a>, <a>Instance</a>
getInstanceProcAddr :: forall io. MonadIO io => Instance -> ("name" ::: ByteString) -> io PFN_xrVoidFunction

-- | xrEnumerateApiLayerProperties - Returns up to requested number of
--   global layer properties
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>propertyCapacityInput</tt> is the capacity of the properties
--   array, or 0 to indicate a request to retrieve the required
--   capacity.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>propertyCountOutput</tt> is a pointer to the count of
--   properties written, or a pointer to the required capacity in the case
--   that propertyCapacityInput is 0.</li>
--   <li><tt>properties</tt> is a pointer to an array of
--   <a>ApiLayerProperties</a> structures, but <i>can</i> be <tt>NULL</tt>
--   if propertyCapacityInput is 0.</li>
--   <li>See the <a>Buffer Size Parameters</a> section for a detailed
--   description of retrieving the required <tt>properties</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   The list of available layers may change at any time due to actions
--   outside of the OpenXR runtime, so two calls to
--   <a>enumerateApiLayerProperties</a> with the same parameters <i>may</i>
--   return different results, or retrieve different
--   <tt>propertyCountOutput</tt> values or <tt>properties</tt> contents.
--   
--   Once an instance has been created, the layers enabled for that
--   instance will continue to be enabled and valid for the lifetime of
--   that instance, even if some of them become unavailable for future
--   instances.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>propertyCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   </ul>
--   
--   <ul>
--   <li>If <tt>propertyCapacityInput</tt> is not <tt>0</tt>,
--   <tt>properties</tt> <i>must</i> be a pointer to an array of
--   <tt>propertyCapacityInput</tt> <a>ApiLayerProperties</a>
--   structures</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ApiLayerProperties</a>
enumerateApiLayerProperties :: forall io. MonadIO io => io ("properties" ::: Vector ApiLayerProperties)

-- | xrEnumerateInstanceExtensionProperties - Returns properties of
--   available instance extensions
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>layerName</tt> is either <tt>NULL</tt> or a pointer to a
--   string naming the API layer to retrieve extensions from, as returned
--   by <a>enumerateApiLayerProperties</a>.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>propertyCapacityInput</tt> is the capacity of the properties
--   array, or <tt>0</tt> to indicate a request to retrieve the required
--   capacity.</li>
--   <li><tt>propertyCountOutput</tt> is a pointer to the count of
--   properties written, or a pointer to the required capacity in the case
--   that <tt>propertyCapacityInput</tt> is <tt>0</tt>.</li>
--   <li><tt>properties</tt> is a pointer to an array of
--   <a>ExtensionProperties</a> structures, but <i>can</i> be <tt>NULL</tt>
--   if <tt>propertyCapacityInput</tt> is <tt>0</tt>.</li>
--   <li>See the <a>Buffer Size Parameters</a> section for a detailed
--   description of retrieving the required <tt>properties</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   If <tt>properties</tt> is <tt>NULL</tt>, then the number of extensions
--   properties available is returned in <tt>propertyCountOutput</tt>.
--   Otherwise, <tt>propertyCountInput</tt> must point to a variable set by
--   the user to the number of elements in the <tt>properties</tt> array.
--   If <tt>propertyCountInput</tt> is less than the number of extension
--   properties available, the contents of <tt>properties</tt> will be
--   undefined. If <tt>propertyCountInput</tt> is smaller than the number
--   of extensions available, the runtime <i>must</i> return the failure
--   code <a>ERROR_SIZE_INSUFFICIENT</a> and the contents of
--   <tt>properties</tt> are undefined.
--   
--   Because the list of available layers may change externally between
--   calls to <a>enumerateInstanceExtensionProperties</a>, two calls
--   <i>may</i> retrieve different results if a <tt>layerName</tt> is
--   available in one call but not in another. The extensions supported by
--   a layer may also change between two calls, e.g. if the layer
--   implementation is replaced by a different version between those calls.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>If <tt>layerName</tt> is not <tt>NULL</tt>, <tt>layerName</tt>
--   <i>must</i> be a null-terminated UTF-8 string</li>
--   </ul>
--   
--   <ul>
--   <li><tt>propertyCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>propertyCapacityInput</tt> is not <tt>0</tt>,
--   <tt>properties</tt> <i>must</i> be a pointer to an array of
--   <tt>propertyCapacityInput</tt> <a>ExtensionProperties</a>
--   structures</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_API_LAYER_NOT_PRESENT</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ExtensionProperties</a>
enumerateInstanceExtensionProperties :: forall io. MonadIO io => ("layerName" ::: Maybe ByteString) -> io ("properties" ::: Vector ExtensionProperties)

-- | xrCreateInstance - Creates an OpenXR Instance
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>createInstance</a> creates the <a>Instance</a>, then enables and
--   initializes global API layers and extensions requested by the
--   application. If an extension is provided by an API layer, both the API
--   layer and extension <i>must</i> be specified at <a>createInstance</a>
--   time. If a specified API layer cannot be found, no <a>Instance</a>
--   will be created and the function will return
--   <a>ERROR_API_LAYER_NOT_PRESENT</a>. Likewise, if a specified extension
--   cannot be found, the call <i>must</i> return
--   <a>ERROR_EXTENSION_NOT_PRESENT</a> and no <a>Instance</a> will be
--   created. Additionally, some runtimes <i>may</i> limit the number of
--   concurrent instances that may be in use. If the application attempts
--   to create more instances than a runtime can simultaneously support,
--   <a>createInstance</a> <i>may</i> return <a>ERROR_LIMIT_REACHED</a>.
--   
--   If the <a>ApplicationInfo</a>::<tt>applicationName</tt> is the empty
--   string the runtime <i>must</i> return <a>ERROR_NAME_INVALID</a>.
--   
--   If the <a>InstanceCreateInfo</a> structure contains a
--   platform-specific extension for a platform other than the target
--   platform, <a>ERROR_INITIALIZATION_FAILED</a> <i>may</i> be returned.
--   If a mandatory platform-specific extension is defined for the target
--   platform but no matching extension struct is provided in
--   <a>InstanceCreateInfo</a> the runtime <i>must</i> return
--   <a>ERROR_INITIALIZATION_FAILED</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_INITIALIZATION_FAILED</a></li><li><a>ERROR_API_VERSION_UNSUPPORTED</a></li><li><a>ERROR_API_LAYER_NOT_PRESENT</a></li><li><a>ERROR_EXTENSION_NOT_PRESENT</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_NAME_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>InstanceCreateInfo</a>
createInstance :: forall a io. (Extendss InstanceCreateInfo a, PokeChain a, MonadIO io) => InstanceCreateInfo a -> io Instance

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createInstance</a> and <a>destroyInstance</a>
--   
--   To ensure that <a>destroyInstance</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withInstance :: forall a io r. (Extendss InstanceCreateInfo a, PokeChain a, MonadIO io) => InstanceCreateInfo a -> (io Instance -> (Instance -> io ()) -> r) -> r

-- | xrDestroyInstance - Destroy an instance of OpenXR
--   
--   <h1>Parameters</h1>
--   
--   The <a>destroyInstance</a> function is used to destroy an
--   <a>Instance</a>.
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>instance</tt> is the handle to the instance to destroy.</li>
--   </ul>
--   
--   <a>Instance</a> handles are destroyed using <a>destroyInstance</a>.
--   When an <a>Instance</a> is destroyed, all handles that are children of
--   that <a>Instance</a> are also destroyed.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>instance</tt>, and any child handles, <i>must</i> be
--   externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>
destroyInstance :: forall io. MonadIO io => Instance -> io ()

-- | xrResultToString - Converts an XrResult to a UTF-8 string
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Returns the text version of the provided <a>Result</a> value as a
--   UTF-8 string.
--   
--   In all cases the returned string <i>must</i> be one of:
--   
--   <h2>Result String Return Values</h2>
--   
--   <ul>
--   <li>The literal string defined for the provide numeric value in the
--   core spec or extension. (e.g. the value 0 results in the string
--   <a>SUCCESS</a>)</li>
--   </ul>
--   
--   <ul>
--   <li><tt>XR_UNKNOWN_SUCCESS_</tt> concatenated with the positive result
--   number expressed as a decimal number.</li>
--   <li><tt>XR_UNKNOWN_FAILURE_</tt> concatenated with the negative result
--   number expressed as a decimal number.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>value</tt> <i>must</i> be a valid <a>Result</a> value</li>
--   <li><tt>buffer</tt> <i>must</i> be a character array of length
--   <a>MAX_RESULT_STRING_SIZE</a></li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>Result</a>, <a>structureTypeToString</a>
resultToString :: forall io. MonadIO io => Instance -> ("value" ::: Result) -> io ("buffer" ::: ByteString)

-- | xrStructureTypeToString - Converts an XrStructureType to a UTF-8
--   string
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Returns the text version of the provided <a>StructureType</a> value as
--   a UTF-8 string.
--   
--   In all cases the returned string <i>must</i> be one of:
--   
--   <h2>Structure Type String Return Values</h2>
--   
--   <ul>
--   <li>The literal string defined for the provide numeric value in the
--   core spec or extension. (e.g. the value of
--   <a>TYPE_INSTANCE_CREATE_INFO</a> results in the string
--   <a>TYPE_INSTANCE_CREATE_INFO</a>)</li>
--   </ul>
--   
--   <ul>
--   <li><tt>XR_UNKNOWN_STRUCTURE_TYPE_</tt> concatenated with the
--   structure type number expressed as a decimal number.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>value</tt> <i>must</i> be a valid <a>StructureType</a>
--   value</li>
--   <li><tt>buffer</tt> <i>must</i> be a character array of length
--   <a>MAX_STRUCTURE_NAME_SIZE</a></li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>StructureType</a>, <a>resultToString</a>
structureTypeToString :: forall io. MonadIO io => Instance -> ("value" ::: StructureType) -> io ("buffer" ::: ByteString)

-- | xrGetInstanceProperties - Gets information about the instance
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <tt>instanceProperties</tt> parameter <i>must</i> be filled out by
--   the runtime in response to this call, with information as defined in
--   <a>InstanceProperties</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>InstanceProperties</a>
getInstanceProperties :: forall io. MonadIO io => Instance -> io InstanceProperties

-- | xrPollEvent - Polls for events
--   
--   <h1>Parameters</h1>
--   
--   <a>pollEvent</a> polls for the next event and returns an event if one
--   is available. <a>pollEvent</a> returns immediately regardless of
--   whether an event was available. The event (if present) is unilaterally
--   removed from the queue if a valid <a>Instance</a> is provided. On
--   return the <tt>eventData</tt> parameter is filled with the event’s
--   data and the type field is changed to the event’s type. Runtimes
--   <i>may</i> create valid next chains depending on enabled extensions,
--   but they <i>must</i> guarantee that any such chains point only to
--   objects which fit completely within the original
--   <a>EventDataBuffer</a> pointed to by <tt>eventData</tt>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>EVENT_UNAVAILABLE</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   The runtime <i>must</i> discard queued events which contain destroyed
--   or otherwise invalid handles.
--   
--   TODO: table
--   
--   Event Descriptions
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataBuffer</a>, <a>Instance</a>
pollEvent :: forall io. MonadIO io => Instance -> io (Result, EventDataBuffer)

-- | XrApiLayerProperties - Structure specifying layer properties
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>,
--   <a>enumerateApiLayerProperties</a>
data ApiLayerProperties
ApiLayerProperties :: ByteString -> Version -> Word32 -> ByteString -> ApiLayerProperties

-- | <tt>layerName</tt> is a string specifying the name of the API layer.
--   Use this name in the
--   <a>InstanceCreateInfo</a>::<tt>enabledApiLayerNames</tt> array to
--   enable this API layer for an instance.
[$sel:layerName:ApiLayerProperties] :: ApiLayerProperties -> ByteString

-- | <tt>specVersion</tt> is the API version the API layer was written to,
--   encoded as described in the <a>API Version Numbers and Semantics</a>
--   section.
[$sel:specVersion:ApiLayerProperties] :: ApiLayerProperties -> Version

-- | <tt>layerVersion</tt> is the version of this API layer. It is an
--   integer, increasing with backward compatible changes.
[$sel:layerVersion:ApiLayerProperties] :: ApiLayerProperties -> Word32

-- | <tt>description</tt> is a string providing additional details that
--   <i>can</i> be used by the application to identify the API layer.
[$sel:description:ApiLayerProperties] :: ApiLayerProperties -> ByteString

-- | XrExtensionProperties - Returns properties of available instance
--   extensions
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>enumerateInstanceExtensionProperties</a>
data ExtensionProperties
ExtensionProperties :: ByteString -> Word32 -> ExtensionProperties

-- | <tt>extensionName</tt> is a <tt>NULL</tt> terminated string specifying
--   the name of the extension.
[$sel:extensionName:ExtensionProperties] :: ExtensionProperties -> ByteString

-- | <tt>extensionVersion</tt> is the version of this extension. It is an
--   integer, incremented with backward compatible changes.
[$sel:extensionVersion:ExtensionProperties] :: ExtensionProperties -> Word32

-- | XrApplicationInfo - Structure specifying application info
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   Note
--   
--   When using the OpenXR API to implement a reusable engine that will be
--   used by many applications, <tt>engineName</tt> <i>should</i> be set to
--   a unique string that identifies the engine, and <tt>engineVersion</tt>
--   <i>should</i> encode a representation of the engine’s version. This
--   way, all applications that share this engine version will provide the
--   same <tt>engineName</tt> and <tt>engineVersion</tt> to the runtime.
--   The engine <i>should</i> then enable individual applications to choose
--   their specific <tt>applicationName</tt> and
--   <tt>applicationVersion</tt>, enabling one application to be
--   distinguished from another application.
--   
--   When using the OpenXR API to implement an individual application
--   without a shared engine, the input <tt>engineName</tt> <i>should</i>
--   be left empty and <tt>engineVersion</tt> <i>should</i> be set to 0.
--   The <tt>applicationName</tt> <i>should</i> then be filled in with a
--   unique string that identifies the app and the
--   <tt>applicationVersion</tt> <i>should</i> encode a representation of
--   the application’s version.
--   
--   <h1>See Also</h1>
--   
--   <a>InstanceCreateInfo</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>
data ApplicationInfo
ApplicationInfo :: ByteString -> Word32 -> ByteString -> Word32 -> Version -> ApplicationInfo

-- | <tt>applicationName</tt> is a non-empty string containing the name of
--   the application.
--   
--   <tt>applicationName</tt> <i>must</i> be a null-terminated UTF-8 string
--   whose length is less than or equal to <a>MAX_APPLICATION_NAME_SIZE</a>
[$sel:applicationName:ApplicationInfo] :: ApplicationInfo -> ByteString

-- | <tt>applicationVersion</tt> is an unsigned integer variable containing
--   the developer-supplied version number of the application.
[$sel:applicationVersion:ApplicationInfo] :: ApplicationInfo -> Word32

-- | <tt>engineName</tt> is a string containing the name of the engine (if
--   any) used to create the application. It may be empty to indicate no
--   specified engine.
--   
--   <tt>engineName</tt> <i>must</i> be a null-terminated UTF-8 string
--   whose length is less than or equal to <a>MAX_ENGINE_NAME_SIZE</a>
[$sel:engineName:ApplicationInfo] :: ApplicationInfo -> ByteString

-- | <tt>engineVersion</tt> is an unsigned integer variable containing the
--   developer-supplied version number of the engine used to create the
--   application. May be zero to indicate no specified engine.
[$sel:engineVersion:ApplicationInfo] :: ApplicationInfo -> Word32

-- | <tt>apiVersion</tt> is the version of this API against which the
--   application will run, encoded as described in the <a>API Version
--   Numbers and Semantics</a> section. If the runtime does not support the
--   requested <tt>apiVersion</tt> it <i>must</i> return
--   <a>ERROR_API_VERSION_UNSUPPORTED</a>.
[$sel:apiVersion:ApplicationInfo] :: ApplicationInfo -> Version

-- | XrInstanceCreateInfo - Structure specifying params of a newly created
--   instance
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be <a>TYPE_INSTANCE_CREATE_INFO</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a>. See also:
--   <a>DebugUtilsMessengerCreateInfoEXT</a>,
--   <a>InstanceCreateInfoAndroidKHR</a></li>
--   <li><tt>createFlags</tt> <i>must</i> be <tt>0</tt></li>
--   <li><tt>applicationInfo</tt> <i>must</i> be a valid
--   <a>ApplicationInfo</a> structure</li>
--   <li>If <tt>enabledApiLayerCount</tt> is not <tt>0</tt>,
--   <tt>enabledApiLayerNames</tt> <i>must</i> be a pointer to an array of
--   <tt>enabledApiLayerCount</tt> null-terminated UTF-8 strings</li>
--   <li>If <tt>enabledExtensionCount</tt> is not <tt>0</tt>,
--   <tt>enabledExtensionNames</tt> <i>must</i> be a pointer to an array of
--   <tt>enabledExtensionCount</tt> null-terminated UTF-8 strings</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ApplicationInfo</a>, <a>InstanceCreateFlags</a>,
--   <a>StructureType</a>, <a>createInstance</a>
data InstanceCreateInfo (es :: [Type])
InstanceCreateInfo :: Chain es -> InstanceCreateFlags -> ApplicationInfo -> Vector ByteString -> Vector ByteString -> InstanceCreateInfo (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
[$sel:next:InstanceCreateInfo] :: InstanceCreateInfo (es :: [Type]) -> Chain es

-- | <tt>createFlags</tt> is a bitmask of <a>InstanceCreateFlags</a> that
--   identifies options that apply to the creation.
[$sel:createFlags:InstanceCreateInfo] :: InstanceCreateInfo (es :: [Type]) -> InstanceCreateFlags

-- | <tt>applicationInfo</tt> is an instance of <a>ApplicationInfo</a>.
--   This information helps runtimes recognize behavior inherent to classes
--   of applications. <a>ApplicationInfo</a> is defined in detail below.
[$sel:applicationInfo:InstanceCreateInfo] :: InstanceCreateInfo (es :: [Type]) -> ApplicationInfo

-- | <tt>enabledApiLayerNames</tt> is a pointer to an array of
--   <tt>enabledApiLayerCount</tt> strings containing the names of API
--   layers to enable for the created instance. See the <a>API Layers And
--   Extensions</a> section for further details.
[$sel:enabledApiLayerNames:InstanceCreateInfo] :: InstanceCreateInfo (es :: [Type]) -> Vector ByteString

-- | <tt>enabledExtensionNames</tt> is a pointer to an array of
--   <tt>enabledExtensionCount</tt> strings containing the names of
--   extensions to enable.
[$sel:enabledExtensionNames:InstanceCreateInfo] :: InstanceCreateInfo (es :: [Type]) -> Vector ByteString

-- | XrInstanceProperties - Contains information about the instance
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>,
--   <a>getInstanceProperties</a>
data InstanceProperties
InstanceProperties :: Version -> ByteString -> InstanceProperties

-- | <tt>runtimeVersion</tt> is the runtime’s version (not necessarily
--   related to an OpenXR API version), expressed in the format of
--   <a>MAKE_VERSION</a>.
[$sel:runtimeVersion:InstanceProperties] :: InstanceProperties -> Version

-- | <tt>runtimeName</tt> is the name of the runtime.
[$sel:runtimeName:InstanceProperties] :: InstanceProperties -> ByteString

-- | XrEventDataBuffer - Event buffer
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataBaseHeader</a>, <a>StructureType</a>, <a>pollEvent</a>
data EventDataBuffer
EventDataBuffer :: ByteString -> EventDataBuffer

-- | <tt>varying</tt> is a fixed sized output buffer big enough to hold
--   returned data elements for all specified event data types.
[$sel:varying:EventDataBuffer] :: EventDataBuffer -> ByteString
instance GHC.Show.Show OpenXR.Core10.Instance.ApiLayerProperties
instance GHC.Show.Show OpenXR.Core10.Instance.ExtensionProperties
instance GHC.Show.Show OpenXR.Core10.Instance.ApplicationInfo
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.Instance.InstanceCreateInfo es)
instance GHC.Show.Show OpenXR.Core10.Instance.InstanceProperties
instance GHC.Show.Show OpenXR.Core10.Instance.EventDataBuffer
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Instance.EventDataBuffer
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Instance.EventDataBuffer
instance Foreign.Storable.Storable OpenXR.Core10.Instance.EventDataBuffer
instance Vulkan.Zero.Zero OpenXR.Core10.Instance.EventDataBuffer
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Instance.InstanceProperties
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Instance.InstanceProperties
instance Foreign.Storable.Storable OpenXR.Core10.Instance.InstanceProperties
instance Vulkan.Zero.Zero OpenXR.Core10.Instance.InstanceProperties
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.Instance.InstanceCreateInfo
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Instance.InstanceCreateInfo es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.Instance.InstanceCreateInfo es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Instance.InstanceCreateInfo es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.Instance.InstanceCreateInfo es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.Instance.InstanceCreateInfo es)
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Instance.ApplicationInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Instance.ApplicationInfo
instance Foreign.Storable.Storable OpenXR.Core10.Instance.ApplicationInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Instance.ApplicationInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Instance.ExtensionProperties
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Instance.ExtensionProperties
instance Foreign.Storable.Storable OpenXR.Core10.Instance.ExtensionProperties
instance Vulkan.Zero.Zero OpenXR.Core10.Instance.ExtensionProperties
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Instance.ApiLayerProperties
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Instance.ApiLayerProperties
instance Foreign.Storable.Storable OpenXR.Core10.Instance.ApiLayerProperties
instance Vulkan.Zero.Zero OpenXR.Core10.Instance.ApiLayerProperties

module OpenXR.Core10.Input

-- | xrGetActionStateBoolean - Gets boolean action state
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_ACTION_TYPE_MISMATCH</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateBoolean</a>, <a>ActionStateGetInfo</a>, <a>Session</a>,
--   <a>createAction</a>
getActionStateBoolean :: forall io. MonadIO io => Session -> ActionStateGetInfo -> io (Result, ActionStateBoolean)

-- | xrGetActionStateFloat - Gets a floating point action state
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_ACTION_TYPE_MISMATCH</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateFloat</a>, <a>ActionStateGetInfo</a>, <a>Session</a>,
--   <a>createAction</a>
getActionStateFloat :: forall io. MonadIO io => Session -> ActionStateGetInfo -> io (Result, ActionStateFloat)

-- | xrGetActionStateVector2f - Gets 2D float vector action state
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_ACTION_TYPE_MISMATCH</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateGetInfo</a>, <a>ActionStateVector2f</a>, <a>Session</a>,
--   <a>createAction</a>
getActionStateVector2f :: forall io. MonadIO io => Session -> ActionStateGetInfo -> io (Result, ActionStateVector2f)

-- | xrGetActionStatePose - Gets metadata from a pose action
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>getActionStatePose</a> returns information about the binding and
--   active state for the specified action. To determine the pose of this
--   action at a historical or predicted time, the application <i>can</i>
--   create an action space using <a>createActionSpace</a>. Then, after
--   each sync, the application <i>can</i> locate the pose of this action
--   space within a base space using <a>locateSpace</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_ACTION_TYPE_MISMATCH</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateGetInfo</a>, <a>ActionStatePose</a>, <a>Session</a>,
--   <a>createAction</a>, <a>createActionSpace</a>
getActionStatePose :: forall io. MonadIO io => Session -> ActionStateGetInfo -> io (Result, ActionStatePose)

-- | xrCreateActionSet - Creates an XrActionSet
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>createActionSet</a> function creates an action set and returns
--   a handle to the created action set.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_NAME_DUPLICATED</a></li><li><a>ERROR_LOCALIZED_NAME_DUPLICATED</a></li><li><a>ERROR_NAME_INVALID</a></li><li><a>ERROR_LOCALIZED_NAME_INVALID</a></li><li><a>ERROR_PATH_FORMAT_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSet</a>, <a>ActionSetCreateInfo</a>, <a>Instance</a>,
--   <a>destroyActionSet</a>
createActionSet :: forall io. MonadIO io => Instance -> ActionSetCreateInfo -> io ActionSet

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createActionSet</a> and <a>destroyActionSet</a>
--   
--   To ensure that <a>destroyActionSet</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withActionSet :: forall io r. MonadIO io => Instance -> ActionSetCreateInfo -> (io ActionSet -> (ActionSet -> io ()) -> r) -> r

-- | xrDestroyActionSet - Destroys an XrActionSet
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Action set handles <i>can</i> be destroyed by calling
--   <a>destroyActionSet</a>. When an action set handle is destroyed, all
--   handles of actions in that action set are also destroyed.
--   
--   The implementation <i>must</i> not free underlying resources for the
--   action set while there are other valid handles that refer to those
--   resources. The implementation <i>may</i> release resources for an
--   action set when all of the action spaces for actions in that action
--   set have been destroyed. See <a>Action Spaces Lifetime</a> for
--   details.
--   
--   Resources for all action sets in an instance <i>must</i> be freed when
--   the instance containing those actions sets is destroyed.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>actionSet</tt> <i>must</i> be a valid <a>ActionSet</a>
--   handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>actionSet</tt>, and any child handles, <i>must</i>
--   be externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSet</a>, <a>createActionSet</a>
destroyActionSet :: forall io. MonadIO io => ActionSet -> io ()

-- | xrCreateAction - Creates an XrAction
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>createAction</a> creates an action and returns its handle.
--   
--   If <tt>actionSet</tt> has been included in a call to
--   <a>attachSessionActionSets</a>, the implementation <i>must</i> return
--   <a>ERROR_ACTIONSETS_ALREADY_ATTACHED</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_ACTIONSETS_ALREADY_ATTACHED</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_NAME_DUPLICATED</a></li><li><a>ERROR_LOCALIZED_NAME_DUPLICATED</a></li><li><a>ERROR_NAME_INVALID</a></li><li><a>ERROR_LOCALIZED_NAME_INVALID</a></li><li><a>ERROR_PATH_FORMAT_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>ActionCreateInfo</a>, <a>ActionSet</a>,
--   <a>ActionType</a>, <a>destroyAction</a>
createAction :: forall io. MonadIO io => ActionSet -> ActionCreateInfo -> io Action

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createAction</a> and <a>destroyAction</a>
--   
--   To ensure that <a>destroyAction</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withAction :: forall io r. MonadIO io => ActionSet -> ActionCreateInfo -> (io Action -> (Action -> io ()) -> r) -> r

-- | xrDestroyAction - Destroys an XrAction
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Action handles <i>can</i> be destroyed by calling
--   <a>destroyAction</a>. Handles for actions that are part of an action
--   set are automatically destroyed when the action set’s handle is
--   destroyed.
--   
--   The implementation <i>must</i> not destroy the underlying resources
--   for an action when <a>destroyAction</a> is called. Those resources are
--   still used to make <a>action spaces locatable</a> and when processing
--   action priority in <a>syncActions</a>. Destroying the action handle
--   removes the application’s access to these resources, but has no other
--   change on actions.
--   
--   Resources for all actions in an instance <i>must</i> be freed when the
--   instance containing those actions sets is destroyed.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>action</tt> <i>must</i> be a valid <a>Action</a> handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>action</tt>, and any child handles, <i>must</i> be
--   externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>createAction</a>
destroyAction :: forall io. MonadIO io => Action -> io ()

-- | xrSuggestInteractionProfileBindings - Sets the application-suggested
--   bindings for the interaction profile
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>suggestInteractionProfileBindings</a> sets an interaction profile
--   for which the application can provide default bindings. The
--   application <i>can</i> call <a>suggestInteractionProfileBindings</a>
--   once per interaction profile that it supports.
--   
--   The application <i>can</i> provide any number of bindings for each
--   action.
--   
--   If the application successfully calls
--   <a>suggestInteractionProfileBindings</a> more than once for an
--   interaction profile, the runtime <i>must</i> discard the previous
--   suggested bindings and replace them with the new suggested bindings
--   for that profile.
--   
--   If the interaction profile path does not follow the structure defined
--   in <a>Interaction Profiles</a> or suggested bindings contain paths
--   that do not follow the format defined in <a>Device input subpaths</a>,
--   the runtime <i>must</i> return <a>ERROR_PATH_UNSUPPORTED</a>. If the
--   interaction profile or input source for any of the suggested bindings
--   does not exist in the allowlist defined in <a>Interaction Profile
--   Paths</a>, the runtime <i>must</i> return
--   <a>ERROR_PATH_UNSUPPORTED</a>. A runtime <i>must</i> accept every
--   valid binding in the allowlist though it is free to ignore any of
--   them.
--   
--   If the action set for any action referenced in the
--   <tt>suggestedBindings</tt> parameter has been included in a call to
--   <a>attachSessionActionSets</a>, the implementation <i>must</i> return
--   <a>ERROR_ACTIONSETS_ALREADY_ATTACHED</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_ACTIONSETS_ALREADY_ATTACHED</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li><li><a>ERROR_PATH_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>InteractionProfileSuggestedBinding</a>
suggestInteractionProfileBindings :: forall a io. (Extendss InteractionProfileSuggestedBinding a, PokeChain a, MonadIO io) => Instance -> ("suggestedBindings" ::: InteractionProfileSuggestedBinding a) -> io ()

-- | xrAttachSessionActionSets - Attaches action sets to a given session
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>attachSessionActionSets</a> attaches the <a>ActionSet</a> handles
--   in <tt>attachInfo.actionSets</tt> to the <tt>session</tt>. Action sets
--   <i>must</i> be attached in order to be synchronized with
--   <a>syncActions</a>.
--   
--   When an action set is attached to a session, that action set becomes
--   immutable. See <a>createAction</a> and
--   <a>suggestInteractionProfileBindings</a> for details.
--   
--   The runtime <i>must</i> return
--   <a>ERROR_ACTIONSETS_ALREADY_ATTACHED</a> if
--   <a>attachSessionActionSets</a> is called more than once for a given
--   <tt>session</tt>. The runtime <i>must</i> return
--   <a>ERROR_ACTIONSET_NOT_ATTACHED</a> for any action created after
--   <a>attachSessionActionSets</a> is called for a given <tt>session</tt>
--   if that handle is used with any call for the same <tt>session</tt>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_ACTIONSETS_ALREADY_ATTACHED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>SessionActionSetsAttachInfo</a>
attachSessionActionSets :: forall io. MonadIO io => Session -> SessionActionSetsAttachInfo -> io Result

-- | xrGetCurrentInteractionProfile - Gets the current interaction profile
--   for a top level user paths
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>getCurrentInteractionProfile</a> asks the runtime for the active
--   interaction profiles for a top level user path.
--   
--   The runtime <i>must</i> return only interaction profiles for which the
--   application has provided bindings with
--   <a>suggestInteractionProfileBindings</a>. The runtime <i>may</i>
--   return interaction profiles that do not represent physically present
--   hardware, for example if the runtime is using a known interaction
--   profile to bind to hardware that the application is not aware of. The
--   runtime <i>may</i> return the last-known interaction profile in the
--   event that no controllers are active.
--   
--   If <a>attachSessionActionSets</a> has not yet been called for the
--   <tt>session</tt>, the runtime <i>must</i> return
--   <a>ERROR_ACTIONSET_NOT_ATTACHED</a>. If <tt>topLevelUserPath</tt> is
--   not one of the device input subpaths described in section <a>/user
--   paths</a>, the runtime <i>must</i> return
--   <a>ERROR_PATH_UNSUPPORTED</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li><li><a>ERROR_PATH_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>InteractionProfileState</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>Session</a>
getCurrentInteractionProfile :: forall io. MonadIO io => Session -> ("topLevelUserPath" ::: Path) -> io (Result, InteractionProfileState)

-- | xrSyncActions - Updates the current state of input actions
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>syncActions</a> updates the current state of input actions.
--   Repeated input action state queries between subsequent synchronization
--   calls <i>must</i> return the same values. The <a>ActionSet</a>
--   structures referenced in the <tt>syncInfo.activeActionSets</tt>
--   <i>must</i> have been previously attached to the session via
--   <a>attachSessionActionSets</a>. If any action sets not attached to
--   this session are passed to <a>syncActions</a> it <i>must</i> return
--   <a>ERROR_ACTIONSET_NOT_ATTACHED</a>. Subsets of the bound action sets
--   <i>can</i> be synchronized in order to control which actions are seen
--   as active.
--   
--   If <tt>session</tt> is not focused, the runtime <i>must</i> return
--   <a>SESSION_NOT_FOCUSED</a>, and all action states in the session
--   <i>must</i> be inactive.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li><li><a>SESSION_NOT_FOCUSED</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSet</a>, <a>ActionsSyncInfo</a>, <a>ActiveActionSet</a>,
--   <a>Session</a>
syncActions :: forall io. MonadIO io => Session -> ActionsSyncInfo -> io Result

-- | xrEnumerateBoundSourcesForAction - Queries the bound input sources for
--   an action
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is the <a>Session</a> being queried.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>enumerateInfo</tt> is an
--   <a>BoundSourcesForActionEnumerateInfo</a> providing the query
--   information.</li>
--   <li><tt>sourceCapacityInput</tt> is the capacity of the array, or 0 to
--   indicate a request to retrieve the required capacity.</li>
--   <li><tt>sourceCountOutput</tt> is a pointer to the count of sources,
--   or a pointer to the required capacity in the case that
--   <tt>sourceCapacityInput</tt> is 0.</li>
--   <li><tt>sources</tt> is a pointer to an application-allocated array
--   that will be filled with the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   values for all sources. It <i>can</i> be <tt>NULL</tt> if
--   <tt>sourceCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>sources</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   If an action is unbound, <a>enumerateBoundSourcesForAction</a>
--   <i>must</i> assign <tt>0</tt> to the value pointed-to by
--   <tt>sourceCountOutput</tt> and not modify the array.
--   
--   <a>enumerateBoundSourcesForAction</a> <i>must</i> return
--   <a>ERROR_ACTIONSET_NOT_ATTACHED</a> if passed an action in an action
--   set never attached to the session with <a>attachSessionActionSets</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>enumerateInfo</tt> <i>must</i> be a pointer to a valid
--   <a>BoundSourcesForActionEnumerateInfo</a> structure</li>
--   <li><tt>sourceCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>sourceCapacityInput</tt> is not <tt>0</tt>,
--   <tt>sources</tt> <i>must</i> be a pointer to an array of
--   <tt>sourceCapacityInput</tt>
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_PATH_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>BoundSourcesForActionEnumerateInfo</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>Session</a>
enumerateBoundSourcesForAction :: forall io. MonadIO io => Session -> BoundSourcesForActionEnumerateInfo -> io (Result, "sources" ::: Vector Path)

-- | xrGetInputSourceLocalizedName - Gets a localized source name
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is a handle to the <a>Session</a> associated with
--   the action that reported this source.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>getInfo</tt> is an <a>InputSourceLocalizedNameGetInfo</a>
--   providing the query information.</li>
--   <li><tt>bufferCapacityInput</tt> is the capacity of the buffer, or 0
--   to indicate a request to retrieve the required capacity.</li>
--   <li><tt>bufferCountOutput</tt> is a pointer to the count of name
--   characters written (including the terminating <tt>\0</tt>), or a
--   pointer to the required capacity in the case that
--   <tt>bufferCapacityInput</tt> is 0.</li>
--   <li><tt>buffer</tt> is a pointer to an application-allocated buffer
--   that will be filled with the source name. It <i>can</i> be
--   <tt>NULL</tt> if <tt>bufferCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>buffer</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   <a>getInputSourceLocalizedName</a> returns a string for the input
--   source in the current system locale.
--   
--   If <a>attachSessionActionSets</a> has not yet been called for the
--   session, the runtime <i>must</i> return
--   <a>ERROR_ACTIONSET_NOT_ATTACHED</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>getInfo</tt> <i>must</i> be a pointer to a valid
--   <a>InputSourceLocalizedNameGetInfo</a> structure</li>
--   <li><tt>bufferCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>bufferCapacityInput</tt> is not <tt>0</tt>, <tt>buffer</tt>
--   <i>must</i> be a pointer to an array of <tt>bufferCapacityInput</tt>
--   char values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>InputSourceLocalizedNameGetInfo</a>, <a>Session</a>
getInputSourceLocalizedName :: forall io. MonadIO io => Session -> InputSourceLocalizedNameGetInfo -> io (Result, "buffer" ::: ByteString)

-- | XrVector2f - Two-dimensional vector
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If used to represent physical distances (rather than e.g. normalized
--   direction) and not otherwise specified, values <i>must</i> be in
--   meters.
--   
--   <h1>See Also</h1>
--   
--   <a>ActionStateVector2f</a>, <a>CompositionLayerEquirectKHR</a>,
--   <a>Posef</a>, <a>Quaternionf</a>, <a>Vector3f</a>, <a>Vector4f</a>,
--   <a>VisibilityMaskKHR</a>, <a>xrSetInputDeviceStateVector2fEXT</a>
data Vector2f
Vector2f :: Float -> Float -> Vector2f

-- | <tt>x</tt> is the x coordinate of the vector.
[$sel:x:Vector2f] :: Vector2f -> Float

-- | <tt>y</tt> is the y coordinate of the vector.
[$sel:y:Vector2f] :: Vector2f -> Float

-- | XrActionStateBoolean - Boolean action state
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When multiple input sources are bound to this action, the
--   <tt>currentState</tt> follows <a>the previously defined rule to
--   resolve ambiguity</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>getActionStateBoolean</a>
data ActionStateBoolean
ActionStateBoolean :: Bool -> Bool -> Time -> Bool -> ActionStateBoolean

-- | <tt>currentState</tt> is the current state of the action.
[$sel:currentState:ActionStateBoolean] :: ActionStateBoolean -> Bool

-- | <tt>changedSinceLastSync</tt> is <a>TRUE</a> if the value of
--   <tt>currentState</tt> is different than it was before the most recent
--   call to <a>syncActions</a>. This parameter can be combined with
--   <tt>currentState</tt> to detect rising and falling edges since the
--   previous call to <a>syncActions</a>. E.g. if both
--   <tt>changedSinceLastSync</tt> and <tt>currentState</tt> are
--   <a>TRUE</a> then a rising edge (<a>FALSE</a> to <a>TRUE</a>) has taken
--   place.
[$sel:changedSinceLastSync:ActionStateBoolean] :: ActionStateBoolean -> Bool

-- | <tt>lastChangeTime</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   when this action’s value last changed.
[$sel:lastChangeTime:ActionStateBoolean] :: ActionStateBoolean -> Time

-- | <tt>isActive</tt> is <a>TRUE</a> if and only if there exists an input
--   source that is contributing to the current state of this action.
[$sel:isActive:ActionStateBoolean] :: ActionStateBoolean -> Bool

-- | XrActionStateFloat - Floating point action state
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When multiple input sources are bound to this action, the
--   <tt>currentState</tt> follows <a>the previously defined rule to
--   resolve ambiguity</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>getActionStateFloat</a>
data ActionStateFloat
ActionStateFloat :: Float -> Bool -> Time -> Bool -> ActionStateFloat

-- | <tt>currentState</tt> is the current state of the Action.
[$sel:currentState:ActionStateFloat] :: ActionStateFloat -> Float

-- | <tt>changedSinceLastSync</tt> is <a>TRUE</a> if the value of
--   <tt>currentState</tt> is different than it was before the most recent
--   call to <a>syncActions</a>.
[$sel:changedSinceLastSync:ActionStateFloat] :: ActionStateFloat -> Bool

-- | <tt>lastChangeTime</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   in nanoseconds since this action’s value last changed.
[$sel:lastChangeTime:ActionStateFloat] :: ActionStateFloat -> Time

-- | <tt>isActive</tt> is <a>TRUE</a> if and only if there exists an input
--   source that is contributing to the current state of this action.
[$sel:isActive:ActionStateFloat] :: ActionStateFloat -> Bool

-- | XrActionStateVector2f - 2D float vector action state
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When multiple input sources are bound to this action, the
--   <tt>currentState</tt> follows <a>the previously defined rule to
--   resolve ambiguity</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>Vector2f</a>, <a>getActionStateVector2f</a>
data ActionStateVector2f
ActionStateVector2f :: Vector2f -> Bool -> Time -> Bool -> ActionStateVector2f

-- | <tt>currentState</tt> is the current <a>Vector2f</a> state of the
--   Action.
[$sel:currentState:ActionStateVector2f] :: ActionStateVector2f -> Vector2f

-- | <tt>changedSinceLastSync</tt> is <a>TRUE</a> if the value of
--   <tt>currentState</tt> is different than it was before the most recent
--   call to <a>syncActions</a>.
[$sel:changedSinceLastSync:ActionStateVector2f] :: ActionStateVector2f -> Bool

-- | <tt>lastChangeTime</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   in nanoseconds since this action’s value last changed.
[$sel:lastChangeTime:ActionStateVector2f] :: ActionStateVector2f -> Time

-- | <tt>isActive</tt> is <a>TRUE</a> if and only if there exists an input
--   source that is contributing to the current state of this action.
[$sel:isActive:ActionStateVector2f] :: ActionStateVector2f -> Bool

-- | XrActionStatePose - Pose action metadata
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   A pose action <i>must</i> not be bound to multiple input sources,
--   according to <a>the previously defined rule</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>, <a>getActionStatePose</a>
data ActionStatePose
ActionStatePose :: Bool -> ActionStatePose

-- | <tt>isActive</tt> is <a>TRUE</a> if and only if there exists an input
--   source that is being tracked by this pose action.
[$sel:isActive:ActionStatePose] :: ActionStatePose -> Bool

-- | XrActionStateGetInfo - Information to get action state
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   See <a>ActionCreateInfo</a> for a description of subaction paths, and
--   the restrictions on their use.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>StructureType</a>, <a>getActionStateBoolean</a>,
--   <a>getActionStateFloat</a>, <a>getActionStatePose</a>,
--   <a>getActionStateVector2f</a>
data ActionStateGetInfo
ActionStateGetInfo :: Ptr Action_T -> Path -> ActionStateGetInfo

-- | <tt>action</tt> is the <a>Action</a> being queried.
--   
--   <tt>action</tt> <i>must</i> be a valid <a>Action</a> handle
[$sel:action:ActionStateGetInfo] :: ActionStateGetInfo -> Ptr Action_T

-- | <tt>subactionPath</tt> is the subaction path
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   to query data from, or <a>NULL_PATH</a> to specify all subaction
--   paths. If the subaction path is specified, it is one of the subaction
--   paths that were specified when the action was created. If the
--   subaction path was not specified when the action was created, the
--   runtime <i>must</i> return <a>ERROR_PATH_UNSUPPORTED</a>. If this
--   parameter is specified, the runtime <i>must</i> return data that
--   originates only from the subaction paths specified.
[$sel:subactionPath:ActionStateGetInfo] :: ActionStateGetInfo -> Path

-- | XrActionSetCreateInfo - XrActionSet creation info
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When multiple actions are bound to the same input source, the
--   <tt>priority</tt> of each action set determines which bindings are
--   suppressed. Runtimes <i>must</i> ignore input sources from action sets
--   with a lower priority number if those specific input sources are also
--   present in active actions within a higher priority action set. If
--   multiple action sets with the same priority are bound to the same
--   input source and that is the highest priority number, runtimes
--   <i>must</i> process all those bindings at the same time.
--   
--   Two actions are considered to be bound to the same input source if
--   they use the same <a>identifier and optional location</a> path
--   segments, even if they have different component segments.
--   
--   When runtimes are ignoring bindings because of priority, they
--   <i>must</i> treat the binding to that input source as though they do
--   not exist. That means the <tt>isActive</tt> field <i>must</i> be
--   <a>FALSE</a> when retrieving action data, and that the runtime
--   <i>must</i> not provide any visual, haptic, or other feedback related
--   to the binding of that action to that input source. Other actions in
--   the same action set which are bound to input sources that do not
--   collide are not affected and are processed as normal.
--   
--   If <tt>actionSetName</tt> or <tt>localizedActionSetName</tt> are empty
--   strings, the runtime <i>must</i> return <a>ERROR_NAME_INVALID</a> or
--   <a>ERROR_LOCALIZED_NAME_INVALID</a> respectively. If
--   <tt>actionSetName</tt> or <tt>localizedActionSetName</tt> are
--   duplicates of the corresponding field for any existing action set in
--   the specified instance, the runtime <i>must</i> return
--   <a>ERROR_NAME_DUPLICATED</a> or <a>ERROR_LOCALIZED_NAME_DUPLICATED</a>
--   respectively. If the conflicting action set is destroyed, the
--   conflicting field is no longer considered duplicated. If
--   <tt>actionSetName</tt> contains characters which are not allowed in a
--   single level of a <a>well-formed path string</a>, the runtime
--   <i>must</i> return <a>ERROR_PATH_FORMAT_INVALID</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSet</a>, <a>StructureType</a>, <a>createActionSet</a>
data ActionSetCreateInfo
ActionSetCreateInfo :: ByteString -> ByteString -> Word32 -> ActionSetCreateInfo

-- | <tt>actionSetName</tt> is an array containing a <tt>NULL</tt>
--   terminated non-empty string with the name of this action set.
--   
--   <tt>actionSetName</tt> <i>must</i> be a null-terminated UTF-8 string
--   whose length is less than or equal to <a>MAX_ACTION_SET_NAME_SIZE</a>
[$sel:actionSetName:ActionSetCreateInfo] :: ActionSetCreateInfo -> ByteString

-- | <tt>localizedActionSetName</tt> is an array containing a <tt>NULL</tt>
--   terminated <tt>UTF</tt>-8 string that can be presented to the user as
--   a description of the action set. This string should be presented in
--   the system’s current active locale.
--   
--   <tt>localizedActionSetName</tt> <i>must</i> be a null-terminated UTF-8
--   string whose length is less than or equal to
--   <a>MAX_LOCALIZED_ACTION_SET_NAME_SIZE</a>
[$sel:localizedActionSetName:ActionSetCreateInfo] :: ActionSetCreateInfo -> ByteString

-- | <tt>priority</tt> defines which action sets' actions are active on a
--   given input source when actions on multiple active action sets are
--   bound to the same input source. Larger priority numbers take
--   precedence over smaller priority numbers.
[$sel:priority:ActionSetCreateInfo] :: ActionSetCreateInfo -> Word32

-- | XrActionSuggestedBinding - Suggested binding for a single action
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>InteractionProfileSuggestedBinding</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>suggestInteractionProfileBindings</a>
data ActionSuggestedBinding
ActionSuggestedBinding :: Ptr Action_T -> Path -> ActionSuggestedBinding

-- | <tt>action</tt> is the <a>Action</a> handle for an action
--   
--   <tt>action</tt> <i>must</i> be a valid <a>Action</a> handle
[$sel:action:ActionSuggestedBinding] :: ActionSuggestedBinding -> Ptr Action_T

-- | <tt>binding</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   of a binding for the action specified in <tt>action</tt>. This path is
--   any top level user path plus input source path, for example
--   /user/hand/right/input/trigger/click. See <a>suggested bindings</a>
--   for more details.
[$sel:binding:ActionSuggestedBinding] :: ActionSuggestedBinding -> Path

-- | XrInteractionProfileSuggestedBinding - Suggested bindings for a
--   interaction profile
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_INTERACTION_PROFILE_SUGGESTED_BINDING</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a>. See also:
--   <a>BindingModificationsKHR</a>,
--   <a>InteractionProfileAnalogThresholdVALVE</a></li>
--   <li><tt>suggestedBindings</tt> <i>must</i> be a pointer to an array of
--   <tt>countSuggestedBindings</tt> valid <a>ActionSuggestedBinding</a>
--   structures</li>
--   <li>The <tt>countSuggestedBindings</tt> parameter <i>must</i> be
--   greater than <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSuggestedBinding</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>StructureType</a>, <a>suggestInteractionProfileBindings</a>
data InteractionProfileSuggestedBinding (es :: [Type])
InteractionProfileSuggestedBinding :: Chain es -> Path -> Vector ActionSuggestedBinding -> InteractionProfileSuggestedBinding (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
[$sel:next:InteractionProfileSuggestedBinding] :: InteractionProfileSuggestedBinding (es :: [Type]) -> Chain es

-- | <tt>interactionProfile</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   of an interaction profile.
[$sel:interactionProfile:InteractionProfileSuggestedBinding] :: InteractionProfileSuggestedBinding (es :: [Type]) -> Path

-- | <tt>suggestedBindings</tt> is a pointer to an array of
--   <a>ActionSuggestedBinding</a> structures that define all of the
--   application’s suggested bindings for the specified interaction
--   profile.
[$sel:suggestedBindings:InteractionProfileSuggestedBinding] :: InteractionProfileSuggestedBinding (es :: [Type]) -> Vector ActionSuggestedBinding

-- | XrActiveActionSet - Describes an active action set
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure defines a single active action set and subaction path
--   combination. Applications <i>can</i> provide a list of these
--   structures to the <a>syncActions</a> function.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSet</a>, <a>ActionsSyncInfo</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>syncActions</a>
data ActiveActionSet
ActiveActionSet :: Ptr ActionSet_T -> Path -> ActiveActionSet

-- | <tt>actionSet</tt> is the handle of the action set to activate.
--   
--   <tt>actionSet</tt> <i>must</i> be a valid <a>ActionSet</a> handle
[$sel:actionSet:ActiveActionSet] :: ActiveActionSet -> Ptr ActionSet_T

-- | <tt>subactionPath</tt> is a subaction path that was declared when one
--   or more actions in the action set was created or <a>NULL_PATH</a>. If
--   the application wants to activate the action set on more than one
--   subaction path, it <i>can</i> include additional
--   <a>ActiveActionSet</a> structs with the other <tt>subactionPath</tt>
--   values. Using <a>NULL_PATH</a> as the value for
--   <tt>subactionPath</tt>, acts as a wildcard for all subaction paths on
--   the actions in the action set. If the subaction path was not specified
--   on any of the actions in the actionSet when that action was created,
--   the runtime <i>must</i> return <a>ERROR_PATH_UNSUPPORTED</a>.
[$sel:subactionPath:ActiveActionSet] :: ActiveActionSet -> Path

-- | XrSessionActionSetsAttachInfo - Information to attach action sets to a
--   session
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SESSION_ACTION_SETS_ATTACH_INFO</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>actionSets</tt> <i>must</i> be a pointer to an array of
--   <tt>countActionSets</tt> valid <a>ActionSet</a> handles</li>
--   <li>The <tt>countActionSets</tt> parameter <i>must</i> be greater than
--   <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSet</a>, <a>StructureType</a>, <a>attachSessionActionSets</a>
data SessionActionSetsAttachInfo
SessionActionSetsAttachInfo :: Vector (Ptr ActionSet_T) -> SessionActionSetsAttachInfo

-- | <tt>actionSets</tt> is a pointer to an array of one or more
--   <a>ActionSet</a> handles to be attached to the session.
[$sel:actionSets:SessionActionSetsAttachInfo] :: SessionActionSetsAttachInfo -> Vector (Ptr ActionSet_T)

-- | XrActionsSyncInfo - Information to sync actions
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be <a>TYPE_ACTIONS_SYNC_INFO</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li>If <tt>countActiveActionSets</tt> is not <tt>0</tt>,
--   <tt>activeActionSets</tt> <i>must</i> be a pointer to an array of
--   <tt>countActiveActionSets</tt> valid <a>ActiveActionSet</a>
--   structures</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ActiveActionSet</a>, <a>StructureType</a>, <a>syncActions</a>
data ActionsSyncInfo
ActionsSyncInfo :: Word32 -> Vector ActiveActionSet -> ActionsSyncInfo

-- | <tt>countActiveActionSets</tt> is an integer specifying the number of
--   valid elements in the <tt>activeActionSets</tt> array.
[$sel:countActiveActionSets:ActionsSyncInfo] :: ActionsSyncInfo -> Word32

-- | <tt>activeActionSets</tt> is <tt>NULL</tt> or a pointer to an array of
--   one or more <a>ActiveActionSet</a> structures that should be
--   synchronized.
[$sel:activeActionSets:ActionsSyncInfo] :: ActionsSyncInfo -> Vector ActiveActionSet

-- | XrBoundSourcesForActionEnumerateInfo - Information to query the bound
--   input sources for an action
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>StructureType</a>,
--   <a>enumerateBoundSourcesForAction</a>
data BoundSourcesForActionEnumerateInfo
BoundSourcesForActionEnumerateInfo :: Ptr Action_T -> BoundSourcesForActionEnumerateInfo

-- | <tt>action</tt> is the handle of the action to query.
--   
--   <tt>action</tt> <i>must</i> be a valid <a>Action</a> handle
[$sel:action:BoundSourcesForActionEnumerateInfo] :: BoundSourcesForActionEnumerateInfo -> Ptr Action_T

-- | XrInputSourceLocalizedNameGetInfo - Information to query the bound
--   input sources for an action
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>InputSourceLocalizedNameFlags</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>StructureType</a>, <a>enumerateBoundSourcesForAction</a>,
--   <a>getInputSourceLocalizedName</a>
data InputSourceLocalizedNameGetInfo
InputSourceLocalizedNameGetInfo :: Path -> InputSourceLocalizedNameFlags -> InputSourceLocalizedNameGetInfo
[$sel:sourcePath:InputSourceLocalizedNameGetInfo] :: InputSourceLocalizedNameGetInfo -> Path

-- | <tt>whichComponents</tt> is any set of flags from
--   <a>XrInputSourceLocalizedNameFlagBits</a>.
--   
--   <tt>whichComponents</tt> <i>must</i> be a valid combination of
--   <a>XrInputSourceLocalizedNameFlagBits</a> values
--   
--   <tt>whichComponents</tt> <i>must</i> not be <tt>0</tt>
[$sel:whichComponents:InputSourceLocalizedNameGetInfo] :: InputSourceLocalizedNameGetInfo -> InputSourceLocalizedNameFlags

-- | XrInteractionProfileState - Receives active interaction profile for a
--   top level path
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The runtime <i>must</i> only include interaction profiles that the
--   application has provided bindings for via
--   <a>suggestInteractionProfileBindings</a> or <a>NULL_PATH</a>. If the
--   runtime is rebinding an interaction profile provided by the
--   application to a device that the application did not provide bindings
--   for, it <i>must</i> return the interaction profile path that it is
--   emulating. If the runtime is unable to provide input because it cannot
--   emulate any of the application-provided interaction profiles, it
--   <i>must</i> return <a>NULL_PATH</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>ActionSuggestedBinding</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>StructureType</a>, <a>getCurrentInteractionProfile</a>,
--   <a>suggestInteractionProfileBindings</a>
data InteractionProfileState
InteractionProfileState :: Path -> InteractionProfileState

-- | <tt>interactionProfile</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   of the interaction profile path for the <tt>topLevelUserPath</tt> used
--   to retrieve this state, or <a>NULL_PATH</a> if there is no active
--   interaction profile at that top level user path.
[$sel:interactionProfile:InteractionProfileState] :: InteractionProfileState -> Path

-- | XrActionCreateInfo - XrAction creation info
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Subaction paths are a mechanism that enables applications to use the
--   same action name and handle on multiple devices. Applications can
--   query action state using subaction paths that differentiate data
--   coming from each device. This allows the runtime to group logically
--   equivalent actions together in system UI. For instance, an application
--   could create a single <tt>pick_up</tt> action with the /user/hand/left
--   and /user/hand/right subaction paths and use the subaction paths to
--   independently query the state of <tt>pick_up_with_left_hand</tt> and
--   <tt>pick_up_with_right_hand</tt>.
--   
--   Applications <i>can</i> create actions with or without the
--   <tt>subactionPaths</tt> set to a list of paths. If this list of paths
--   is omitted (i.e. <tt>subactionPaths</tt> is set to <tt>NULL</tt>, and
--   <tt>countSubactionPaths</tt> is set to <tt>0</tt>), the application is
--   opting out of filtering action results by subaction paths and any call
--   to get action data must also omit subaction paths.
--   
--   If <tt>subactionPaths</tt> is specified and any of the following
--   conditions are not satisfied, the runtime <i>must</i> return
--   <a>ERROR_PATH_UNSUPPORTED</a>:
--   
--   <ul>
--   <li>Each path provided is one
--   of:<ul><li>/user/head</li><li>/user/hand/left</li><li>/user/hand/right</li><li>/user/gamepad</li></ul></li>
--   <li>No path appears in the list more than once</li>
--   </ul>
--   
--   Extensions <i>may</i> append additional top level user paths to the
--   above list.
--   
--   Note
--   
--   Earlier revisions of the spec mentioned /user but it could not be
--   implemented as specified and was removed as errata.
--   
--   The runtime <i>must</i> return <a>ERROR_PATH_UNSUPPORTED</a> in the
--   following circumstances:
--   
--   <ul>
--   <li>The application specified subaction paths at action creation and
--   the application called <tt>xrGetActionState*</tt> or a haptic function
--   with an empty subaction path array.</li>
--   <li>The application called <tt>xrGetActionState*</tt> or a haptic
--   function with a subaction path that was not specified when the action
--   was created.</li>
--   </ul>
--   
--   If <tt>actionName</tt> or <tt>localizedActionName</tt> are empty
--   strings, the runtime <i>must</i> return <a>ERROR_NAME_INVALID</a> or
--   <a>ERROR_LOCALIZED_NAME_INVALID</a> respectively. If
--   <tt>actionName</tt> or <tt>localizedActionName</tt> are duplicates of
--   the corresponding field for any existing action in the specified
--   action set, the runtime <i>must</i> return
--   <a>ERROR_NAME_DUPLICATED</a> or <a>ERROR_LOCALIZED_NAME_DUPLICATED</a>
--   respectively. If the conflicting action is destroyed, the conflicting
--   field is no longer considered duplicated. If <tt>actionName</tt>
--   contains characters which are not allowed in a single level of a
--   <a>well-formed path string</a>, the runtime <i>must</i> return
--   <a>ERROR_PATH_FORMAT_INVALID</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be <a>TYPE_ACTION_CREATE_INFO</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>actionName</tt> <i>must</i> be a null-terminated UTF-8 string
--   whose length is less than or equal to <a>MAX_ACTION_NAME_SIZE</a></li>
--   <li><tt>actionType</tt> <i>must</i> be a valid <a>ActionType</a>
--   value</li>
--   <li>If <tt>countSubactionPaths</tt> is not <tt>0</tt>,
--   <tt>subactionPaths</tt> <i>must</i> be a pointer to an array of
--   <tt>countSubactionPaths</tt> valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   values</li>
--   <li><tt>localizedActionName</tt> <i>must</i> be a null-terminated
--   UTF-8 string whose length is less than or equal to
--   <a>MAX_LOCALIZED_ACTION_NAME_SIZE</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>ActionType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>StructureType</a>, <a>createAction</a>, <a>createActionSet</a>
data ActionCreateInfo
ActionCreateInfo :: ByteString -> ActionType -> Word32 -> Vector Path -> ByteString -> ActionCreateInfo

-- | <tt>actionName</tt> is an array containing a <tt>NULL</tt> terminated
--   string with the name of this action.
[$sel:actionName:ActionCreateInfo] :: ActionCreateInfo -> ByteString

-- | <tt>actionType</tt> is the <a>ActionType</a> of the action to be
--   created.
[$sel:actionType:ActionCreateInfo] :: ActionCreateInfo -> ActionType

-- | <tt>countSubactionPaths</tt> is the number of elements in the
--   <tt>subactionPaths</tt> array. If <tt>subactionPaths</tt> is NULL,
--   this parameter must be 0.
[$sel:countSubactionPaths:ActionCreateInfo] :: ActionCreateInfo -> Word32

-- | <tt>subactionPaths</tt> is an array of
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   or <tt>NULL</tt>. If this array is specified, it contains one or more
--   subaction paths that the application intends to query action state
--   for.
[$sel:subactionPaths:ActionCreateInfo] :: ActionCreateInfo -> Vector Path

-- | <tt>localizedActionName</tt> is an array containing a <tt>NULL</tt>
--   terminated <tt>UTF</tt>-8 string that can be presented to the user as
--   a description of the action. This string should be in the system’s
--   current active locale.
[$sel:localizedActionName:ActionCreateInfo] :: ActionCreateInfo -> ByteString
instance GHC.Classes.Eq OpenXR.Core10.Input.InteractionProfileState
instance GHC.Classes.Eq OpenXR.Core10.Input.InputSourceLocalizedNameGetInfo
instance GHC.Classes.Eq OpenXR.Core10.Input.BoundSourcesForActionEnumerateInfo
instance GHC.Classes.Eq OpenXR.Core10.Input.ActiveActionSet
instance GHC.Classes.Eq OpenXR.Core10.Input.ActionSuggestedBinding
instance GHC.Classes.Eq OpenXR.Core10.Input.ActionStateGetInfo
instance GHC.Classes.Eq OpenXR.Core10.Input.ActionStatePose
instance GHC.Classes.Eq OpenXR.Core10.Input.ActionStateFloat
instance GHC.Classes.Eq OpenXR.Core10.Input.ActionStateBoolean
instance GHC.Classes.Eq OpenXR.Core10.Input.Vector2f
instance GHC.Show.Show OpenXR.Core10.Input.Vector2f
instance GHC.Show.Show OpenXR.Core10.Input.ActionStateBoolean
instance GHC.Show.Show OpenXR.Core10.Input.ActionStateFloat
instance GHC.Show.Show OpenXR.Core10.Input.ActionStateVector2f
instance GHC.Show.Show OpenXR.Core10.Input.ActionStatePose
instance GHC.Show.Show OpenXR.Core10.Input.ActionStateGetInfo
instance GHC.Show.Show OpenXR.Core10.Input.ActionSetCreateInfo
instance GHC.Show.Show OpenXR.Core10.Input.ActionSuggestedBinding
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.Input.InteractionProfileSuggestedBinding es)
instance GHC.Show.Show OpenXR.Core10.Input.ActiveActionSet
instance GHC.Show.Show OpenXR.Core10.Input.SessionActionSetsAttachInfo
instance GHC.Show.Show OpenXR.Core10.Input.ActionsSyncInfo
instance GHC.Show.Show OpenXR.Core10.Input.BoundSourcesForActionEnumerateInfo
instance GHC.Show.Show OpenXR.Core10.Input.InputSourceLocalizedNameGetInfo
instance GHC.Show.Show OpenXR.Core10.Input.InteractionProfileState
instance GHC.Show.Show OpenXR.Core10.Input.ActionCreateInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionCreateInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionCreateInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionCreateInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.InteractionProfileState
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.InteractionProfileState
instance Foreign.Storable.Storable OpenXR.Core10.Input.InteractionProfileState
instance Vulkan.Zero.Zero OpenXR.Core10.Input.InteractionProfileState
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.InputSourceLocalizedNameGetInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.InputSourceLocalizedNameGetInfo
instance Foreign.Storable.Storable OpenXR.Core10.Input.InputSourceLocalizedNameGetInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Input.InputSourceLocalizedNameGetInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.BoundSourcesForActionEnumerateInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.BoundSourcesForActionEnumerateInfo
instance Foreign.Storable.Storable OpenXR.Core10.Input.BoundSourcesForActionEnumerateInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Input.BoundSourcesForActionEnumerateInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionsSyncInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionsSyncInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionsSyncInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.SessionActionSetsAttachInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.SessionActionSetsAttachInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Input.SessionActionSetsAttachInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActiveActionSet
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActiveActionSet
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActiveActionSet
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActiveActionSet
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.Input.InteractionProfileSuggestedBinding
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Input.InteractionProfileSuggestedBinding es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.Input.InteractionProfileSuggestedBinding es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Input.InteractionProfileSuggestedBinding es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.Input.InteractionProfileSuggestedBinding es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.Input.InteractionProfileSuggestedBinding es)
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionSuggestedBinding
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionSuggestedBinding
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActionSuggestedBinding
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionSuggestedBinding
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionSetCreateInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionSetCreateInfo
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActionSetCreateInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionSetCreateInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionStateGetInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionStateGetInfo
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActionStateGetInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionStateGetInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionStatePose
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionStatePose
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActionStatePose
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionStatePose
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionStateVector2f
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionStateVector2f
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActionStateVector2f
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionStateVector2f
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionStateFloat
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionStateFloat
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActionStateFloat
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionStateFloat
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.ActionStateBoolean
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.ActionStateBoolean
instance Foreign.Storable.Storable OpenXR.Core10.Input.ActionStateBoolean
instance Vulkan.Zero.Zero OpenXR.Core10.Input.ActionStateBoolean
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Input.Vector2f
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Input.Vector2f
instance Foreign.Storable.Storable OpenXR.Core10.Input.Vector2f
instance Vulkan.Zero.Zero OpenXR.Core10.Input.Vector2f

module OpenXR.Core10.Image

-- | xrEnumerateSwapchainFormats - Enumerates swapchain formats
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is the session that enumerates the supported
--   formats.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>formatCapacityInput</tt> is the capacity of the
--   <tt>formats</tt>, or 0 to retrieve the required capacity.</li>
--   <li><tt>formatCountOutput</tt> is a pointer to the count of
--   <tt>uint64_t</tt> formats written, or a pointer to the required
--   capacity in the case that <tt>formatCapacityInput</tt> is
--   <tt>0</tt>.</li>
--   <li><tt>formats</tt> is a pointer to an array of <tt>int64_t</tt>
--   format ids, but <i>can</i> be <tt>NULL</tt> if
--   <tt>formatCapacityInput</tt> is <tt>0</tt>. The format ids are
--   specific to the specified graphics API.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>formats</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   <a>enumerateSwapchainFormats</a> enumerates the texture formats
--   supported by the current session. The type of formats returned are
--   dependent on the graphics API specified in <a>createSession</a>. For
--   example, if a DirectX graphics API was specified, then the enumerated
--   formats correspond to the DXGI formats, such as
--   <tt>DXGI_FORMAT_R8G8B8A8_UNORM_SRGB</tt>. Texture formats
--   <i>should</i> be in order from highest to lowest runtime preference.
--   
--   With an OpenGL-based graphics API, the texture formats correspond to
--   OpenGL internal formats.
--   
--   With a Direct3D-based graphics API, <a>enumerateSwapchainFormats</a>
--   never returns typeless formats (e.g.
--   <tt>DXGI_FORMAT_R8G8B8A8_TYPELESS</tt>). Only concrete formats are
--   returned, and only concrete formats may be specified by applications
--   for swapchain creation.
--   
--   Runtimes <i>must</i> always return identical buffer contents from this
--   enumeration for the lifetime of the session.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>formatCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>formatCapacityInput</tt> is not <tt>0</tt>,
--   <tt>formats</tt> <i>must</i> be a pointer to an array of
--   <tt>formatCapacityInput</tt> <tt>int64_t</tt> values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>createSwapchain</a>
enumerateSwapchainFormats :: forall io. MonadIO io => Session -> io (Result, "formats" ::: Vector Int64)

-- | xrCreateSwapchain - Creates an XrSwapchain
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Creates an <a>Swapchain</a> handle. The returned swapchain handle
--   <i>may</i> be subsequently used in API calls. Multiple
--   <a>Swapchain</a> handles may exist simultaneously, up to some limit
--   imposed by the runtime. The <a>Swapchain</a> handle <i>must</i> be
--   eventually freed via the <a>destroySwapchain</a> function. The runtime
--   <i>must</i> return <a>ERROR_SWAPCHAIN_FORMAT_UNSUPPORTED</a> if the
--   image format specified in the <a>SwapchainCreateInfo</a> is
--   unsupported. The runtime <i>must</i> return
--   <a>ERROR_FEATURE_UNSUPPORTED</a> if any bit of the create flags
--   specified in the <a>SwapchainCreateInfo</a> is unsupported.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_SWAPCHAIN_FORMAT_UNSUPPORTED</a></li><li><a>ERROR_FEATURE_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>Swapchain</a>, <a>SwapchainCreateInfo</a>,
--   <a>acquireSwapchainImage</a>, <a>destroySwapchain</a>,
--   <a>enumerateSwapchainFormats</a>, <a>enumerateSwapchainImages</a>,
--   <a>releaseSwapchainImage</a>
createSwapchain :: forall a io. (Extendss SwapchainCreateInfo a, PokeChain a, MonadIO io) => Session -> SwapchainCreateInfo a -> io (Result, Swapchain)

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createSwapchain</a> and <a>destroySwapchain</a>
--   
--   To ensure that <a>destroySwapchain</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withSwapchain :: forall a io r. (Extendss SwapchainCreateInfo a, PokeChain a, MonadIO io) => Session -> SwapchainCreateInfo a -> (io (Result, Swapchain) -> ((Result, Swapchain) -> io ()) -> r) -> r

-- | xrDestroySwapchain - Destroys an XrSwapchain
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   All submitted graphics API commands that refer to <tt>swapchain</tt>
--   <i>must</i> have completed execution. Runtimes <i>may</i> continue to
--   utilize swapchain images after <a>destroySwapchain</a> is called.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>swapchain</tt> <i>must</i> be a valid <a>Swapchain</a>
--   handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>swapchain</tt>, and any child handles, <i>must</i>
--   be externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Swapchain</a>, <a>createSwapchain</a>
destroySwapchain :: forall io. MonadIO io => Swapchain -> io ()

-- | xrEnumerateSwapchainImages - Gets images from an XrSwapchain
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>swapchain</tt> is the <a>Swapchain</a> to get images
--   from.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>imageCapacityInput</tt> is the capacity of the <tt>images</tt>
--   array, or 0 to indicate a request to retrieve the required
--   capacity.</li>
--   <li><tt>imageCountOutput</tt> is a pointer to the count of
--   <tt>images</tt> written, or a pointer to the required capacity in the
--   case that <tt>imageCapacityInput</tt> is 0.</li>
--   <li><tt>images</tt> is a pointer to an array of graphics API-specific
--   <tt>XrSwapchainImage</tt> structures based off of
--   <a>SwapchainImageBaseHeader</a>. It <i>can</i> be <tt>NULL</tt> if
--   <tt>imageCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>images</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   Fills an array of graphics API-specific <tt>XrSwapchainImage</tt>
--   structures. The resources <i>must</i> be constant and valid for the
--   lifetime of the <a>Swapchain</a>.
--   
--   Runtimes <i>must</i> always return identical buffer contents from this
--   enumeration for the lifetime of the swapchain.
--   
--   Note: <tt>images</tt> is a pointer to an array of structures of
--   graphics API-specific type, not an array of structure pointers.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>swapchain</tt> <i>must</i> be a valid <a>Swapchain</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>imageCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>imageCapacityInput</tt> is not <tt>0</tt>, <tt>images</tt>
--   <i>must</i> be a pointer to an array of <tt>imageCapacityInput</tt>
--   <a>SwapchainImageBaseHeader</a>-based structures. See also:
--   <a>SwapchainImageD3D11KHR</a>, <a>SwapchainImageD3D12KHR</a>,
--   <a>SwapchainImageOpenGLESKHR</a>, <a>SwapchainImageOpenGLKHR</a>,
--   <a>SwapchainImageVulkanKHR</a></li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Swapchain</a>, <a>SwapchainImageBaseHeader</a>,
--   <a>createSwapchain</a>
enumerateSwapchainImages :: forall a io. (Inherits SwapchainImageBaseHeader a, ToCStruct a, FromCStruct a, MonadIO io) => Swapchain -> io (Result, "images" ::: Vector a)

-- | xrAcquireSwapchainImage - Acquire a swapchain image
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Acquires the image corresponding to the <tt>index</tt> position in the
--   array returned by <a>enumerateSwapchainImages</a>. The runtime
--   <i>must</i> return <a>ERROR_CALL_ORDER_INVALID</a> if <tt>index</tt>
--   has already been acquired and not yet released with
--   <a>releaseSwapchainImage</a>. If the <tt>swapchain</tt> was created
--   with the <tt>XR_SWAPCHAIN_CREATE_STATIC_IMAGE_BIT</tt> set in
--   <a>SwapchainCreateInfo</a>::<tt>createFlags</tt>, this function
--   <i>must</i> not have been previously called for this swapchain. The
--   runtime <i>must</i> return <a>ERROR_CALL_ORDER_INVALID</a> if a
--   <tt>swapchain</tt> created with the
--   <tt>XR_SWAPCHAIN_CREATE_STATIC_IMAGE_BIT</tt> set in
--   <a>SwapchainCreateInfo</a>::<tt>createFlags</tt> and this function has
--   been successfully called previously for this swapchain.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>swapchain</tt> <i>must</i> be a valid <a>Swapchain</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li>If <tt>acquireInfo</tt> is not <tt>NULL</tt>, <tt>acquireInfo</tt>
--   <i>must</i> be a pointer to a valid <a>SwapchainImageAcquireInfo</a>
--   structure</li>
--   <li><tt>index</tt> <i>must</i> be a pointer to a <tt>uint32_t</tt>
--   value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_CALL_ORDER_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Swapchain</a>, <a>SwapchainImageAcquireInfo</a>,
--   <a>createSwapchain</a>, <a>destroySwapchain</a>,
--   <a>enumerateSwapchainImages</a>, <a>releaseSwapchainImage</a>,
--   <a>waitSwapchainImage</a>
acquireSwapchainImage :: forall io. MonadIO io => Swapchain -> ("acquireInfo" ::: Maybe SwapchainImageAcquireInfo) -> io (Result, "index" ::: Word32)

-- | xrWaitSwapchainImage - Wait for a swapchain image to be available
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Before an application can begin writing to a swapchain image, it must
--   first wait on the image to avoid writing to it before the compositor
--   has finished reading from it. <a>waitSwapchainImage</a> will
--   implicitly wait on the oldest acquired swapchain image which has not
--   yet been successfully waited on. Once a swapchain image has been
--   successfully waited on, it <i>must</i> be released before waiting on
--   the next acquired swapchain image.
--   
--   This function may block for longer than the timeout specified in
--   <a>SwapchainImageWaitInfo</a> due to scheduling or contention.
--   
--   If the timeout expires without the image becoming available for
--   writing, <a>TIMEOUT_EXPIRED</a> <i>must</i> be returned. If
--   <a>waitSwapchainImage</a> returns <a>TIMEOUT_EXPIRED</a>, the next
--   call to <a>waitSwapchainImage</a> will wait on the same image index
--   again until the function succeeds with <a>SUCCESS</a>. Note that this
--   is not an error code; <tt>XR_SUCCEEDED(XR_TIMEOUT_EXPIRED)</tt> is
--   <tt>true</tt>.
--   
--   The runtime <i>must</i> return <a>ERROR_CALL_ORDER_INVALID</a> if no
--   image has been acquired by calling <a>acquireSwapchainImage</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>TIMEOUT_EXPIRED</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_CALL_ORDER_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Swapchain</a>, <a>SwapchainImageWaitInfo</a>,
--   <a>acquireSwapchainImage</a>, <a>createSwapchain</a>,
--   <a>destroySwapchain</a>, <a>enumerateSwapchainImages</a>,
--   <a>releaseSwapchainImage</a>
waitSwapchainImage :: forall io. MonadIO io => Swapchain -> SwapchainImageWaitInfo -> io Result

-- | A variant of <a>waitSwapchainImage</a> which makes a *safe* FFI call
waitSwapchainImageSafe :: forall io. MonadIO io => Swapchain -> SwapchainImageWaitInfo -> io Result

-- | xrReleaseSwapchainImage - Release a swapchain image
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If the <tt>swapchain</tt> was created with the
--   <tt>XR_SWAPCHAIN_CREATE_STATIC_IMAGE_BIT</tt> set in
--   <a>SwapchainCreateInfo</a>::<tt>createFlags</tt> structure, this
--   function <i>must</i> not have been previously called for this
--   swapchain.
--   
--   The runtime <i>must</i> return <a>ERROR_CALL_ORDER_INVALID</a> if no
--   image has been waited on by calling <a>waitSwapchainImage</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>swapchain</tt> <i>must</i> be a valid <a>Swapchain</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li>If <tt>releaseInfo</tt> is not <tt>NULL</tt>, <tt>releaseInfo</tt>
--   <i>must</i> be a pointer to a valid <a>SwapchainImageReleaseInfo</a>
--   structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_CALL_ORDER_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Swapchain</a>, <a>SwapchainImageReleaseInfo</a>,
--   <a>acquireSwapchainImage</a>, <a>createSwapchain</a>,
--   <a>destroySwapchain</a>, <a>enumerateSwapchainImages</a>,
--   <a>waitSwapchainImage</a>
releaseSwapchainImage :: forall io. MonadIO io => Swapchain -> ("releaseInfo" ::: Maybe SwapchainImageReleaseInfo) -> io Result

-- | XrSwapchainCreateInfo - Creation info for a swapchain
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>SessionCreateFlags</a>, <a>StructureType</a>,
--   <a>SwapchainCreateFlags</a>, <a>SwapchainUsageFlags</a>,
--   <a>createSession</a>, <a>createSwapchain</a>,
--   <a>createSwapchainAndroidSurfaceKHR</a>,
--   <a>enumerateSwapchainFormats</a>
data SwapchainCreateInfo (es :: [Type])
SwapchainCreateInfo :: Chain es -> SwapchainCreateFlags -> SwapchainUsageFlags -> Int64 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> SwapchainCreateInfo (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>SecondaryViewConfigurationSwapchainCreateInfoMSFT</a>
[$sel:next:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Chain es

-- | <tt>createFlags</tt> is a bitmask of <a>XrSwapchainCreateFlagBits</a>
--   describing additional properties of the swapchain.
--   
--   <tt>createFlags</tt> <i>must</i> be <tt>0</tt> or a valid combination
--   of <a>XrSwapchainCreateFlagBits</a> values
[$sel:createFlags:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> SwapchainCreateFlags

-- | <tt>usageFlags</tt> is a bitmask of <a>SwapchainUsageFlagBits</a>
--   describing the intended usage of the swapchain’s images. The usage
--   flags define how the corresponding graphics API objects are created. A
--   mismatch <i>may</i> result in swapchain images that do not support the
--   application’s usage.
--   
--   <tt>usageFlags</tt> <i>must</i> be <tt>0</tt> or a valid combination
--   of <a>SwapchainUsageFlagBits</a> values
[$sel:usageFlags:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> SwapchainUsageFlags

-- | <tt>format</tt> is a graphics API-specific texture format identifier.
--   For example, if the graphics API specified in <a>createSession</a> is
--   Vulkan, then this format is a Vulkan format such as
--   <tt>VK_FORMAT_R8G8B8A8_SRGB</tt>. The format identifies the format
--   that the runtime will interpret the texture as upon submission. Valid
--   formats are indicated by <a>enumerateSwapchainFormats</a>.
[$sel:format:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Int64

-- | <tt>sampleCount</tt> is the number of sub-data element samples in the
--   image, <i>must</i> not be <tt>0</tt> or greater than the graphics
--   API’s maximum limit.
[$sel:sampleCount:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Word32

-- | <tt>width</tt> is the width of the image, <i>must</i> not be
--   <tt>0</tt> or greater than the graphics API’s maximum limit.
[$sel:width:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Word32

-- | <tt>height</tt> is the height of the image, <i>must</i> not be
--   <tt>0</tt> or greater than the graphics API’s maximum limit.
[$sel:height:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Word32

-- | <tt>faceCount</tt> is the number of faces, which can be either
--   <tt>6</tt> (for cubemaps) or <tt>1</tt>.
[$sel:faceCount:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Word32

-- | <tt>arraySize</tt> is the number of array layers in the image or
--   <tt>1</tt> for a 2D image, <i>must</i> not be <tt>0</tt> or greater
--   than the graphics API’s maximum limit.
[$sel:arraySize:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Word32

-- | <tt>mipCount</tt> describes the number of levels of detail available
--   for minified sampling of the image, <i>must</i> not be <tt>0</tt> or
--   greater than the graphics API’s maximum limit.
[$sel:mipCount:SwapchainCreateInfo] :: SwapchainCreateInfo (es :: [Type]) -> Word32

-- | XrSwapchainImageBaseHeader - Image base header for a swapchain image
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>SwapchainImageBaseHeader</a> is a base structure that can be
--   overridden by a graphics API-specific <tt>XrSwapchainImage*</tt> child
--   structure.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>enumerateSwapchainImages</a>
data SwapchainImageBaseHeader
SwapchainImageBaseHeader :: StructureType -> SwapchainImageBaseHeader

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
--   
--   <tt>type</tt> <i>must</i> be one of the following XrStructureType
--   values: <a>TYPE_SWAPCHAIN_IMAGE_D3D11_KHR</a>,
--   <a>TYPE_SWAPCHAIN_IMAGE_D3D12_KHR</a>,
--   <a>TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR</a>,
--   <a>TYPE_SWAPCHAIN_IMAGE_OPENGL_KHR</a>,
--   <a>TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR</a>
[$sel:type':SwapchainImageBaseHeader] :: SwapchainImageBaseHeader -> StructureType
class ToCStruct a => IsSwapchainImage a
toSwapchainImageBaseHeader :: IsSwapchainImage a => a -> SwapchainImageBaseHeader

-- | XrSwapchainImageAcquireInfo - Describes a swapchain image acquisition
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Because this structure only exists to support extension-specific
--   structures, <a>acquireSwapchainImage</a> will accept a <tt>NULL</tt>
--   argument for <tt>acquireInfo</tt> for applications that are not using
--   any relevant extensions.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>acquireSwapchainImage</a>
data SwapchainImageAcquireInfo
SwapchainImageAcquireInfo :: SwapchainImageAcquireInfo

-- | XrSwapchainImageWaitInfo - Describes a swapchain image wait operation
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>,
--   <a>StructureType</a>, <a>waitSwapchainImage</a>
data SwapchainImageWaitInfo
SwapchainImageWaitInfo :: Duration -> SwapchainImageWaitInfo

-- | <tt>timeout</tt> indicates how many nanoseconds the call should block
--   waiting for the image to become available for writing.
[$sel:timeout:SwapchainImageWaitInfo] :: SwapchainImageWaitInfo -> Duration

-- | XrSwapchainImageReleaseInfo - Describes a swapchain image release
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Because this structure only exists to support extension-specific
--   structures, <a>releaseSwapchainImage</a> will accept a <tt>NULL</tt>
--   argument for <tt>releaseInfo</tt> for applications that are not using
--   any relevant extensions.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>releaseSwapchainImage</a>
data SwapchainImageReleaseInfo
SwapchainImageReleaseInfo :: SwapchainImageReleaseInfo
instance GHC.Classes.Eq OpenXR.Core10.Image.SwapchainImageReleaseInfo
instance GHC.Classes.Eq OpenXR.Core10.Image.SwapchainImageWaitInfo
instance GHC.Classes.Eq OpenXR.Core10.Image.SwapchainImageAcquireInfo
instance GHC.Classes.Eq OpenXR.Core10.Image.SwapchainImageBaseHeader
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.Image.SwapchainCreateInfo es)
instance GHC.Show.Show OpenXR.Core10.Image.SwapchainImageBaseHeader
instance GHC.Show.Show OpenXR.Core10.Image.SwapchainImageAcquireInfo
instance GHC.Show.Show OpenXR.Core10.Image.SwapchainImageWaitInfo
instance GHC.Show.Show OpenXR.Core10.Image.SwapchainImageReleaseInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Image.SwapchainImageReleaseInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Image.SwapchainImageReleaseInfo
instance Foreign.Storable.Storable OpenXR.Core10.Image.SwapchainImageReleaseInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Image.SwapchainImageReleaseInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Image.SwapchainImageWaitInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Image.SwapchainImageWaitInfo
instance Foreign.Storable.Storable OpenXR.Core10.Image.SwapchainImageWaitInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Image.SwapchainImageWaitInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Image.SwapchainImageAcquireInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Image.SwapchainImageAcquireInfo
instance Foreign.Storable.Storable OpenXR.Core10.Image.SwapchainImageAcquireInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Image.SwapchainImageAcquireInfo
instance OpenXR.CStruct.Extends.Inheritable OpenXR.Core10.Image.SwapchainImageBaseHeader
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Image.SwapchainImageBaseHeader
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Image.SwapchainImageBaseHeader
instance Foreign.Storable.Storable OpenXR.Core10.Image.SwapchainImageBaseHeader
instance Vulkan.Zero.Zero OpenXR.Core10.Image.SwapchainImageBaseHeader
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.Image.SwapchainCreateInfo
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Image.SwapchainCreateInfo es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.Image.SwapchainCreateInfo es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Image.SwapchainCreateInfo es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.Image.SwapchainCreateInfo es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.Image.SwapchainCreateInfo es)


-- | <h1>Name</h1>
--   
--   XR_KHR_android_surface_swapchain - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_android_surface_swapchain</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   5
--   
--   <h1>Revision</h1>
--   
--   4
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>createSwapchainAndroidSurfaceKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_android_surface_swapchain

-- | xrCreateSwapchainAndroidSurfaceKHR - Creates a swapchain and an
--   Android Surface
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>createSwapchainAndroidSurfaceKHR</a> creates an <a>Swapchain</a>
--   object returned in <tt>swapchain</tt> and an Android Surface
--   <tt>jobject</tt> returned in <tt>surface</tt>. The <tt>jobject</tt>
--   <i>must</i> be valid to be passed back to Java code using JNI and
--   <i>must</i> be valid to be used with ordinary Android APIs for
--   submitting images to Surfaces. The returned <a>Swapchain</a>
--   <i>must</i> be valid to be referenced in <a>SwapchainSubImage</a>
--   structures to show content on the screen. The width and height passed
--   in <a>SwapchainCreateInfo</a> <i>may</i> not be persistent throughout
--   the life cycle of the created swapchain, since on Android, the size of
--   the images is controlled by the producer and possibly changes at any
--   time.
--   
--   The only function that is allowed to be called on the <a>Swapchain</a>
--   returned from this function is <a>destroySwapchain</a>. For example,
--   calling any of the functions <a>enumerateSwapchainImages</a>,
--   <a>acquireSwapchainImage</a>, <a>waitSwapchainImage</a> or
--   <a>releaseSwapchainImage</a> is invalid.
--   
--   When the application receives the <a>EventDataSessionStateChanged</a>
--   event with the <a>SESSION_STATE_STOPPING</a> state, it <i>must</i>
--   ensure that no threads are writing to any of the Android surfaces
--   created with this extension before calling <a>endSession</a>. The
--   effect of writing frames to the Surface when the session is in states
--   other than <a>SESSION_STATE_VISIBLE</a> or
--   <a>SESSION_STATE_FOCUSED</a> is undefined.
--   
--   <a>createSwapchainAndroidSurfaceKHR</a> <i>must</i> return the same
--   set of error codes as <a>createSwapchain</a> under the same
--   circumstances, plus <a>ERROR_FUNCTION_UNSUPPORTED</a> in case the
--   function is not supported.
--   
--   <h2>Valid Usage of <a>SwapchainCreateInfo</a> members</h2>
--   
--   <ul>
--   <li>The <a>SwapchainCreateInfo</a>::<tt>format</tt>,
--   <a>SwapchainCreateInfo</a>::<tt>sampleCount</tt>,
--   <a>SwapchainCreateInfo</a>::<tt>faceCount</tt>,
--   <a>SwapchainCreateInfo</a>::<tt>arraySize</tt> and
--   <a>SwapchainCreateInfo</a>::<tt>mipCount</tt> members of the structure
--   passed as the <tt>info</tt> parameter <i>must</i> be zero.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createSwapchainAndroidSurfaceKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>info</tt> <i>must</i> be a pointer to a valid
--   <a>SwapchainCreateInfo</a> structure</li>
--   <li><tt>swapchain</tt> <i>must</i> be a pointer to an <a>Swapchain</a>
--   handle</li>
--   <li><tt>surface</tt> <i>must</i> be a pointer to a <tt>jobject</tt>
--   value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>Swapchain</a>, <a>SwapchainCreateInfo</a>,
--   <a>destroySwapchain</a>
createSwapchainAndroidSurfaceKHR :: forall a io. (Extendss SwapchainCreateInfo a, PokeChain a, MonadIO io) => Session -> SwapchainCreateInfo a -> ("surface" ::: Ptr Jobject) -> io (Result, Swapchain)

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createSwapchainAndroidSurfaceKHR</a> and <a>destroySwapchain</a>
--   
--   To ensure that <a>destroySwapchain</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withSwapchainAndroidSurfaceKHR :: forall a io r. (Extendss SwapchainCreateInfo a, PokeChain a, MonadIO io) => Session -> SwapchainCreateInfo a -> Ptr Jobject -> (io (Result, Swapchain) -> ((Result, Swapchain) -> io ()) -> r) -> r
type KHR_android_surface_swapchain_SPEC_VERSION = 4
pattern KHR_android_surface_swapchain_SPEC_VERSION :: forall a. Integral a => a
type KHR_ANDROID_SURFACE_SWAPCHAIN_EXTENSION_NAME = "XR_KHR_android_surface_swapchain"
pattern KHR_ANDROID_SURFACE_SWAPCHAIN_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
data Jobject

module OpenXR.Core10.Haptics

-- | xrApplyHapticFeedback - Apply haptic feedback
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Triggers a haptic event through the specified action of type
--   <a>TYPE_HAPTIC_VIBRATION</a>. The runtime <i>should</i> deliver this
--   request to the appropriate device, but exactly which device, if any,
--   this event is sent to is up to the runtime to decide. If an
--   appropriate device is unavailable the runtime <i>may</i> ignore this
--   request for haptic feedback.
--   
--   If another haptic event from this session is currently happening on
--   the device bound to this action, the runtime <i>must</i> interrupt
--   that other event and replace it with the new one.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_ACTION_TYPE_MISMATCH</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HapticActionInfo</a>, <a>HapticBaseHeader</a>,
--   <a>HapticVibration</a>, <a>Session</a>, <a>stopHapticFeedback</a>
applyHapticFeedback :: forall a io. (ToCStruct a, MonadIO io) => Session -> HapticActionInfo -> ("hapticFeedback" ::: a) -> io Result

-- | xrStopHapticFeedback - Stop haptic feedback
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a haptic event from this <a>Action</a> is in progress, when this
--   function is called the runtime <i>must</i> stop that event.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_ACTIONSET_NOT_ATTACHED</a></li><li><a>ERROR_ACTION_TYPE_MISMATCH</a></li><li><a>ERROR_PATH_INVALID</a></li><li><a>ERROR_PATH_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>HapticActionInfo</a>, <a>Session</a>, <a>applyHapticFeedback</a>
stopHapticFeedback :: forall io. MonadIO io => Session -> HapticActionInfo -> io Result

-- | XrHapticBaseHeader - Base header for haptic feedback
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>HapticVibration</a>, <a>InteractionProfileAnalogThresholdVALVE</a>,
--   <a>StructureType</a>, <a>applyHapticFeedback</a>
data HapticBaseHeader
HapticBaseHeader :: StructureType -> HapticBaseHeader

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
--   
--   <tt>type</tt> <i>must</i> be <a>TYPE_HAPTIC_VIBRATION</a>
[$sel:type':HapticBaseHeader] :: HapticBaseHeader -> StructureType
class ToCStruct a => IsHaptic a
toHapticBaseHeader :: IsHaptic a => a -> HapticBaseHeader

-- | XrHapticActionInfo - Information to output haptic feedback
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   See <a>ActionCreateInfo</a> for a description of subaction paths, and
--   the restrictions on their use.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>StructureType</a>, <a>applyHapticFeedback</a>,
--   <a>stopHapticFeedback</a>
data HapticActionInfo
HapticActionInfo :: Ptr Action_T -> Path -> HapticActionInfo

-- | <tt>action</tt> is the <a>Action</a> handle for the desired output
--   haptic action.
--   
--   <tt>action</tt> <i>must</i> be a valid <a>Action</a> handle
[$sel:action:HapticActionInfo] :: HapticActionInfo -> Ptr Action_T

-- | <tt>subactionPath</tt> is the subaction path
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>
--   of the device to send the haptic event to, or <a>NULL_PATH</a> to
--   specify all subaction paths. If the subaction path is specified, it is
--   one of the subaction paths that were specified when the action was
--   created. If the subaction path was not specified when the action was
--   created, the runtime <i>must</i> return <a>ERROR_PATH_UNSUPPORTED</a>.
--   If this parameter is specified, the runtime <i>must</i> trigger the
--   haptic events only on the device from the subaction path.
[$sel:subactionPath:HapticActionInfo] :: HapticActionInfo -> Path
instance GHC.Classes.Eq OpenXR.Core10.Haptics.HapticActionInfo
instance GHC.Classes.Eq OpenXR.Core10.Haptics.HapticBaseHeader
instance GHC.Show.Show OpenXR.Core10.Haptics.HapticBaseHeader
instance GHC.Show.Show OpenXR.Core10.Haptics.HapticActionInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Haptics.HapticActionInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Haptics.HapticActionInfo
instance Foreign.Storable.Storable OpenXR.Core10.Haptics.HapticActionInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Haptics.HapticActionInfo
instance OpenXR.CStruct.Extends.Inheritable OpenXR.Core10.Haptics.HapticBaseHeader
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Haptics.HapticBaseHeader
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Haptics.HapticBaseHeader
instance Foreign.Storable.Storable OpenXR.Core10.Haptics.HapticBaseHeader
instance Vulkan.Zero.Zero OpenXR.Core10.Haptics.HapticBaseHeader


-- | <h1>Name</h1>
--   
--   XR_VALVE_analog_threshold - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_VALVE_analog_threshold</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   80
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>InteractionProfileAnalogThresholdVALVE</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_VALVE_analog_threshold

-- | XrInteractionProfileAnalogThresholdVALVE - Interaction profile dpad
--   binding
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Applications can chain an
--   <a>InteractionProfileAnalogThresholdVALVE</a> struct on the next chain
--   of any <a>suggestInteractionProfileBindings</a> call for each analog
--   to boolean conversion for which it wants to set the threshold. If a
--   threshold struct is present for a given conversion, the runtime
--   <i>must</i> use those thresholds instead of applying its own whenever
--   it is using the binding suggested by the application.
--   
--   <tt>onThreshold</tt> and <tt>offThreshold</tt> permit allow the
--   application to specify that it wants hysteresis to be applied to the
--   threshold operation. If <tt>onThreshold</tt> is smaller than
--   <tt>offThreshold</tt>, the runtime <i>must</i> return
--   <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   <tt>onHaptic</tt> and <tt>offHaptic</tt> allow the application to
--   specify that it wants automatic haptic feedback to be generated when
--   the boolean output of the threshold operation changes from false to
--   true or vice versa. If these fields are not NULL, the runtime
--   <i>must</i> trigger a haptic output with the specified
--   characteristics. If the device has multiple haptic outputs, the
--   runtime <i>should</i> use the haptic output that is most appropriate
--   for the specified input path.
--   
--   If a suggested binding with <tt>action</tt> and <tt>binding</tt> is
--   not in the binding list for this interaction profile, the runtime
--   <i>must</i> return <a>ERROR_PATH_UNSUPPORTED</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>InteractionProfileAnalogThresholdVALVE</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_INTERACTION_PROFILE_ANALOG_THRESHOLD_VALVE</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>action</tt> <i>must</i> be a valid <a>Action</a> handle</li>
--   <li>If <tt>onHaptic</tt> is not <tt>NULL</tt>, <tt>onHaptic</tt>
--   <i>must</i> be a pointer to a valid <a>HapticBaseHeader</a>-based
--   structure. See also: <a>HapticVibration</a></li>
--   <li>If <tt>offHaptic</tt> is not <tt>NULL</tt>, <tt>offHaptic</tt>
--   <i>must</i> be a pointer to a valid <a>HapticBaseHeader</a>-based
--   structure. See also: <a>HapticVibration</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Action</a>, <a>HapticBaseHeader</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrPath</a>,
--   <a>StructureType</a>
data InteractionProfileAnalogThresholdVALVE
InteractionProfileAnalogThresholdVALVE :: Ptr Action_T -> Path -> Float -> Float -> Maybe (SomeChild HapticBaseHeader) -> Maybe (SomeChild HapticBaseHeader) -> InteractionProfileAnalogThresholdVALVE

-- | <tt>action</tt> is the handle of an action in the suggested binding
--   list.
[$sel:action:InteractionProfileAnalogThresholdVALVE] :: InteractionProfileAnalogThresholdVALVE -> Ptr Action_T

-- | <tt>binding</tt> is the input path used for the specified action in
--   the suggested binding list.
[$sel:binding:InteractionProfileAnalogThresholdVALVE] :: InteractionProfileAnalogThresholdVALVE -> Path

-- | <tt>onThreshold</tt> is the value between 0.0 and 1.0 at which the
--   runtime <i>must</i> consider the binding to be true. The binding must
--   remain true until the input analog value falls below
--   <tt>offThreshold</tt>.
[$sel:onThreshold:InteractionProfileAnalogThresholdVALVE] :: InteractionProfileAnalogThresholdVALVE -> Float

-- | <tt>offThreshold</tt> is the value between 0.0 and 1.0 at which the
--   runtime <i>must</i> consider the binding to be false if it was
--   previous true.
[$sel:offThreshold:InteractionProfileAnalogThresholdVALVE] :: InteractionProfileAnalogThresholdVALVE -> Float

-- | <tt>onHaptic</tt> is the haptic output that the runtime <i>must</i>
--   trigger when the binding changes from false to true. If this field is
--   NULL, the runtime <i>must</i> not trigger any haptic output on the
--   threshold. This field <i>can</i> point to any supported sub-type of
--   <a>HapticBaseHeader</a>.
[$sel:onHaptic:InteractionProfileAnalogThresholdVALVE] :: InteractionProfileAnalogThresholdVALVE -> Maybe (SomeChild HapticBaseHeader)

-- | <tt>offHaptic</tt> is the haptic output that the runtime <i>must</i>
--   trigger when the binding changes from true to false. If this field is
--   NULL, the runtime <i>must</i> not trigger any haptic output on the
--   threshold. This field <i>can</i> point to any supported sub-type of
--   <a>HapticBaseHeader</a>.
[$sel:offHaptic:InteractionProfileAnalogThresholdVALVE] :: InteractionProfileAnalogThresholdVALVE -> Maybe (SomeChild HapticBaseHeader)
type VALVE_analog_threshold_SPEC_VERSION = 1
pattern VALVE_analog_threshold_SPEC_VERSION :: forall a. Integral a => a
type VALVE_ANALOG_THRESHOLD_EXTENSION_NAME = "XR_VALVE_analog_threshold"
pattern VALVE_ANALOG_THRESHOLD_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_VALVE_analog_threshold.InteractionProfileAnalogThresholdVALVE
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_VALVE_analog_threshold.InteractionProfileAnalogThresholdVALVE
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_VALVE_analog_threshold.InteractionProfileAnalogThresholdVALVE
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_VALVE_analog_threshold.InteractionProfileAnalogThresholdVALVE

module OpenXR.Core10.OtherTypes

-- | XrVector4f - Four-dimensional vector
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If used to represent physical distances, <tt>x</tt>, <tt>y</tt>, and
--   <tt>z</tt> values <i>must</i> be in meters.
--   
--   <h1>See Also</h1>
--   
--   <a>Posef</a>, <a>Quaternionf</a>, <a>Vector2f</a>, <a>Vector3f</a>
data Vector4f
Vector4f :: Float -> Float -> Float -> Float -> Vector4f

-- | <tt>x</tt> is the x coordinate of the vector.
[$sel:x:Vector4f] :: Vector4f -> Float

-- | <tt>y</tt> is the y coordinate of the vector.
[$sel:y:Vector4f] :: Vector4f -> Float

-- | <tt>z</tt> is the z coordinate of the vector.
[$sel:z:Vector4f] :: Vector4f -> Float

-- | <tt>w</tt> is the w coordinate of the vector.
[$sel:w:Vector4f] :: Vector4f -> Float

-- | XrColor4f - Color Vector
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Unless otherwise specified, colors are encoded as linear (not with
--   sRGB nor other gamma compression) values with individual components
--   being in the range of 0.0 through 1.0, and without the RGB components
--   being premultiplied by the alpha component.
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerColorScaleBiasKHR</a>
data Color4f
Color4f :: Float -> Float -> Float -> Float -> Color4f

-- | <tt>r</tt> is the red component of the color.
[$sel:r:Color4f] :: Color4f -> Float

-- | <tt>g</tt> is the green component of the color.
[$sel:g:Color4f] :: Color4f -> Float

-- | <tt>b</tt> is the blue component of the color.
[$sel:b:Color4f] :: Color4f -> Float

-- | <tt>a</tt> is the alpha component of the color.
[$sel:a:Color4f] :: Color4f -> Float

-- | XrFovf - Field of view
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Angles to the right of the center and upwards from the center are
--   positive, and angles to the left of the center and down from the
--   center are negative. The total horizontal field of view is
--   <tt>angleRight</tt> minus <tt>angleLeft</tt>, and the total vertical
--   field of view is <tt>angleUp</tt> minus <tt>angleDown</tt>. For a
--   symmetric FoV, <tt>angleRight</tt> and <tt>angleUp</tt> will have
--   positive values, <tt>angleLeft</tt> will be -<tt>angleRight</tt>, and
--   <tt>angleDown</tt> will be -<tt>angleUp</tt>.
--   
--   The angles <i>must</i> be specified in radians, and <i>must</i> be
--   between -π/2 and π/2 exclusively.
--   
--   When <tt>angleLeft</tt> &gt; <tt>angleRight</tt>, the content of the
--   view <i>must</i> be flipped horizontally. When <tt>angleDown</tt> &gt;
--   <tt>angleUp</tt>, the content of the view <i>must</i> be flipped
--   vertically.
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerProjectionView</a>, <a>View</a>,
--   <a>ViewConfigurationViewFovEPIC</a>
data Fovf
Fovf :: Float -> Float -> Float -> Float -> Fovf

-- | <tt>angleLeft</tt> is the angle of the left side of the field of view.
--   For a symmetric field of view this value is negative.
[$sel:angleLeft:Fovf] :: Fovf -> Float

-- | <tt>angleRight</tt> is the angle of the right side of the field of
--   view.
[$sel:angleRight:Fovf] :: Fovf -> Float

-- | <tt>angleUp</tt> is the angle of the top part of the field of view.
[$sel:angleUp:Fovf] :: Fovf -> Float

-- | <tt>angleDown</tt> is the angle of the bottom part of the field of
--   view. For a symmetric field of view this value is negative.
[$sel:angleDown:Fovf] :: Fovf -> Float

-- | XrSwapchainSubImage - Composition layer data
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerDepthInfoKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>,
--   <a>CompositionLayerProjectionView</a>, <a>CompositionLayerQuad</a>,
--   <a>FrameEndInfo</a>, <a>Rect2Di</a>, <a>Swapchain</a>
data SwapchainSubImage
SwapchainSubImage :: Ptr Swapchain_T -> Rect2Di -> Word32 -> SwapchainSubImage

-- | <tt>swapchain</tt> is the <a>Swapchain</a> to be displayed.
--   
--   <tt>swapchain</tt> <i>must</i> be a valid <a>Swapchain</a> handle
[$sel:swapchain:SwapchainSubImage] :: SwapchainSubImage -> Ptr Swapchain_T

-- | <tt>imageRect</tt> is an <a>Rect2Di</a> representing the valid portion
--   of the image to use, in pixels. It also implicitly defines the
--   transform from normalized image coordinates into pixel coordinates.
--   Note that the compositor <i>may</i> bleed in pixels from outside the
--   bounds in some cases, for instance due to mipmapping.
[$sel:imageRect:SwapchainSubImage] :: SwapchainSubImage -> Rect2Di

-- | <tt>imageArrayIndex</tt> is the image array index, with 0 meaning the
--   first or only array element.
[$sel:imageArrayIndex:SwapchainSubImage] :: SwapchainSubImage -> Word32

-- | XrCompositionLayerBaseHeader - Composition layer base header
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   All composition layer structures begin with the elements described in
--   the <a>CompositionLayerBaseHeader</a>. The
--   <a>CompositionLayerBaseHeader</a> structure is not intended to be
--   directly used, but forms a basis for defining current and future
--   structures containing composition layer information. The
--   <a>FrameEndInfo</a> structure contains an array of pointers to these
--   polymorphic header structures. All composition layer type pointers
--   <i>must</i> be type-castable as an <a>CompositionLayerBaseHeader</a>
--   pointer.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerFlags</a>, <a>FrameEndInfo</a>,
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a>, <a>Space</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>
data CompositionLayerBaseHeader (es :: [Type])
CompositionLayerBaseHeader :: StructureType -> Chain es -> CompositionLayerFlags -> Ptr Space_T -> CompositionLayerBaseHeader (es :: [Type])

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
--   
--   <tt>type</tt> <i>must</i> be one of the following XrStructureType
--   values: <a>TYPE_COMPOSITION_LAYER_CUBE_KHR</a>,
--   <a>TYPE_COMPOSITION_LAYER_CYLINDER_KHR</a>,
--   <a>TYPE_COMPOSITION_LAYER_EQUIRECT2_KHR</a>,
--   <a>TYPE_COMPOSITION_LAYER_EQUIRECT_KHR</a>,
--   <a>TYPE_COMPOSITION_LAYER_PROJECTION</a>,
--   <a>TYPE_COMPOSITION_LAYER_QUAD</a>
[$sel:type':CompositionLayerBaseHeader] :: CompositionLayerBaseHeader (es :: [Type]) -> StructureType

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>CompositionLayerColorScaleBiasKHR</a>
[$sel:next:CompositionLayerBaseHeader] :: CompositionLayerBaseHeader (es :: [Type]) -> Chain es

-- | <tt>layerFlags</tt> is a bitmask of <a>XrCompositionLayerFlagBits</a>
--   describing flags to apply to the layer.
--   
--   <tt>layerFlags</tt> <i>must</i> be <tt>0</tt> or a valid combination
--   of <a>XrCompositionLayerFlagBits</a> values
[$sel:layerFlags:CompositionLayerBaseHeader] :: CompositionLayerBaseHeader (es :: [Type]) -> CompositionLayerFlags

-- | <tt>space</tt> is the <a>Space</a> in which the layer will be kept
--   stable over time.
--   
--   <tt>space</tt> <i>must</i> be a valid <a>Space</a> handle
[$sel:space:CompositionLayerBaseHeader] :: CompositionLayerBaseHeader (es :: [Type]) -> Ptr Space_T
class ToCStruct a => IsCompositionLayer a
toCompositionLayerBaseHeader :: IsCompositionLayer a => a -> CompositionLayerBaseHeader '[]

-- | XrCompositionLayerProjectionView - Projection layer element
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The count and order of view poses submitted with
--   <a>CompositionLayerProjection</a> <i>must</i> be the same order as
--   that returned by <a>locateViews</a>. The
--   <a>CompositionLayerProjectionView</a>::<tt>pose</tt> and
--   <a>CompositionLayerProjectionView</a>::<tt>fov</tt> <i>should</i>
--   almost always derive from <a>View</a>::<tt>pose</tt> and
--   <a>View</a>::<tt>fov</tt> as found in the
--   <a>locateViews</a>::<tt>views</tt> array. However, applications
--   <i>may</i> submit an <a>CompositionLayerProjectionView</a> which has a
--   different view or FOV than that from <a>locateViews</a>. In this case,
--   the runtime will map the view and FOV to the system display
--   appropriately. In the case that two submitted views within a single
--   layer overlap, they <i>must</i> be composited in view array order.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerProjection</a>, <a>Fovf</a>, <a>Posef</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>
data CompositionLayerProjectionView (es :: [Type])
CompositionLayerProjectionView :: Chain es -> Posef -> Fovf -> SwapchainSubImage -> CompositionLayerProjectionView (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>CompositionLayerDepthInfoKHR</a>
[$sel:next:CompositionLayerProjectionView] :: CompositionLayerProjectionView (es :: [Type]) -> Chain es

-- | <tt>pose</tt> is an <a>Posef</a> defining the location and orientation
--   of this projection element in the <tt>space</tt> of the corresponding
--   <a>CompositionLayerProjectionView</a>.
[$sel:pose:CompositionLayerProjectionView] :: CompositionLayerProjectionView (es :: [Type]) -> Posef

-- | <tt>fov</tt> is the <a>Fovf</a> for this projection element.
[$sel:fov:CompositionLayerProjectionView] :: CompositionLayerProjectionView (es :: [Type]) -> Fovf

-- | <tt>subImage</tt> is the image layer <a>SwapchainSubImage</a> to use.
--   
--   <tt>subImage</tt> <i>must</i> be a valid <a>SwapchainSubImage</a>
--   structure
[$sel:subImage:CompositionLayerProjectionView] :: CompositionLayerProjectionView (es :: [Type]) -> SwapchainSubImage

-- | XrCompositionLayerProjection - Composition layer for projection
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Note
--   
--   Because a runtime may reproject the layer over time, a projection
--   layer should specify an <a>Space</a> in which to maximize stability of
--   the layer content. For example, a projection layer containing
--   world-locked content should use an <a>Space</a> which is also
--   world-locked, such as the <tt>LOCAL</tt> or <tt>STAGE</tt> reference
--   spaces. In the case that the projection layer should be head-locked,
--   such as a heads up display, the <tt>VIEW</tt> reference space would
--   provide the highest quality layer reprojection.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_COMPOSITION_LAYER_PROJECTION</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>layerFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrCompositionLayerFlagBits</a> values</li>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   <li><tt>views</tt> <i>must</i> be a pointer to an array of
--   <tt>viewCount</tt> valid <a>CompositionLayerProjectionView</a>
--   structures</li>
--   <li>The <tt>viewCount</tt> parameter <i>must</i> be greater than
--   <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerFlags</a>,
--   <a>CompositionLayerProjectionView</a>, <a>Space</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>
data CompositionLayerProjection
CompositionLayerProjection :: CompositionLayerFlags -> Ptr Space_T -> Vector (SomeStruct CompositionLayerProjectionView) -> CompositionLayerProjection

-- | <tt>layerFlags</tt> is a bitmask of <a>XrCompositionLayerFlagBits</a>
--   describing flags to apply to the layer.
[$sel:layerFlags:CompositionLayerProjection] :: CompositionLayerProjection -> CompositionLayerFlags

-- | <tt>space</tt> is the <a>Space</a> in which the <tt>pose</tt> of each
--   <a>CompositionLayerProjectionView</a> is evaluated over time by the
--   compositor.
[$sel:space:CompositionLayerProjection] :: CompositionLayerProjection -> Ptr Space_T

-- | <tt>views</tt> is the array of type
--   <a>CompositionLayerProjectionView</a> containing each projection layer
--   view.
[$sel:views:CompositionLayerProjection] :: CompositionLayerProjection -> Vector (SomeStruct CompositionLayerProjectionView)

-- | XrCompositionLayerQuad - Quad composition layer
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>CompositionLayerQuad</a> layer is useful for user interface
--   elements or 2D content rendered into the virtual world. The layer’s
--   <a>SwapchainSubImage</a>::swapchain image is applied to a quad in the
--   virtual world space. Only front face of the quad surface is visible;
--   the back face is not visible and <i>must</i> not be drawn by the
--   runtime. A quad layer has no thickness; it is a two-dimensional object
--   positioned and oriented in 3D space. The position of a quad refers to
--   the center of the quad within the given <a>Space</a>. The orientation
--   of the quad refers to the orientation of the normal vector from the
--   front face. The size of a quad refers to the quad’s size in the x-y
--   plane of the given <a>Space</a>’s coordinate system. A quad with a
--   position of {0,0,0}, rotation of {0,0,0,1} (no rotation), and a size
--   of {1,1} refers to a 1 meter x 1 meter quad centered at {0,0,0} with
--   its front face normal vector coinciding with the +z axis.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerFlags</a>,
--   <a>Extent2Df</a>, <a>EyeVisibility</a>, <a>Posef</a>, <a>Space</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>
data CompositionLayerQuad
CompositionLayerQuad :: CompositionLayerFlags -> Ptr Space_T -> EyeVisibility -> SwapchainSubImage -> Posef -> Extent2Df -> CompositionLayerQuad

-- | <tt>layerFlags</tt> is a bitmask of <a>XrCompositionLayerFlagBits</a>
--   describing flags to apply to the layer.
--   
--   <tt>layerFlags</tt> <i>must</i> be <tt>0</tt> or a valid combination
--   of <a>XrCompositionLayerFlagBits</a> values
[$sel:layerFlags:CompositionLayerQuad] :: CompositionLayerQuad -> CompositionLayerFlags

-- | <tt>space</tt> is the <a>Space</a> in which the <tt>pose</tt> of the
--   quad layer is evaluated over time.
--   
--   <tt>space</tt> <i>must</i> be a valid <a>Space</a> handle
[$sel:space:CompositionLayerQuad] :: CompositionLayerQuad -> Ptr Space_T

-- | <tt>eyeVisibility</tt> is the <a>EyeVisibility</a> for this layer.
--   
--   <tt>eyeVisibility</tt> <i>must</i> be a valid <a>EyeVisibility</a>
--   value
[$sel:eyeVisibility:CompositionLayerQuad] :: CompositionLayerQuad -> EyeVisibility

-- | <tt>subImage</tt> is the image layer <a>SwapchainSubImage</a> to use.
--   
--   <tt>subImage</tt> <i>must</i> be a valid <a>SwapchainSubImage</a>
--   structure
[$sel:subImage:CompositionLayerQuad] :: CompositionLayerQuad -> SwapchainSubImage

-- | <tt>pose</tt> is an <a>Posef</a> defining the position and orientation
--   of the quad in the reference frame of the <tt>space</tt>.
[$sel:pose:CompositionLayerQuad] :: CompositionLayerQuad -> Posef

-- | <tt>size</tt> is the width and height of the quad in meters.
[$sel:size:CompositionLayerQuad] :: CompositionLayerQuad -> Extent2Df

-- | XrHapticVibration - Base header for haptic feedback
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>HapticVibration</a> is used in calls to
--   <a>applyHapticFeedback</a> that trigger <tt>vibration</tt> output
--   actions.
--   
--   The <tt>duration</tt>, and <tt>frequency</tt> parameters <i>may</i> be
--   clamped to implementation-dependent ranges.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>,
--   <a>HapticBaseHeader</a>, <a>StructureType</a>,
--   <a>applyHapticFeedback</a>
data HapticVibration
HapticVibration :: Duration -> Float -> Float -> HapticVibration

-- | <tt>duration</tt> is the number of nanoseconds the vibration
--   <i>should</i> last. If <a>MIN_HAPTIC_DURATION</a> is specified, the
--   runtime <i>must</i> produce a short haptics pulse of minimal supported
--   duration for the haptic device.
[$sel:duration:HapticVibration] :: HapticVibration -> Duration

-- | <tt>frequency</tt> is the frequency of the vibration in Hz. If
--   <a>FREQUENCY_UNSPECIFIED</a> is specified, it is left to the runtime
--   to decide the optimal frequency value to use.
[$sel:frequency:HapticVibration] :: HapticVibration -> Float

-- | <tt>amplitude</tt> is the amplitude of the vibration between 0.0 and
--   1.0.
[$sel:amplitude:HapticVibration] :: HapticVibration -> Float

-- | XrEventDataBaseHeader - Base header for an event
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>EventDataBaseHeader</a> is a generic structure used to identify
--   the common event data elements.
--   
--   Upon receipt, the <a>EventDataBaseHeader</a> pointer should be
--   type-cast to a pointer of the appropriate event data based on the
--   <tt>type</tt> parameter.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>pollEvent</a>
data EventDataBaseHeader
EventDataBaseHeader :: StructureType -> EventDataBaseHeader

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
--   
--   <tt>type</tt> <i>must</i> be one of the following XrStructureType
--   values: <a>TYPE_EVENT_DATA_DISPLAY_REFRESH_RATE_CHANGED_FB</a>,
--   <a>TYPE_EVENT_DATA_EVENTS_LOST</a>,
--   <a>TYPE_EVENT_DATA_INSTANCE_LOSS_PENDING</a>,
--   <a>TYPE_EVENT_DATA_INTERACTION_PROFILE_CHANGED</a>,
--   <a>TYPE_EVENT_DATA_MAIN_SESSION_VISIBILITY_CHANGED_EXTX</a>,
--   <a>TYPE_EVENT_DATA_PERF_SETTINGS_EXT</a>,
--   <a>TYPE_EVENT_DATA_REFERENCE_SPACE_CHANGE_PENDING</a>,
--   <a>TYPE_EVENT_DATA_SESSION_STATE_CHANGED</a>,
--   <a>TYPE_EVENT_DATA_VISIBILITY_MASK_CHANGED_KHR</a>
[$sel:type':EventDataBaseHeader] :: EventDataBaseHeader -> StructureType
class ToCStruct a => IsEventData a
toEventDataBaseHeader :: IsEventData a => a -> EventDataBaseHeader

-- | XrEventDataEventsLost - Event indicating events were lost
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Receiving the <a>EventDataEventsLost</a> event structure indicates
--   that the event queue overflowed and some events were removed at the
--   position within the queue at which this event was found.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataBaseHeader</a>, <a>StructureType</a>, <a>pollEvent</a>
data EventDataEventsLost
EventDataEventsLost :: Word32 -> EventDataEventsLost

-- | <tt>lostEventCount</tt> is the number of events which have overflowed
--   since the last call to <a>pollEvent</a>.
[$sel:lostEventCount:EventDataEventsLost] :: EventDataEventsLost -> Word32

-- | XrEventDataInstanceLossPending - Event indicating instance loss will
--   occur
--   
--   <h1>Members</h1>
--   
--   Receiving the <a>EventDataInstanceLossPending</a> event structure
--   indicates that the application is about to lose the indicated
--   <a>Instance</a> at the indicated <tt>lossTime</tt> in the future. The
--   application should call <a>destroyInstance</a> and relinquish any
--   instance-specific resources. This typically occurs to make way for a
--   replacement of the underlying runtime, such as via a software update.
--   
--   <h1>Description</h1>
--   
--   After the application has destroyed all of its instances and their
--   children and waited past the specified time, it may then re-try
--   <a>createInstance</a> in a loop waiting for whatever maintenance the
--   runtime is performing to complete. The runtime will return
--   <a>ERROR_INSTANCE_LOST</a> from <a>createInstance</a> as long as it is
--   unable to create the instance. Once the runtime has returned and is
--   able to continue, it <i>must</i> resume returning <a>SUCCESS</a> from
--   <a>createInstance</a> if valid data is passed in.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataBaseHeader</a>, <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>pollEvent</a>
data EventDataInstanceLossPending
EventDataInstanceLossPending :: Time -> EventDataInstanceLossPending

-- | <tt>lossTime</tt> is the absolute time at which the indicated instance
--   will be considered lost and become unusable.
[$sel:lossTime:EventDataInstanceLossPending] :: EventDataInstanceLossPending -> Time

-- | XrEventDataSessionStateChanged - Event indicating session state
--   changed
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Receiving the <a>EventDataSessionStateChanged</a> event structure
--   indicates that the application has changed lifecycle state.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataBaseHeader</a>, <a>Session</a>, <a>SessionState</a>,
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>pollEvent</a>
data EventDataSessionStateChanged
EventDataSessionStateChanged :: Ptr Session_T -> SessionState -> Time -> EventDataSessionStateChanged

-- | <tt>session</tt> is the <a>Session</a> which has changed state.
--   
--   <tt>session</tt> <i>must</i> be a valid <a>Session</a> handle
[$sel:session:EventDataSessionStateChanged] :: EventDataSessionStateChanged -> Ptr Session_T

-- | <tt>state</tt> is the current <a>SessionState</a> of the
--   <tt>session</tt>.
--   
--   <tt>state</tt> <i>must</i> be a valid <a>SessionState</a> value
[$sel:state:EventDataSessionStateChanged] :: EventDataSessionStateChanged -> SessionState

-- | <tt>time</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   which indicates the time of the state change.
[$sel:time:EventDataSessionStateChanged] :: EventDataSessionStateChanged -> Time

-- | XrEventDataReferenceSpaceChangePending - Notifies the application that
--   a reference space is changing
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>REFERENCE_SPACE_TYPE_STAGE</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>Posef</a>, <a>ReferenceSpaceType</a>, <a>Session</a>,
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>createReferenceSpace</a>
data EventDataReferenceSpaceChangePending
EventDataReferenceSpaceChangePending :: Ptr Session_T -> ReferenceSpaceType -> Time -> Bool -> Posef -> EventDataReferenceSpaceChangePending

-- | <tt>session</tt> is the <a>Session</a> for which the reference space
--   is changing.
--   
--   <tt>session</tt> <i>must</i> be a valid <a>Session</a> handle
[$sel:session:EventDataReferenceSpaceChangePending] :: EventDataReferenceSpaceChangePending -> Ptr Session_T

-- | <tt>referenceSpaceType</tt> is the <a>ReferenceSpaceType</a> that is
--   changing.
--   
--   <tt>referenceSpaceType</tt> <i>must</i> be a valid
--   <a>ReferenceSpaceType</a> value
[$sel:referenceSpaceType:EventDataReferenceSpaceChangePending] :: EventDataReferenceSpaceChangePending -> ReferenceSpaceType

-- | <tt>changeTime</tt> is the target
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   after which <a>locateSpace</a> or <a>locateViews</a> will return
--   values that respect this change.
[$sel:changeTime:EventDataReferenceSpaceChangePending] :: EventDataReferenceSpaceChangePending -> Time

-- | <tt>poseValid</tt> is true if the runtime can determine the
--   <tt>pose</tt> of the new space in the previous space before the
--   change.
[$sel:poseValid:EventDataReferenceSpaceChangePending] :: EventDataReferenceSpaceChangePending -> Bool

-- | <tt>poseInPreviousSpace</tt> is an <a>Posef</a> defining the position
--   and orientation of the new reference space’s natural origin within the
--   natural reference frame of its previous space.
[$sel:poseInPreviousSpace:EventDataReferenceSpaceChangePending] :: EventDataReferenceSpaceChangePending -> Posef

-- | XrEventDataInteractionProfileChanged - Notifies the application than
--   the active interaction profile has changed
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>EventDataInteractionProfileChanged</a> event is sent to the
--   application to notify it that the active input form factor for one or
--   more top level user paths has changed. This event <i>must</i> only be
--   sent for interaction profiles that the application indicated its
--   support for via <a>suggestInteractionProfileBindings</a>. This event
--   <i>must</i> only be sent for running sessions.
--   
--   The application <i>can</i> call <a>getCurrentInteractionProfile</a> if
--   it wants to change its own behavior based on the active hardware.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>StructureType</a>,
--   <a>getCurrentInteractionProfile</a>,
--   <a>suggestInteractionProfileBindings</a>
data EventDataInteractionProfileChanged
EventDataInteractionProfileChanged :: Ptr Session_T -> EventDataInteractionProfileChanged

-- | <tt>session</tt> is the <a>Session</a> for which at least one of the
--   interaction profiles for a top level path has changed.
--   
--   <tt>session</tt> <i>must</i> be a valid <a>Session</a> handle
[$sel:session:EventDataInteractionProfileChanged] :: EventDataInteractionProfileChanged -> Ptr Session_T

-- | XrOffset2Df - Float offset in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure is used for component values that may be fractional
--   (floating-point). If used to represent physical distances, values
--   <i>must</i> be in meters.
--   
--   <h1>See Also</h1>
--   
--   <a>Extent2Df</a>, <a>Rect2Df</a>
data Offset2Df
Offset2Df :: Float -> Float -> Offset2Df

-- | <tt>x</tt> the floating-point offset in the x direction.
[$sel:x:Offset2Df] :: Offset2Df -> Float

-- | <tt>y</tt> the floating-point offset in the y direction.
[$sel:y:Offset2Df] :: Offset2Df -> Float

-- | XrExtent2Df - Extent in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure is used for component values that may be fractional
--   (floating-point). If used to represent physical distances, values
--   <i>must</i> be in meters.
--   
--   The <tt>width</tt> and <tt>height</tt> value <i>must</i> be
--   non-negative.
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerQuad</a>, <a>Offset2Df</a>, <a>Rect2Df</a>,
--   <a>getReferenceSpaceBoundsRect</a>
data Extent2Df
Extent2Df :: Float -> Float -> Extent2Df

-- | <tt>width</tt> the floating-point width of the extent.
[$sel:width:Extent2Df] :: Extent2Df -> Float

-- | <tt>height</tt> the floating-point height of the extent.
[$sel:height:Extent2Df] :: Extent2Df -> Float

-- | XrRect2Df - Rect in two dimensions
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure is used for component values that may be fractional
--   (floating-point).
--   
--   <h1>See Also</h1>
--   
--   <a>Extent2Df</a>, <a>Offset2Df</a>
data Rect2Df
Rect2Df :: Offset2Df -> Extent2Df -> Rect2Df

-- | <tt>offset</tt> is the <a>Offset2Df</a> specifying the rectangle
--   offset.
[$sel:offset:Rect2Df] :: Rect2Df -> Offset2Df

-- | <tt>extent</tt> is the <a>Extent2Df</a> specifying the rectangle
--   extent.
[$sel:extent:Rect2Df] :: Rect2Df -> Extent2Df

-- | XrBaseInStructure - Convenience type for iterating (read only)
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>BaseInStructure</a> can be used to facilitate iterating through a
--   read-only structure pointer chain.
--   
--   <h1>See Also</h1>
--   
--   <a>BaseInStructure</a>, <a>BaseOutStructure</a>, <a>StructureType</a>
data BaseInStructure
BaseInStructure :: StructureType -> Ptr BaseInStructure -> BaseInStructure

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
[$sel:type':BaseInStructure] :: BaseInStructure -> StructureType

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
[$sel:next:BaseInStructure] :: BaseInStructure -> Ptr BaseInStructure

-- | XrBaseOutStructure - Convenience type for iterating (mutable)
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>BaseOutStructure</a> can be used to facilitate iterating through a
--   structure pointer chain that returns data back to the application.
--   
--   <h1>See Also</h1>
--   
--   <a>BaseInStructure</a>, <a>BaseOutStructure</a>, <a>StructureType</a>
data BaseOutStructure
BaseOutStructure :: StructureType -> Ptr BaseOutStructure -> BaseOutStructure

-- | <tt>type</tt> is the <a>StructureType</a> of this structure. This base
--   structure itself has no associated <a>StructureType</a> value.
[$sel:type':BaseOutStructure] :: BaseOutStructure -> StructureType

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
[$sel:next:BaseOutStructure] :: BaseOutStructure -> Ptr BaseOutStructure

-- | XrObjectType - Specify an enumeration to track object handle types
--   
--   <h1>Description</h1>
--   
--   The <a>ObjectType</a> enumeration defines values, each of which
--   corresponds to a specific OpenXR handle type. These values <i>can</i>
--   be used to associate debug information with a particular type of
--   object through one or more extensions.
--   
--   The following table defines <a>ObjectType</a> and OpenXR Handle
--   relationships:
--   
--   TODO: table
--   
--   <h1>See Also</h1>
--   
--   <a>DebugUtilsObjectNameInfoEXT</a>
newtype ObjectType
ObjectType :: Int32 -> ObjectType
pattern OBJECT_TYPE_UNKNOWN :: ObjectType
pattern OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT :: ObjectType
pattern OBJECT_TYPE_INSTANCE :: ObjectType
pattern OBJECT_TYPE_SESSION :: ObjectType
pattern OBJECT_TYPE_SWAPCHAIN :: ObjectType
pattern OBJECT_TYPE_SPACE :: ObjectType
pattern OBJECT_TYPE_ACTION_SET :: ObjectType
pattern OBJECT_TYPE_ACTION :: ObjectType
pattern OBJECT_TYPE_HAND_TRACKER_EXT :: ObjectType
pattern OBJECT_TYPE_SPATIAL_ANCHOR_MSFT :: ObjectType
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.EventDataInteractionProfileChanged
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.EventDataSessionStateChanged
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.EventDataInstanceLossPending
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.EventDataEventsLost
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.EventDataBaseHeader
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.HapticVibration
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.Fovf
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.Color4f
instance GHC.Classes.Eq OpenXR.Core10.OtherTypes.Vector4f
instance GHC.Show.Show OpenXR.Core10.OtherTypes.Vector4f
instance GHC.Show.Show OpenXR.Core10.OtherTypes.Color4f
instance GHC.Show.Show OpenXR.Core10.OtherTypes.Fovf
instance GHC.Show.Show OpenXR.Core10.OtherTypes.SwapchainSubImage
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader es)
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.OtherTypes.CompositionLayerProjectionView es)
instance GHC.Show.Show OpenXR.Core10.OtherTypes.CompositionLayerProjection
instance GHC.Show.Show OpenXR.Core10.OtherTypes.CompositionLayerQuad
instance GHC.Show.Show OpenXR.Core10.OtherTypes.HapticVibration
instance GHC.Show.Show OpenXR.Core10.OtherTypes.EventDataBaseHeader
instance GHC.Show.Show OpenXR.Core10.OtherTypes.EventDataEventsLost
instance GHC.Show.Show OpenXR.Core10.OtherTypes.EventDataInstanceLossPending
instance GHC.Show.Show OpenXR.Core10.OtherTypes.EventDataSessionStateChanged
instance GHC.Show.Show OpenXR.Core10.OtherTypes.EventDataReferenceSpaceChangePending
instance GHC.Show.Show OpenXR.Core10.OtherTypes.EventDataInteractionProfileChanged
instance OpenXR.CStruct.Extends.Inheritable OpenXR.Core10.OtherTypes.EventDataBaseHeader
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Core10.OtherTypes.EventDataInteractionProfileChanged
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.EventDataInteractionProfileChanged
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.EventDataInteractionProfileChanged
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.EventDataInteractionProfileChanged
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.EventDataInteractionProfileChanged
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Core10.OtherTypes.EventDataReferenceSpaceChangePending
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.EventDataReferenceSpaceChangePending
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.EventDataReferenceSpaceChangePending
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.EventDataReferenceSpaceChangePending
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.EventDataReferenceSpaceChangePending
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Core10.OtherTypes.EventDataSessionStateChanged
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.EventDataSessionStateChanged
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.EventDataSessionStateChanged
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.EventDataSessionStateChanged
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.EventDataSessionStateChanged
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Core10.OtherTypes.EventDataInstanceLossPending
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.EventDataInstanceLossPending
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.EventDataInstanceLossPending
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.EventDataInstanceLossPending
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.EventDataInstanceLossPending
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Core10.OtherTypes.EventDataEventsLost
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.EventDataEventsLost
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.EventDataEventsLost
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.EventDataEventsLost
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.EventDataEventsLost
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.EventDataBaseHeader
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.EventDataBaseHeader
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.EventDataBaseHeader
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.EventDataBaseHeader
instance OpenXR.Core10.Haptics.IsHaptic OpenXR.Core10.OtherTypes.HapticVibration
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.HapticVibration
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.HapticVibration
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.HapticVibration
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.HapticVibration
instance OpenXR.CStruct.Extends.Inheritable (OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader '[])
instance OpenXR.Core10.OtherTypes.IsCompositionLayer OpenXR.Core10.OtherTypes.CompositionLayerQuad
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.CompositionLayerQuad
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.CompositionLayerQuad
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.CompositionLayerQuad
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.CompositionLayerQuad
instance OpenXR.Core10.OtherTypes.IsCompositionLayer OpenXR.Core10.OtherTypes.CompositionLayerProjection
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.CompositionLayerProjection
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.CompositionLayerProjection
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.CompositionLayerProjection
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.OtherTypes.CompositionLayerProjectionView
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.OtherTypes.CompositionLayerProjectionView es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.OtherTypes.CompositionLayerProjectionView es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.OtherTypes.CompositionLayerProjectionView es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.OtherTypes.CompositionLayerProjectionView es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.OtherTypes.CompositionLayerProjectionView es)
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.OtherTypes.CompositionLayerBaseHeader es)
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.SwapchainSubImage
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.SwapchainSubImage
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.SwapchainSubImage
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.SwapchainSubImage
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.Fovf
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.Fovf
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.Fovf
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.Fovf
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.Color4f
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.Color4f
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.Color4f
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.Color4f
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.OtherTypes.Vector4f
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.OtherTypes.Vector4f
instance Foreign.Storable.Storable OpenXR.Core10.OtherTypes.Vector4f
instance Vulkan.Zero.Zero OpenXR.Core10.OtherTypes.Vector4f


-- | <h1>Name</h1>
--   
--   XR_MSFT_secondary_view_configuration - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MSFT_secondary_view_configuration</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   54
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>SecondaryViewConfigurationFrameEndInfoMSFT</a>,
--   <a>SecondaryViewConfigurationFrameStateMSFT</a>,
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a>,
--   <a>SecondaryViewConfigurationSessionBeginInfoMSFT</a>,
--   <a>SecondaryViewConfigurationStateMSFT</a>,
--   <a>SecondaryViewConfigurationSwapchainCreateInfoMSFT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MSFT_secondary_view_configuration

-- | XrSecondaryViewConfigurationSessionBeginInfoMSFT - Describes an
--   extension structure to <a>beginSession</a> indicating supported view
--   configuration types.
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If there are any duplicated view configuration types in the array of
--   <tt>enabledViewConfigurationTypes</tt>, the runtime <i>must</i> return
--   error <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   If there are any primary view configuration types in the array of
--   <tt>enabledViewConfigurationTypes</tt>, the runtime <i>must</i> return
--   error <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   If there are any secondary view configuration types not returned by
--   <a>enumerateViewConfigurations</a> in the array of
--   <tt>enabledViewConfigurationTypes</tt>, the runtime <i>must</i> return
--   error <a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SecondaryViewConfigurationSessionBeginInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SECONDARY_VIEW_CONFIGURATION_SESSION_BEGIN_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>enabledViewConfigurationTypes</tt> <i>must</i> be a pointer to
--   an array of <tt>viewConfigurationCount</tt> valid
--   <a>ViewConfigurationType</a> values</li>
--   <li>The <tt>viewConfigurationCount</tt> parameter <i>must</i> be
--   greater than <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>SessionBeginInfo</a>, <a>StructureType</a>,
--   <a>ViewConfigurationType</a>
data SecondaryViewConfigurationSessionBeginInfoMSFT
SecondaryViewConfigurationSessionBeginInfoMSFT :: Vector ViewConfigurationType -> SecondaryViewConfigurationSessionBeginInfoMSFT

-- | <tt>enabledViewConfigurationTypes</tt> is an array of enabled
--   secondary view configuration types that application supports.
[$sel:enabledViewConfigurationTypes:SecondaryViewConfigurationSessionBeginInfoMSFT] :: SecondaryViewConfigurationSessionBeginInfoMSFT -> Vector ViewConfigurationType

-- | XrSecondaryViewConfigurationStateMSFT - Returns the state of an
--   enabled secondary view configuration.
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When a secondary view configuration becomes active, the application
--   <i>should</i> render its secondary views as soon as possible, by
--   getting their view transforms and FOV using <a>locateViews</a> and
--   then submitting composition layers to <a>endFrame</a> through the
--   <a>SecondaryViewConfigurationFrameEndInfoMSFT</a> extension structure.
--   When a secondary view configuration changes from inactive to active,
--   the runtime <i>may</i> change <a>ViewConfigurationView</a> of the
--   given view configuration such as the recommended image width or
--   height. An application <i>should</i> query for latest
--   <a>ViewConfigurationView</a> through
--   <a>enumerateViewConfigurationViews</a> function for the secondary view
--   configuration and consider recreating swapchain images if necessary.
--   The runtime <i>must</i> not change the <a>ViewConfigurationView</a>,
--   including recommended image width and height of a secondary view
--   configuration when <tt>active</tt> remains true until the secondary
--   view configuration deactivated or the session has ended.
--   
--   If necessary, the application <i>can</i> take longer than a frame
--   duration to prepare by calling <a>endFrame</a> without submitting
--   layers for that secondary view configuration until ready. The runtime
--   <i>should</i> delay the underlying scenario managed by the secondary
--   view configuration until the application begins submitting frames with
--   layers for that configuration. The active secondary view configuration
--   composed output is undefined if the application stops submitting
--   frames with layers for a secondary view configuration while
--   <tt>active</tt> remains true.
--   
--   When the runtime intends to conclude a secondary view configuration,
--   for example when user stops video capture, the runtime makes the view
--   configuration inactive by setting the corresponding <tt>active</tt> in
--   the <a>SecondaryViewConfigurationStateMSFT</a> structure to false.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SecondaryViewConfigurationStateMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SECONDARY_VIEW_CONFIGURATION_STATE_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>FrameState</a>, <a>SecondaryViewConfigurationFrameStateMSFT</a>,
--   <a>StructureType</a>, <a>ViewConfigurationType</a>
data SecondaryViewConfigurationStateMSFT
SecondaryViewConfigurationStateMSFT :: ViewConfigurationType -> Bool -> SecondaryViewConfigurationStateMSFT

-- | <tt>viewConfigurationType</tt> is a <a>ViewConfigurationType</a> that
--   represents the returned state.
[$sel:viewConfigurationType:SecondaryViewConfigurationStateMSFT] :: SecondaryViewConfigurationStateMSFT -> ViewConfigurationType

-- | <tt>active</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   returns whether the secondary view configuration is active and
--   displaying frames to users.
[$sel:active:SecondaryViewConfigurationStateMSFT] :: SecondaryViewConfigurationStateMSFT -> Bool

-- | XrSecondaryViewConfigurationFrameStateMSFT - Extension structure to
--   xrWaitFrame to return a list of secondary view configuration states.
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The array size <tt>viewConfigurationCount</tt> in the
--   <a>SecondaryViewConfigurationFrameStateMSFT</a> structure <i>must</i>
--   be the same as the array size enabled through
--   <a>SecondaryViewConfigurationSessionBeginInfoMSFT</a> when calling
--   <a>beginSession</a> earlier, otherwise the runtime <i>must</i> return
--   error <a>ERROR_VALIDATION_FAILURE</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SecondaryViewConfigurationFrameStateMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SECONDARY_VIEW_CONFIGURATION_FRAME_STATE_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>viewConfigurationStates</tt> <i>must</i> be a pointer to an
--   array of <tt>viewConfigurationCount</tt>
--   <a>SecondaryViewConfigurationStateMSFT</a> structures</li>
--   <li>The <tt>viewConfigurationCount</tt> parameter <i>must</i> be
--   greater than <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>FrameState</a>, <a>SecondaryViewConfigurationStateMSFT</a>,
--   <a>StructureType</a>
data SecondaryViewConfigurationFrameStateMSFT
SecondaryViewConfigurationFrameStateMSFT :: Word32 -> Ptr SecondaryViewConfigurationStateMSFT -> SecondaryViewConfigurationFrameStateMSFT

-- | <tt>viewConfigurationCount</tt> is the number of elements in
--   <tt>viewConfigurationStates</tt>.
[$sel:viewConfigurationCount:SecondaryViewConfigurationFrameStateMSFT] :: SecondaryViewConfigurationFrameStateMSFT -> Word32

-- | <tt>viewConfigurationStates</tt> is an array of
--   <a>SecondaryViewConfigurationStateMSFT</a> structures.
[$sel:viewConfigurationStates:SecondaryViewConfigurationFrameStateMSFT] :: SecondaryViewConfigurationFrameStateMSFT -> Ptr SecondaryViewConfigurationStateMSFT

-- | XrSecondaryViewConfigurationFrameEndInfoMSFT - Submit an array of
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a>, one for each secondary
--   view configuration.
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The view configuration type in each
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a> must be one of the view
--   configurations enabled when calling <a>beginSession</a> in
--   <a>SecondaryViewConfigurationSessionBeginInfoMSFT</a>, or else the
--   runtime <i>must</i> return error
--   <a>ERROR_SECONDARY_VIEW_CONFIGURATION_TYPE_NOT_ENABLED_MSFT</a>.
--   
--   The view configuration type in each
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a> must not be the primary
--   view configuration in this session, or else the runtime <i>must</i>
--   return error <a>ERROR_LAYER_INVALID</a>. The primary view
--   configuration layers continue to be submitted through
--   <a>FrameEndInfo</a> directly.
--   
--   If the view configuration is not active, as indicated in
--   <a>SecondaryViewConfigurationFrameStateMSFT</a>, the composition
--   layers submitted to this view configuration <i>may</i> be ignored by
--   the runtime. Applications <i>should</i> avoid rendering into secondary
--   views when the view configuration is inactive.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SecondaryViewConfigurationFrameEndInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SECONDARY_VIEW_CONFIGURATION_FRAME_END_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>viewConfigurationLayersInfo</tt> <i>must</i> be a pointer to
--   an array of <tt>viewConfigurationCount</tt> valid
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a> structures</li>
--   <li>The <tt>viewConfigurationCount</tt> parameter <i>must</i> be
--   greater than <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a>, <a>StructureType</a>,
--   <a>endFrame</a>
data SecondaryViewConfigurationFrameEndInfoMSFT
SecondaryViewConfigurationFrameEndInfoMSFT :: Vector SecondaryViewConfigurationLayerInfoMSFT -> SecondaryViewConfigurationFrameEndInfoMSFT

-- | <tt>viewConfigurationLayersInfo</tt> is an array of
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a>, containing composition
--   layers to be submitted for the specified active view configuration.
[$sel:viewConfigurationLayersInfo:SecondaryViewConfigurationFrameEndInfoMSFT] :: SecondaryViewConfigurationFrameEndInfoMSFT -> Vector SecondaryViewConfigurationLayerInfoMSFT

-- | XrSecondaryViewConfigurationLayerInfoMSFT - Describe an array of
--   composition layers to be submitted to given
--   <a>ViewConfigurationType</a>.
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   This structure is similar to the <a>FrameEndInfo</a> structure, with
--   an extra <a>ViewConfigurationType</a> field to specify the view
--   configuration for which the submitted layers will be rendered.
--   
--   The application <i>should</i> render its content for both the primary
--   and secondary view configurations using the same
--   <tt>predictedDisplayTime</tt> reported by <a>waitFrame</a>. The
--   runtime <i>must</i> treat both the primary views and secondary views
--   as being submitted for the same <tt>displayTime</tt> specified in the
--   call to <a>endFrame</a>.
--   
--   For layers such as quad layers whose content is identical across view
--   configurations, the application <i>can</i> submit the same
--   <a>CompositionLayerBaseHeader</a> structures to multiple view
--   configurations in the same <a>endFrame</a> function call.
--   
--   For each frame, the application <i>should</i> only render and submit
--   layers for the secondary view configurations that were active that
--   frame, as indicated in the
--   <a>SecondaryViewConfigurationFrameStateMSFT</a> filled in for that
--   frame’s <a>waitFrame</a> call. The runtime <i>must</i> ignore
--   composition layers submitted for an inactive view configuration.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SecondaryViewConfigurationLayerInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SECONDARY_VIEW_CONFIGURATION_LAYER_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value</li>
--   <li><tt>environmentBlendMode</tt> <i>must</i> be a valid
--   <a>EnvironmentBlendMode</a> value</li>
--   <li><tt>layers</tt> <i>must</i> be a pointer to an array of
--   <tt>layerCount</tt> valid <a>CompositionLayerBaseHeader</a>-based
--   structures. See also: <a>CompositionLayerCubeKHR</a>,
--   <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>, <a>CompositionLayerProjection</a>,
--   <a>CompositionLayerQuad</a></li>
--   <li>The <tt>layerCount</tt> parameter <i>must</i> be greater than
--   <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>EnvironmentBlendMode</a>,
--   <a>SecondaryViewConfigurationFrameEndInfoMSFT</a>,
--   <a>StructureType</a>, <a>ViewConfigurationType</a>, <a>endFrame</a>
data SecondaryViewConfigurationLayerInfoMSFT
SecondaryViewConfigurationLayerInfoMSFT :: ViewConfigurationType -> EnvironmentBlendMode -> Vector (SomeChild (CompositionLayerBaseHeader '[])) -> SecondaryViewConfigurationLayerInfoMSFT

-- | <tt>viewConfigurationType</tt> is <a>ViewConfigurationType</a> to
--   which the composition layers will be displayed.
[$sel:viewConfigurationType:SecondaryViewConfigurationLayerInfoMSFT] :: SecondaryViewConfigurationLayerInfoMSFT -> ViewConfigurationType

-- | <tt>environmentBlendMode</tt> is the <a>EnvironmentBlendMode</a> value
--   representing the desired <a>environment blend mode</a> for this view
--   configuration.
[$sel:environmentBlendMode:SecondaryViewConfigurationLayerInfoMSFT] :: SecondaryViewConfigurationLayerInfoMSFT -> EnvironmentBlendMode

-- | <tt>layers</tt> is a pointer to an array of
--   <a>CompositionLayerBaseHeader</a> pointers.
[$sel:layers:SecondaryViewConfigurationLayerInfoMSFT] :: SecondaryViewConfigurationLayerInfoMSFT -> Vector (SomeChild (CompositionLayerBaseHeader '[]))

-- | XrSecondaryViewConfigurationSwapchainCreateInfoMSFT - Hint to runtime
--   that the created swapchain image will be used for given secondary view
--   configuration.
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If this structure is not present in the <a>SwapchainCreateInfo</a>
--   next chain when calling <a>createSwapchain</a>, the runtime
--   <i>should</i> optimize the created swapchain for the primary view
--   configuration of the session.
--   
--   If the application submits a swapchain image created with one view
--   configuration type to a composition layer for another view
--   configuration, the runtime <i>may</i> need to copy the resource across
--   view configurations. However, the runtime <i>must</i> correctly
--   compose the image regardless which view configuration type was hinted
--   when swapchain image was created.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SecondaryViewConfigurationSwapchainCreateInfoMSFT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SECONDARY_VIEW_CONFIGURATION_SWAPCHAIN_CREATE_INFO_MSFT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SwapchainCreateInfo</a>,
--   <a>ViewConfigurationType</a>
data SecondaryViewConfigurationSwapchainCreateInfoMSFT
SecondaryViewConfigurationSwapchainCreateInfoMSFT :: ViewConfigurationType -> SecondaryViewConfigurationSwapchainCreateInfoMSFT

-- | <tt>viewConfigurationType</tt> is the secondary view configuration
--   type the application is intending to use this swapchain for.
[$sel:viewConfigurationType:SecondaryViewConfigurationSwapchainCreateInfoMSFT] :: SecondaryViewConfigurationSwapchainCreateInfoMSFT -> ViewConfigurationType
type MSFT_secondary_view_configuration_SPEC_VERSION = 1
pattern MSFT_secondary_view_configuration_SPEC_VERSION :: forall a. Integral a => a
type MSFT_SECONDARY_VIEW_CONFIGURATION_EXTENSION_NAME = "XR_MSFT_secondary_view_configuration"
pattern MSFT_SECONDARY_VIEW_CONFIGURATION_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSwapchainCreateInfoMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameStateMSFT
instance GHC.Classes.Eq OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationStateMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSessionBeginInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationStateMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameStateMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameEndInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationLayerInfoMSFT
instance GHC.Show.Show OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSwapchainCreateInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSwapchainCreateInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSwapchainCreateInfoMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSwapchainCreateInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSwapchainCreateInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameEndInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameEndInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameEndInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationLayerInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationLayerInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationLayerInfoMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameStateMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameStateMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameStateMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationFrameStateMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationStateMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationStateMSFT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationStateMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationStateMSFT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSessionBeginInfoMSFT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSessionBeginInfoMSFT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MSFT_secondary_view_configuration.SecondaryViewConfigurationSessionBeginInfoMSFT


-- | <h1>Name</h1>
--   
--   XR_KHR_visibility_mask - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_visibility_mask</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   32
--   
--   <h1>Revision</h1>
--   
--   2
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataVisibilityMaskChangedKHR</a>, <a>VisibilityMaskKHR</a>,
--   <a>VisibilityMaskTypeKHR</a>, <a>getVisibilityMaskKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_visibility_mask

-- | xrGetVisibilityMaskKHR - Gets visibility mask
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>getVisibilityMaskKHR</a> retrieves the view mask for a given view.
--   This function follows the <a>two-call idiom</a> for filling multiple
--   buffers in a struct. Specifically, if either
--   <tt>vertexCapacityInput</tt> or <tt>indexCapacityInput</tt> is
--   <tt>0</tt>, the runtime <i>must</i> respond as if both fields were set
--   to <tt>0</tt>, returning the vertex count and index count through
--   <tt>vertexCountOutput</tt> or <tt>indexCountOutput</tt> respectively.
--   If a view mask for the specified view isn’t available, the returned
--   vertex and index counts <i>must</i> be <tt>0</tt>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVisibilityMaskKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value</li>
--   <li><tt>visibilityMaskType</tt> <i>must</i> be a valid
--   <a>VisibilityMaskTypeKHR</a> value</li>
--   <li><tt>visibilityMask</tt> <i>must</i> be a pointer to an
--   <a>VisibilityMaskKHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>ViewConfigurationType</a>,
--   <a>VisibilityMaskKHR</a>, <a>VisibilityMaskTypeKHR</a>
getVisibilityMaskKHR :: forall io. MonadIO io => Session -> ViewConfigurationType -> ("viewIndex" ::: Word32) -> VisibilityMaskTypeKHR -> io (Result, VisibilityMaskKHR)

-- | XrEventDataVisibilityMaskChangedKHR - Visibility Mask
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>EventDataVisibilityMaskChangedKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_EVENT_DATA_VISIBILITY_MASK_CHANGED_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>StructureType</a>, <a>ViewConfigurationType</a>
data EventDataVisibilityMaskChangedKHR
EventDataVisibilityMaskChangedKHR :: Ptr Session_T -> ViewConfigurationType -> Word32 -> EventDataVisibilityMaskChangedKHR

-- | <tt>session</tt> is the <a>Session</a> for which the view mask has
--   changed.
[$sel:session:EventDataVisibilityMaskChangedKHR] :: EventDataVisibilityMaskChangedKHR -> Ptr Session_T

-- | <tt>viewConfigurationType</tt> is the view configuration whose mask
--   has changed.
[$sel:viewConfigurationType:EventDataVisibilityMaskChangedKHR] :: EventDataVisibilityMaskChangedKHR -> ViewConfigurationType

-- | <tt>viewIndex</tt> is the individual view within the view
--   configuration to which the change refers.
[$sel:viewIndex:EventDataVisibilityMaskChangedKHR] :: EventDataVisibilityMaskChangedKHR -> Word32

-- | XrVisibilityMaskKHR - Visibility Mask
--   
--   <h2>Member Descriptions</h2>
--   
--   <ul>
--   <li><tt>type</tt> is the <a>StructureType</a> of this structure.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure
--   in a structure chain. No such structures are defined in core OpenXR or
--   this extension.</li>
--   <li><tt>vertexCapacityInput</tt> is the capacity of the
--   <tt>vertices</tt> array, or <tt>0</tt> to indicate a request to
--   retrieve the required capacity.</li>
--   <li><tt>vertexCountOutput</tt> is filled in by the runtime with the
--   count of vertices written or the required capacity in the case that
--   <tt>vertexCapacityInput</tt> or <tt>indexCapacityInput</tt> is
--   <tt>0</tt>.</li>
--   <li><tt>vertices</tt> is an array of vertices filled in by the runtime
--   that specifies mask coordinates in the z=-1 plane of the rendered
--   view—​i.e., one meter in front of the view. When rendering the mask
--   for use in a projection layer, these vertices must be transformed by
--   the application’s projection matrix used for the respective
--   <a>CompositionLayerProjectionView</a>.</li>
--   </ul>
--   
--   <h2>Description</h2>
--   
--   <ul>
--   <li><tt>indexCapacityInput</tt> is the capacity of the
--   <tt>indices</tt> array, or <tt>0</tt> to indicate a request to
--   retrieve the required capacity.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>indexCountOutput</tt> is filled in by the runtime with the
--   count of indices written or the required capacity in the case that
--   <tt>vertexCapacityInput</tt> or <tt>indexCapacityInput</tt> is
--   <tt>0</tt>.</li>
--   <li><tt>indices</tt> is an array of indices filled in by the runtime,
--   specifying the indices of the mask geometry in the <tt>vertices</tt>
--   array.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>VisibilityMaskKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be <a>TYPE_VISIBILITY_MASK_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li>If <tt>vertexCapacityInput</tt> is not <tt>0</tt>,
--   <tt>vertices</tt> <i>must</i> be a pointer to an array of
--   <tt>vertexCapacityInput</tt> <a>Vector2f</a> structures</li>
--   <li>If <tt>indexCapacityInput</tt> is not <tt>0</tt>, <tt>indices</tt>
--   <i>must</i> be a pointer to an array of <tt>indexCapacityInput</tt>
--   <tt>uint32_t</tt> values</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>Vector2f</a>, <a>getVisibilityMaskKHR</a>
data VisibilityMaskKHR
VisibilityMaskKHR :: Word32 -> Word32 -> Ptr Vector2f -> Word32 -> Word32 -> Ptr Word32 -> VisibilityMaskKHR
[$sel:vertexCapacityInput:VisibilityMaskKHR] :: VisibilityMaskKHR -> Word32
[$sel:vertexCountOutput:VisibilityMaskKHR] :: VisibilityMaskKHR -> Word32
[$sel:vertices:VisibilityMaskKHR] :: VisibilityMaskKHR -> Ptr Vector2f
[$sel:indexCapacityInput:VisibilityMaskKHR] :: VisibilityMaskKHR -> Word32
[$sel:indexCountOutput:VisibilityMaskKHR] :: VisibilityMaskKHR -> Word32
[$sel:indices:VisibilityMaskKHR] :: VisibilityMaskKHR -> Ptr Word32

-- | XrVisibilityMaskTypeKHR - Visibility Mask Type
--   
--   <h2>Enumerant Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>getVisibilityMaskKHR</a>
newtype VisibilityMaskTypeKHR
VisibilityMaskTypeKHR :: Int32 -> VisibilityMaskTypeKHR

-- | <a>VISIBILITY_MASK_TYPE_HIDDEN_TRIANGLE_MESH_KHR</a> refers to a two
--   dimensional triangle mesh on the view surface which <i>should</i> not
--   be drawn to by the application. <a>VisibilityMaskKHR</a> refers to a
--   set of triangles identified by vertices and vertex indices. The index
--   count will thus be a multiple of three. The triangle vertices will be
--   returned in counter-clockwise order as viewed from the user
--   perspective.
pattern VISIBILITY_MASK_TYPE_HIDDEN_TRIANGLE_MESH_KHR :: VisibilityMaskTypeKHR

-- | <a>VISIBILITY_MASK_TYPE_VISIBLE_TRIANGLE_MESH_KHR</a> refers to a two
--   dimensional triangle mesh on the view surface which <i>should</i> be
--   drawn to by the application. <a>VisibilityMaskKHR</a> refers to a set
--   of triangles identified by vertices and vertex indices. The index
--   count will thus be a multiple of three. The triangle vertices will be
--   returned in counter-clockwise order as viewed from the user
--   perspective.
pattern VISIBILITY_MASK_TYPE_VISIBLE_TRIANGLE_MESH_KHR :: VisibilityMaskTypeKHR

-- | <a>VISIBILITY_MASK_TYPE_LINE_LOOP_KHR</a> refers to a single
--   multi-segmented line loop on the view surface which encompasses the
--   view area which <i>should</i> be drawn by the application. It is the
--   border that exists between the visible and hidden meshes identified by
--   <a>VISIBILITY_MASK_TYPE_HIDDEN_TRIANGLE_MESH_KHR</a> and
--   <a>VISIBILITY_MASK_TYPE_VISIBLE_TRIANGLE_MESH_KHR</a>. The line is
--   counter-clockwise, contiguous, and non-self crossing, with the last
--   point implicitly connecting to the first point. There is one vertex
--   per point, the index count will equal the vertex count, and the
--   indices will refer to the vertices.
pattern VISIBILITY_MASK_TYPE_LINE_LOOP_KHR :: VisibilityMaskTypeKHR
type KHR_visibility_mask_SPEC_VERSION = 2
pattern KHR_visibility_mask_SPEC_VERSION :: forall a. Integral a => a
type KHR_VISIBILITY_MASK_EXTENSION_NAME = "XR_KHR_visibility_mask"
pattern KHR_VISIBILITY_MASK_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskTypeKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskTypeKHR
instance GHC.Classes.Ord OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskTypeKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskTypeKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_visibility_mask.EventDataVisibilityMaskChangedKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_visibility_mask.EventDataVisibilityMaskChangedKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskTypeKHR
instance GHC.Read.Read OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskTypeKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_visibility_mask.VisibilityMaskKHR
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Extensions.XR_KHR_visibility_mask.EventDataVisibilityMaskChangedKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_visibility_mask.EventDataVisibilityMaskChangedKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_visibility_mask.EventDataVisibilityMaskChangedKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_visibility_mask.EventDataVisibilityMaskChangedKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_visibility_mask.EventDataVisibilityMaskChangedKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_composition_layer_equirect2 - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_composition_layer_equirect2</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   92
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerEquirect2KHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_composition_layer_equirect2

-- | XrCompositionLayerEquirect2KHR - Equirectangular layer composition
--   info
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>CompositionLayerEquirect2KHR</a> contains the information needed to
--   render an equirectangular image onto a sphere when calling
--   <a>endFrame</a>. <a>CompositionLayerEquirect2KHR</a> is an alias type
--   for the base struct <a>CompositionLayerBaseHeader</a> used in
--   <a>FrameEndInfo</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>CompositionLayerEquirect2KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_COMPOSITION_LAYER_EQUIRECT2_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>layerFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrCompositionLayerFlagBits</a> values</li>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   <li><tt>eyeVisibility</tt> <i>must</i> be a valid <a>EyeVisibility</a>
--   value</li>
--   <li><tt>subImage</tt> <i>must</i> be a valid <a>SwapchainSubImage</a>
--   structure</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerFlags</a>,
--   <a>EyeVisibility</a>, <a>FrameEndInfo</a>, <a>Posef</a>, <a>Space</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>, <a>endFrame</a>
data CompositionLayerEquirect2KHR
CompositionLayerEquirect2KHR :: CompositionLayerFlags -> Ptr Space_T -> EyeVisibility -> SwapchainSubImage -> Posef -> Float -> Float -> Float -> Float -> CompositionLayerEquirect2KHR

-- | <tt>layerFlags</tt> specifies options for the layer.
[$sel:layerFlags:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> CompositionLayerFlags

-- | <tt>space</tt> is the <a>Space</a> in which the <tt>pose</tt> of the
--   equirect layer is evaluated over time.
[$sel:space:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> Ptr Space_T
[$sel:eyeVisibility:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> EyeVisibility

-- | <tt>subImage</tt> identifies the image <a>SwapchainSubImage</a> to
--   use.
[$sel:subImage:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> SwapchainSubImage

-- | <tt>pose</tt> is an <a>Posef</a> defining the position and orientation
--   of the center point of the sphere onto which the equirect image data
--   is mapped, relative to the reference frame of the <tt>space</tt>.
[$sel:pose:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> Posef

-- | <tt>radius</tt> is the non-negative radius of the sphere onto which
--   the equirect image data is mapped. Values of zero or floating point
--   positive infinity are treated as an infinite sphere.
[$sel:radius:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> Float

-- | <tt>centralHorizontalAngle</tt> defines the visible horizontal angle
--   of the sphere, based at 0 radians, in the range of [0, 2π]. It grows
--   symmetrically around the 0 radian angle.
[$sel:centralHorizontalAngle:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> Float

-- | <tt>upperVerticalAngle</tt> defines the upper vertical angle of the
--   visible portion of the sphere, in the range of [-π/2, π/2].
[$sel:upperVerticalAngle:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> Float

-- | <tt>lowerVerticalAngle</tt> defines the lower vertical angle of the
--   visible portion of the sphere, in the range of [-π/2, π/2].
[$sel:lowerVerticalAngle:CompositionLayerEquirect2KHR] :: CompositionLayerEquirect2KHR -> Float
type KHR_composition_layer_equirect2_SPEC_VERSION = 1
pattern KHR_composition_layer_equirect2_SPEC_VERSION :: forall a. Integral a => a
type KHR_COMPOSITION_LAYER_EQUIRECT2_EXTENSION_NAME = "XR_KHR_composition_layer_equirect2"
pattern KHR_COMPOSITION_LAYER_EQUIRECT2_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_composition_layer_equirect2.CompositionLayerEquirect2KHR
instance OpenXR.Core10.OtherTypes.IsCompositionLayer OpenXR.Extensions.XR_KHR_composition_layer_equirect2.CompositionLayerEquirect2KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_composition_layer_equirect2.CompositionLayerEquirect2KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_composition_layer_equirect2.CompositionLayerEquirect2KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_composition_layer_equirect2.CompositionLayerEquirect2KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_composition_layer_equirect2.CompositionLayerEquirect2KHR


-- | <h1>Name</h1>
--   
--   XR_KHR_composition_layer_equirect - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_composition_layer_equirect</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   19
--   
--   <h1>Revision</h1>
--   
--   3
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerEquirectKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_composition_layer_equirect

-- | XrCompositionLayerEquirectKHR - Equirectangular layer composition info
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>CompositionLayerEquirectKHR</a> contains the information needed to
--   render an equirectangular image onto a sphere when calling
--   <a>endFrame</a>. <a>CompositionLayerEquirectKHR</a> is an alias type
--   for the base struct <a>CompositionLayerBaseHeader</a> used in
--   <a>FrameEndInfo</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>CompositionLayerEquirectKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_COMPOSITION_LAYER_EQUIRECT_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>layerFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrCompositionLayerFlagBits</a> values</li>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   <li><tt>eyeVisibility</tt> <i>must</i> be a valid <a>EyeVisibility</a>
--   value</li>
--   <li><tt>subImage</tt> <i>must</i> be a valid <a>SwapchainSubImage</a>
--   structure</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerFlags</a>,
--   <a>EyeVisibility</a>, <a>FrameEndInfo</a>, <a>Posef</a>, <a>Space</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>, <a>Vector2f</a>,
--   <a>endFrame</a>
data CompositionLayerEquirectKHR
CompositionLayerEquirectKHR :: CompositionLayerFlags -> Ptr Space_T -> EyeVisibility -> SwapchainSubImage -> Posef -> Float -> Vector2f -> Vector2f -> CompositionLayerEquirectKHR

-- | <tt>layerFlags</tt> specifies options for the layer.
[$sel:layerFlags:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> CompositionLayerFlags

-- | <tt>space</tt> is the <a>Space</a> in which the <tt>pose</tt> of the
--   equirect layer is evaluated over time.
[$sel:space:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> Ptr Space_T
[$sel:eyeVisibility:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> EyeVisibility

-- | <tt>subImage</tt> identifies the image <a>SwapchainSubImage</a> to
--   use.
[$sel:subImage:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> SwapchainSubImage

-- | <tt>pose</tt> is an <a>Posef</a> defining the position and orientation
--   of the center point of the sphere onto which the equirect image data
--   is mapped, relative to the reference frame of the <tt>space</tt>.
[$sel:pose:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> Posef

-- | <tt>radius</tt> is the non-negative radius of the sphere onto which
--   the equirect image data is mapped. Values of zero or floating point
--   positive infinity are treated as an infinite sphere.
[$sel:radius:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> Float

-- | <tt>scale</tt> is an <a>Vector2f</a> indicating a scale of the texture
--   coordinates after the mapping to 2D.
[$sel:scale:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> Vector2f

-- | <tt>bias</tt> is an <a>Vector2f</a> indicating a bias of the texture
--   coordinates after the mapping to 2D.
[$sel:bias:CompositionLayerEquirectKHR] :: CompositionLayerEquirectKHR -> Vector2f
type KHR_composition_layer_equirect_SPEC_VERSION = 3
pattern KHR_composition_layer_equirect_SPEC_VERSION :: forall a. Integral a => a
type KHR_COMPOSITION_LAYER_EQUIRECT_EXTENSION_NAME = "XR_KHR_composition_layer_equirect"
pattern KHR_COMPOSITION_LAYER_EQUIRECT_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_composition_layer_equirect.CompositionLayerEquirectKHR
instance OpenXR.Core10.OtherTypes.IsCompositionLayer OpenXR.Extensions.XR_KHR_composition_layer_equirect.CompositionLayerEquirectKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_composition_layer_equirect.CompositionLayerEquirectKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_composition_layer_equirect.CompositionLayerEquirectKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_composition_layer_equirect.CompositionLayerEquirectKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_composition_layer_equirect.CompositionLayerEquirectKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_composition_layer_depth - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_composition_layer_depth</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   11
--   
--   <h1>Revision</h1>
--   
--   5
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerDepthInfoKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_composition_layer_depth

-- | XrCompositionLayerDepthInfoKHR - Depth map layer info
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>CompositionLayerDepthInfoKHR</a> contains the information needed to
--   specify an extra layer with depth information. When submitting depth
--   buffers along with projection layers, add the
--   <a>CompositionLayerDepthInfoKHR</a> to the <tt>next</tt> chain for all
--   <a>CompositionLayerProjectionView</a> structures in the given layer.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>CompositionLayerDepthInfoKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_COMPOSITION_LAYER_DEPTH_INFO_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>subImage</tt> <i>must</i> be a valid <a>SwapchainSubImage</a>
--   structure</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerProjection</a>,
--   <a>CompositionLayerProjectionView</a>, <a>FrameEndInfo</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>, <a>endFrame</a>
data CompositionLayerDepthInfoKHR
CompositionLayerDepthInfoKHR :: SwapchainSubImage -> Float -> Float -> Float -> Float -> CompositionLayerDepthInfoKHR

-- | <tt>subImage</tt> identifies the depth image <a>SwapchainSubImage</a>
--   to be associated with the color swapchain. The contained
--   <tt>imageRect</tt> specifies the valid portion of the depth image to
--   use, in pixels. It also implicitly defines the transform from
--   normalized image coordinates into pixel coordinates. The contained
--   <tt>imageArrayIndex</tt> is the depth image array index, with 0
--   meaning the first or only array element.
[$sel:subImage:CompositionLayerDepthInfoKHR] :: CompositionLayerDepthInfoKHR -> SwapchainSubImage

-- | <tt>minDepth</tt> and <tt>maxDepth</tt> are the range of depth values
--   the <tt>depthSwapchain</tt> could have, in the range of [0.0,1.0].
--   This is akin to min and max values of OpenGL’s <tt>glDepthRange</tt>,
--   but with the requirement here that maxDepth ≥ minDepth.
[$sel:minDepth:CompositionLayerDepthInfoKHR] :: CompositionLayerDepthInfoKHR -> Float
[$sel:maxDepth:CompositionLayerDepthInfoKHR] :: CompositionLayerDepthInfoKHR -> Float

-- | <tt>nearZ</tt> is the positive distance in meters of the
--   <tt>minDepth</tt> value in the depth swapchain. Applications
--   <i>may</i> use a <tt>nearZ</tt> that is greater than <tt>farZ</tt> to
--   indicate depth values are reversed. <tt>nearZ</tt> can be infinite.
[$sel:nearZ:CompositionLayerDepthInfoKHR] :: CompositionLayerDepthInfoKHR -> Float

-- | <tt>farZ</tt> is the positive distance in meters of the
--   <tt>maxDepth</tt> value in the depth swapchain. <tt>farZ</tt> can be
--   infinite. Applications <i>must</i> not use the same value as
--   <tt>nearZ</tt>.
[$sel:farZ:CompositionLayerDepthInfoKHR] :: CompositionLayerDepthInfoKHR -> Float
type KHR_composition_layer_depth_SPEC_VERSION = 5
pattern KHR_composition_layer_depth_SPEC_VERSION :: forall a. Integral a => a
type KHR_COMPOSITION_LAYER_DEPTH_EXTENSION_NAME = "XR_KHR_composition_layer_depth"
pattern KHR_COMPOSITION_LAYER_DEPTH_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_composition_layer_depth.CompositionLayerDepthInfoKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_composition_layer_depth.CompositionLayerDepthInfoKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_composition_layer_depth.CompositionLayerDepthInfoKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_composition_layer_depth.CompositionLayerDepthInfoKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_composition_layer_depth.CompositionLayerDepthInfoKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_composition_layer_cylinder - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_composition_layer_cylinder</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   18
--   
--   <h1>Revision</h1>
--   
--   4
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerCylinderKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_composition_layer_cylinder

-- | XrCompositionLayerCylinderKHR - Cylindrical layer composition info
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>CompositionLayerCylinderKHR</a> contains the information needed to
--   render a texture onto a cylinder when calling <a>endFrame</a>.
--   <a>CompositionLayerCylinderKHR</a> is an alias type for the base
--   struct <a>CompositionLayerBaseHeader</a> used in <a>FrameEndInfo</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>CompositionLayerCylinderKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_COMPOSITION_LAYER_CYLINDER_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>layerFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrCompositionLayerFlagBits</a> values</li>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   <li><tt>eyeVisibility</tt> <i>must</i> be a valid <a>EyeVisibility</a>
--   value</li>
--   <li><tt>subImage</tt> <i>must</i> be a valid <a>SwapchainSubImage</a>
--   structure</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerFlags</a>,
--   <a>EyeVisibility</a>, <a>FrameEndInfo</a>, <a>Posef</a>, <a>Space</a>,
--   <a>StructureType</a>, <a>SwapchainSubImage</a>, <a>endFrame</a>
data CompositionLayerCylinderKHR
CompositionLayerCylinderKHR :: CompositionLayerFlags -> Ptr Space_T -> EyeVisibility -> SwapchainSubImage -> Posef -> Float -> Float -> Float -> CompositionLayerCylinderKHR

-- | <tt>layerFlags</tt> specifies options for the layer.
[$sel:layerFlags:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> CompositionLayerFlags

-- | <tt>space</tt> is the <a>Space</a> in which the <tt>pose</tt> of the
--   cylinder layer is evaluated over time.
[$sel:space:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> Ptr Space_T
[$sel:eyeVisibility:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> EyeVisibility

-- | <tt>subImage</tt> identifies the image <a>SwapchainSubImage</a> to
--   use.
[$sel:subImage:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> SwapchainSubImage

-- | <tt>pose</tt> is an <a>Posef</a> defining the position and orientation
--   of the center point of the view of the cylinder within the reference
--   frame of the <tt>space</tt>.
[$sel:pose:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> Posef

-- | <tt>radius</tt> is the non-negative radius of the cylinder. Values of
--   zero or floating point positive infinity are treated as an infinite
--   cylinder.
[$sel:radius:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> Float

-- | <tt>centralAngle</tt> is the angle of the visible section of the
--   cylinder, based at 0 radians, in the range of [0, 2π). It grows
--   symmetrically around the 0 radian angle.
[$sel:centralAngle:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> Float

-- | <tt>aspectRatio</tt> is the ratio of the visible cylinder section
--   width / height. The height of the cylinder is given by: (cylinder
--   radius × cylinder angle) / aspectRatio.
[$sel:aspectRatio:CompositionLayerCylinderKHR] :: CompositionLayerCylinderKHR -> Float
type KHR_composition_layer_cylinder_SPEC_VERSION = 4
pattern KHR_composition_layer_cylinder_SPEC_VERSION :: forall a. Integral a => a
type KHR_COMPOSITION_LAYER_CYLINDER_EXTENSION_NAME = "XR_KHR_composition_layer_cylinder"
pattern KHR_COMPOSITION_LAYER_CYLINDER_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_composition_layer_cylinder.CompositionLayerCylinderKHR
instance OpenXR.Core10.OtherTypes.IsCompositionLayer OpenXR.Extensions.XR_KHR_composition_layer_cylinder.CompositionLayerCylinderKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_composition_layer_cylinder.CompositionLayerCylinderKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_composition_layer_cylinder.CompositionLayerCylinderKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_composition_layer_cylinder.CompositionLayerCylinderKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_composition_layer_cylinder.CompositionLayerCylinderKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_composition_layer_cube - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_composition_layer_cube</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   7
--   
--   <h1>Revision</h1>
--   
--   8
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerCubeKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_composition_layer_cube

-- | XrCompositionLayerCubeKHR - Cube map layer composition info
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>CompositionLayerCubeKHR</a> contains the information needed to
--   render a cube map when calling <a>endFrame</a>.
--   <a>CompositionLayerCubeKHR</a> is an alias type for the base struct
--   <a>CompositionLayerBaseHeader</a> used in <a>FrameEndInfo</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>CompositionLayerCubeKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_COMPOSITION_LAYER_CUBE_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>layerFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrCompositionLayerFlagBits</a> values</li>
--   <li><tt>space</tt> <i>must</i> be a valid <a>Space</a> handle</li>
--   <li><tt>eyeVisibility</tt> <i>must</i> be a valid <a>EyeVisibility</a>
--   value</li>
--   <li><tt>swapchain</tt> <i>must</i> be a valid <a>Swapchain</a>
--   handle</li>
--   <li>Both of <tt>space</tt> and <tt>swapchain</tt> <i>must</i> have
--   been created, allocated, or retrieved from the same
--   <a>Session</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>CompositionLayerFlags</a>,
--   <a>EyeVisibility</a>, <a>FrameEndInfo</a>, <a>Quaternionf</a>,
--   <a>Space</a>, <a>StructureType</a>, <a>Swapchain</a>, <a>endFrame</a>
data CompositionLayerCubeKHR
CompositionLayerCubeKHR :: CompositionLayerFlags -> Ptr Space_T -> EyeVisibility -> Ptr Swapchain_T -> Word32 -> Quaternionf -> CompositionLayerCubeKHR

-- | <tt>layerFlags</tt> is any flags to apply to this layer.
[$sel:layerFlags:CompositionLayerCubeKHR] :: CompositionLayerCubeKHR -> CompositionLayerFlags

-- | <tt>space</tt> is the <a>Space</a> in which the <tt>orientation</tt>
--   of the cube layer is evaluated over time.
[$sel:space:CompositionLayerCubeKHR] :: CompositionLayerCubeKHR -> Ptr Space_T
[$sel:eyeVisibility:CompositionLayerCubeKHR] :: CompositionLayerCubeKHR -> EyeVisibility

-- | <tt>swapchain</tt> is the swapchain.
[$sel:swapchain:CompositionLayerCubeKHR] :: CompositionLayerCubeKHR -> Ptr Swapchain_T

-- | <tt>imageArrayIndex</tt> is the image array index, with 0 meaning the
--   first or only array element.
[$sel:imageArrayIndex:CompositionLayerCubeKHR] :: CompositionLayerCubeKHR -> Word32

-- | <tt>orientation</tt> is the orientation of the environment map in the
--   <tt>space</tt>.
[$sel:orientation:CompositionLayerCubeKHR] :: CompositionLayerCubeKHR -> Quaternionf
type KHR_composition_layer_cube_SPEC_VERSION = 8
pattern KHR_composition_layer_cube_SPEC_VERSION :: forall a. Integral a => a
type KHR_COMPOSITION_LAYER_CUBE_EXTENSION_NAME = "XR_KHR_composition_layer_cube"
pattern KHR_COMPOSITION_LAYER_CUBE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_composition_layer_cube.CompositionLayerCubeKHR
instance OpenXR.Core10.OtherTypes.IsCompositionLayer OpenXR.Extensions.XR_KHR_composition_layer_cube.CompositionLayerCubeKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_composition_layer_cube.CompositionLayerCubeKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_composition_layer_cube.CompositionLayerCubeKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_composition_layer_cube.CompositionLayerCubeKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_composition_layer_cube.CompositionLayerCubeKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_composition_layer_color_scale_bias - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_composition_layer_color_scale_bias</a> in the main
--   specification for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   35
--   
--   <h1>Revision</h1>
--   
--   5
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerColorScaleBiasKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_composition_layer_color_scale_bias

-- | XrCompositionLayerColorScaleBiasKHR - defines color scale and bias for
--   layer textures
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>CompositionLayerColorScaleBiasKHR</a> contains the information
--   needed to scale and bias the color of layer textures.
--   
--   The <a>CompositionLayerColorScaleBiasKHR</a> structure <i>can</i> be
--   applied by applications to composition layers by adding an instance of
--   the struct to the <a>CompositionLayerBaseHeader</a>::<tt>next</tt>
--   list.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>CompositionLayerColorScaleBiasKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_COMPOSITION_LAYER_COLOR_SCALE_BIAS_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Color4f</a>, <a>CompositionLayerBaseHeader</a>,
--   <a>StructureType</a>
data CompositionLayerColorScaleBiasKHR
CompositionLayerColorScaleBiasKHR :: Color4f -> Color4f -> CompositionLayerColorScaleBiasKHR

-- | <tt>colorScale</tt> is an <a>Color4f</a> which will modulate the color
--   sourced from the images.
[$sel:colorScale:CompositionLayerColorScaleBiasKHR] :: CompositionLayerColorScaleBiasKHR -> Color4f

-- | <tt>colorBias</tt> is an <a>Color4f</a> which will offset the color
--   sourced from the images.
[$sel:colorBias:CompositionLayerColorScaleBiasKHR] :: CompositionLayerColorScaleBiasKHR -> Color4f
type KHR_composition_layer_color_scale_bias_SPEC_VERSION = 5
pattern KHR_composition_layer_color_scale_bias_SPEC_VERSION :: forall a. Integral a => a
type KHR_COMPOSITION_LAYER_COLOR_SCALE_BIAS_EXTENSION_NAME = "XR_KHR_composition_layer_color_scale_bias"
pattern KHR_COMPOSITION_LAYER_COLOR_SCALE_BIAS_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_composition_layer_color_scale_bias.CompositionLayerColorScaleBiasKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_composition_layer_color_scale_bias.CompositionLayerColorScaleBiasKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_composition_layer_color_scale_bias.CompositionLayerColorScaleBiasKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_composition_layer_color_scale_bias.CompositionLayerColorScaleBiasKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_composition_layer_color_scale_bias.CompositionLayerColorScaleBiasKHR


-- | <h1>Name</h1>
--   
--   XR_FB_display_refresh_rate - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_FB_display_refresh_rate</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   102
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataDisplayRefreshRateChangedFB</a>,
--   <a>enumerateDisplayRefreshRatesFB</a>, <a>getDisplayRefreshRateFB</a>,
--   <a>requestDisplayRefreshRateFB</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_FB_display_refresh_rate

-- | xrEnumerateDisplayRefreshRatesFB - Enumerates display refresh rates
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is the session that enumerates the supported
--   display refresh rates.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>displayRefreshRateCapacityInput</tt> is the capacity of the
--   <tt>displayRefreshRates</tt>, or 0 to retrieve the required
--   capacity.</li>
--   <li><tt>displayRefreshRateCountOutput</tt> is a pointer to the count
--   of <tt>float</tt> <tt>displayRefreshRates</tt> written, or a pointer
--   to the required capacity in the case that
--   <tt>displayRefreshRateCapacityInput</tt> is <tt>0</tt>.</li>
--   <li><tt>displayRefreshRates</tt> is a pointer to an array of
--   <tt>float</tt> display refresh rates, but <i>can</i> be <tt>NULL</tt>
--   if <tt>displayRefreshRateCapacityInput</tt> is <tt>0</tt>.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>displayRefreshRates</tt>
--   size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   <a>enumerateDisplayRefreshRatesFB</a> enumerates the display refresh
--   rates supported by the current session. Display refresh rates
--   <i>must</i> be in order from lowest to highest supported display
--   refresh rates. Runtimes <i>must</i> always return identical buffer
--   contents from this enumeration for the lifetime of the session.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>enumerateDisplayRefreshRatesFB</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>displayRefreshRateCountOutput</tt> <i>must</i> be a pointer to
--   a <tt>uint32_t</tt> value</li>
--   <li>If <tt>displayRefreshRateCapacityInput</tt> is not <tt>0</tt>,
--   <tt>displayRefreshRates</tt> <i>must</i> be a pointer to an array of
--   <tt>displayRefreshRateCapacityInput</tt> <tt>float</tt> values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>getDisplayRefreshRateFB</a>,
--   <a>requestDisplayRefreshRateFB</a>
enumerateDisplayRefreshRatesFB :: forall io. MonadIO io => Session -> io (Result, "displayRefreshRates" ::: Vector Float)

-- | xrGetDisplayRefreshRateFB - Get the current display refresh rate
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>getDisplayRefreshRateFB</a> retrieves the current display refresh
--   rate.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getDisplayRefreshRateFB</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>displayRefreshRate</tt> <i>must</i> be a pointer to a
--   <tt>float</tt> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>enumerateDisplayRefreshRatesFB</a>,
--   <a>requestDisplayRefreshRateFB</a>
getDisplayRefreshRateFB :: forall io. MonadIO io => Session -> io (Result, "displayRefreshRate" ::: Float)

-- | xrRequestDisplayRefreshRateFB - Request a display refresh rate
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>requestDisplayRefreshRateFB</a> provides a mechanism for an
--   application to request the system to dynamically change the display
--   refresh rate to the application preferred value. The runtime
--   <i>must</i> return <a>ERROR_DISPLAY_REFRESH_RATE_UNSUPPORTED_FB</a> if
--   <tt>displayRefreshRate</tt> is not either <tt>0.0f</tt> or one of the
--   values enumerated by <a>enumerateDisplayRefreshRatesFB</a>. A display
--   refresh rate of <tt>0.0f</tt> indicates the application has no
--   preference.
--   
--   Note that this is only a request and does not guarantee the system
--   will switch to the requested display refresh rate.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>requestDisplayRefreshRateFB</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_DISPLAY_REFRESH_RATE_UNSUPPORTED_FB</a></li><li><a>ERROR_FEATURE_UNSUPPORTED</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>enumerateDisplayRefreshRatesFB</a>,
--   <a>getDisplayRefreshRateFB</a>
requestDisplayRefreshRateFB :: forall io. MonadIO io => Session -> ("displayRefreshRate" ::: Float) -> io Result

-- | XrEventDataDisplayRefreshRateChangedFB - Event representing display
--   refresh rate change
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>EventDataDisplayRefreshRateChangedFB</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_EVENT_DATA_DISPLAY_REFRESH_RATE_CHANGED_FB</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>getDisplayRefreshRateFB</a>
data EventDataDisplayRefreshRateChangedFB
EventDataDisplayRefreshRateChangedFB :: Float -> Float -> EventDataDisplayRefreshRateChangedFB

-- | <tt>fromDisplayRefreshRate</tt> is the previous display refresh rate.
[$sel:fromDisplayRefreshRate:EventDataDisplayRefreshRateChangedFB] :: EventDataDisplayRefreshRateChangedFB -> Float

-- | <tt>toDisplayRefreshRate</tt> is the new display refresh rate.
[$sel:toDisplayRefreshRate:EventDataDisplayRefreshRateChangedFB] :: EventDataDisplayRefreshRateChangedFB -> Float
type FB_display_refresh_rate_SPEC_VERSION = 1
pattern FB_display_refresh_rate_SPEC_VERSION :: forall a. Integral a => a
type FB_DISPLAY_REFRESH_RATE_EXTENSION_NAME = "XR_FB_display_refresh_rate"
pattern FB_DISPLAY_REFRESH_RATE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_FB_display_refresh_rate.EventDataDisplayRefreshRateChangedFB
instance GHC.Show.Show OpenXR.Extensions.XR_FB_display_refresh_rate.EventDataDisplayRefreshRateChangedFB
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Extensions.XR_FB_display_refresh_rate.EventDataDisplayRefreshRateChangedFB
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_FB_display_refresh_rate.EventDataDisplayRefreshRateChangedFB
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_FB_display_refresh_rate.EventDataDisplayRefreshRateChangedFB
instance Foreign.Storable.Storable OpenXR.Extensions.XR_FB_display_refresh_rate.EventDataDisplayRefreshRateChangedFB
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_FB_display_refresh_rate.EventDataDisplayRefreshRateChangedFB


-- | <h1>Name</h1>
--   
--   XR_EXT_performance_settings - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_performance_settings</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   16
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataPerfSettingsEXT</a>, <a>PerfSettingsDomainEXT</a>,
--   <a>PerfSettingsLevelEXT</a>, <a>PerfSettingsNotificationLevelEXT</a>,
--   <a>PerfSettingsSubDomainEXT</a>,
--   <a>perfSettingsSetPerformanceLevelEXT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_performance_settings

-- | xrPerfSettingsSetPerformanceLevelEXT -
--   xrPerfSettingsSetPerformanceLevelEXT
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>perfSettingsSetPerformanceLevelEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>domain</tt> <i>must</i> be a valid
--   <a>PerfSettingsDomainEXT</a> value</li>
--   <li><tt>level</tt> <i>must</i> be a valid <a>PerfSettingsLevelEXT</a>
--   value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>PerfSettingsDomainEXT</a>, <a>PerfSettingsLevelEXT</a>,
--   <a>Session</a>
perfSettingsSetPerformanceLevelEXT :: forall io. MonadIO io => Session -> PerfSettingsDomainEXT -> PerfSettingsLevelEXT -> io Result

-- | XrEventDataPerfSettingsEXT - XrEventDataPerfSettingsEXT
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>EventDataPerfSettingsEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_EVENT_DATA_PERF_SETTINGS_EXT</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>domain</tt> <i>must</i> be a valid
--   <a>PerfSettingsDomainEXT</a> value</li>
--   <li><tt>subDomain</tt> <i>must</i> be a valid
--   <a>PerfSettingsSubDomainEXT</a> value</li>
--   <li><tt>fromLevel</tt> <i>must</i> be a valid
--   <a>PerfSettingsNotificationLevelEXT</a> value</li>
--   <li><tt>toLevel</tt> <i>must</i> be a valid
--   <a>PerfSettingsNotificationLevelEXT</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>PerfSettingsDomainEXT</a>, <a>PerfSettingsNotificationLevelEXT</a>,
--   <a>PerfSettingsSubDomainEXT</a>, <a>StructureType</a>
data EventDataPerfSettingsEXT
EventDataPerfSettingsEXT :: PerfSettingsDomainEXT -> PerfSettingsSubDomainEXT -> PerfSettingsNotificationLevelEXT -> PerfSettingsNotificationLevelEXT -> EventDataPerfSettingsEXT

-- | <tt>domain</tt> : processing domain in which a threshold has been
--   crossed
[$sel:domain:EventDataPerfSettingsEXT] :: EventDataPerfSettingsEXT -> PerfSettingsDomainEXT

-- | <tt>subDomain</tt> : system area in which a threshold has been crossed
[$sel:subDomain:EventDataPerfSettingsEXT] :: EventDataPerfSettingsEXT -> PerfSettingsSubDomainEXT

-- | <tt>fromLevel</tt> : enumerated notification level which has been
--   exited
[$sel:fromLevel:EventDataPerfSettingsEXT] :: EventDataPerfSettingsEXT -> PerfSettingsNotificationLevelEXT

-- | <tt>toLevel</tt> : enumerated notification level which has been
--   entered
[$sel:toLevel:EventDataPerfSettingsEXT] :: EventDataPerfSettingsEXT -> PerfSettingsNotificationLevelEXT

-- | XrPerfSettingsLevelEXT - XrPerfSettingsLevelEXT
--   
--   <h1>See Also</h1>
--   
--   <a>perfSettingsSetPerformanceLevelEXT</a>
newtype PerfSettingsLevelEXT
PerfSettingsLevelEXT :: Int32 -> PerfSettingsLevelEXT
pattern PERF_SETTINGS_LEVEL_POWER_SAVINGS_EXT :: PerfSettingsLevelEXT
pattern PERF_SETTINGS_LEVEL_SUSTAINED_LOW_EXT :: PerfSettingsLevelEXT
pattern PERF_SETTINGS_LEVEL_SUSTAINED_HIGH_EXT :: PerfSettingsLevelEXT
pattern PERF_SETTINGS_LEVEL_BOOST_EXT :: PerfSettingsLevelEXT

-- | XrPerfSettingsDomainEXT - XrPerfSettingsDomainEXT
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataPerfSettingsEXT</a>,
--   <a>perfSettingsSetPerformanceLevelEXT</a>,
--   <a>thermalGetTemperatureTrendEXT</a>
newtype PerfSettingsDomainEXT
PerfSettingsDomainEXT :: Int32 -> PerfSettingsDomainEXT
pattern PERF_SETTINGS_DOMAIN_CPU_EXT :: PerfSettingsDomainEXT
pattern PERF_SETTINGS_DOMAIN_GPU_EXT :: PerfSettingsDomainEXT

-- | XrPerfSettingsSubDomainEXT - XrPerfSettingsSubDomainEXT
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataPerfSettingsEXT</a>
newtype PerfSettingsSubDomainEXT
PerfSettingsSubDomainEXT :: Int32 -> PerfSettingsSubDomainEXT
pattern PERF_SETTINGS_SUB_DOMAIN_COMPOSITING_EXT :: PerfSettingsSubDomainEXT
pattern PERF_SETTINGS_SUB_DOMAIN_RENDERING_EXT :: PerfSettingsSubDomainEXT
pattern PERF_SETTINGS_SUB_DOMAIN_THERMAL_EXT :: PerfSettingsSubDomainEXT

-- | XrPerfSettingsNotificationLevelEXT -
--   XrPerfSettingsNotificationLevelEXT
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataPerfSettingsEXT</a>, <a>thermalGetTemperatureTrendEXT</a>
newtype PerfSettingsNotificationLevelEXT
PerfSettingsNotificationLevelEXT :: Int32 -> PerfSettingsNotificationLevelEXT
pattern PERF_SETTINGS_NOTIF_LEVEL_NORMAL_EXT :: PerfSettingsNotificationLevelEXT
pattern PERF_SETTINGS_NOTIF_LEVEL_WARNING_EXT :: PerfSettingsNotificationLevelEXT
pattern PERF_SETTINGS_NOTIF_LEVEL_IMPAIRED_EXT :: PerfSettingsNotificationLevelEXT
type EXT_performance_settings_SPEC_VERSION = 1
pattern EXT_performance_settings_SPEC_VERSION :: forall a. Integral a => a
type EXT_PERFORMANCE_SETTINGS_EXTENSION_NAME = "XR_EXT_performance_settings"
pattern EXT_PERFORMANCE_SETTINGS_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_performance_settings.EventDataPerfSettingsEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsNotificationLevelEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsNotificationLevelEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsNotificationLevelEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsNotificationLevelEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsSubDomainEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsSubDomainEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsSubDomainEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsSubDomainEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsDomainEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsDomainEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsDomainEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsDomainEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsLevelEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsLevelEXT
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsLevelEXT
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsLevelEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_performance_settings.EventDataPerfSettingsEXT
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Extensions.XR_EXT_performance_settings.EventDataPerfSettingsEXT
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXT_performance_settings.EventDataPerfSettingsEXT
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXT_performance_settings.EventDataPerfSettingsEXT
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXT_performance_settings.EventDataPerfSettingsEXT
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXT_performance_settings.EventDataPerfSettingsEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsNotificationLevelEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsNotificationLevelEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsSubDomainEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsSubDomainEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsDomainEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsDomainEXT
instance GHC.Show.Show OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsLevelEXT
instance GHC.Read.Read OpenXR.Extensions.XR_EXT_performance_settings.PerfSettingsLevelEXT


-- | <h1>Name</h1>
--   
--   XR_EXT_thermal_query - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXT_thermal_query</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   17
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>PerfSettingsDomainEXT</a>, <a>PerfSettingsNotificationLevelEXT</a>,
--   <a>thermalGetTemperatureTrendEXT</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXT_thermal_query

-- | xrThermalGetTemperatureTrendEXT - xrThermalGetTemperatureTrendEXT
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>thermalGetTemperatureTrendEXT</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   <li><tt>domain</tt> <i>must</i> be a valid
--   <a>PerfSettingsDomainEXT</a> value</li>
--   <li><tt>notificationLevel</tt> <i>must</i> be a pointer to an
--   <a>PerfSettingsNotificationLevelEXT</a> value</li>
--   <li><tt>tempHeadroom</tt> <i>must</i> be a pointer to a <tt>float</tt>
--   value</li>
--   <li><tt>tempSlope</tt> <i>must</i> be a pointer to a <tt>float</tt>
--   value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>PerfSettingsDomainEXT</a>, <a>PerfSettingsNotificationLevelEXT</a>,
--   <a>Session</a>
thermalGetTemperatureTrendEXT :: forall io. MonadIO io => Session -> PerfSettingsDomainEXT -> io (Result, PerfSettingsNotificationLevelEXT, "tempHeadroom" ::: Float, "tempSlope" ::: Float)
type EXT_thermal_query_SPEC_VERSION = 1
pattern EXT_thermal_query_SPEC_VERSION :: forall a. Integral a => a
type EXT_THERMAL_QUERY_EXTENSION_NAME = "XR_EXT_thermal_query"
pattern EXT_THERMAL_QUERY_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a

-- | XrPerfSettingsDomainEXT - XrPerfSettingsDomainEXT
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataPerfSettingsEXT</a>,
--   <a>perfSettingsSetPerformanceLevelEXT</a>,
--   <a>thermalGetTemperatureTrendEXT</a>
newtype PerfSettingsDomainEXT
PerfSettingsDomainEXT :: Int32 -> PerfSettingsDomainEXT
pattern PERF_SETTINGS_DOMAIN_CPU_EXT :: PerfSettingsDomainEXT
pattern PERF_SETTINGS_DOMAIN_GPU_EXT :: PerfSettingsDomainEXT

-- | XrPerfSettingsNotificationLevelEXT -
--   XrPerfSettingsNotificationLevelEXT
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataPerfSettingsEXT</a>, <a>thermalGetTemperatureTrendEXT</a>
newtype PerfSettingsNotificationLevelEXT
PerfSettingsNotificationLevelEXT :: Int32 -> PerfSettingsNotificationLevelEXT
pattern PERF_SETTINGS_NOTIF_LEVEL_NORMAL_EXT :: PerfSettingsNotificationLevelEXT
pattern PERF_SETTINGS_NOTIF_LEVEL_WARNING_EXT :: PerfSettingsNotificationLevelEXT
pattern PERF_SETTINGS_NOTIF_LEVEL_IMPAIRED_EXT :: PerfSettingsNotificationLevelEXT


-- | <h1>Name</h1>
--   
--   XR_EXTX_overlay - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EXTX_overlay</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   34
--   
--   <h1>Revision</h1>
--   
--   4
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataMainSessionVisibilityChangedEXTX</a>,
--   <a>SessionCreateInfoOverlayEXTX</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EXTX_overlay

-- | XrSessionCreateInfoOverlayEXTX - Session creation extension struct
--   providing overlay session parameters
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SessionCreateInfoOverlayEXTX</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SESSION_CREATE_INFO_OVERLAY_EXTX</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>createFlags</tt> <i>must</i> be a valid combination of
--   <a>XrOverlaySessionCreateFlagBitsEXTX</a> values</li>
--   <li><tt>createFlags</tt> <i>must</i> not be <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>OverlaySessionCreateFlagsEXTX</a>, <a>StructureType</a>
data SessionCreateInfoOverlayEXTX
SessionCreateInfoOverlayEXTX :: OverlaySessionCreateFlagsEXTX -> Word32 -> SessionCreateInfoOverlayEXTX

-- | <tt>createFlags</tt> is <tt>0</tt> or one or more
--   <a>XrOverlaySessionCreateFlagBitsEXTX</a> which indicate various
--   characteristics desired for the overlay session.
[$sel:createFlags:SessionCreateInfoOverlayEXTX] :: SessionCreateInfoOverlayEXTX -> OverlaySessionCreateFlagsEXTX

-- | <tt>sessionLayersPlacement</tt> is a value indicating the desired
--   placement of the session’s composition layers in terms of other
--   sessions.
[$sel:sessionLayersPlacement:SessionCreateInfoOverlayEXTX] :: SessionCreateInfoOverlayEXTX -> Word32

-- | XrEventDataMainSessionVisibilityChangedEXTX - Event representing main
--   session visibility change
--   
--   <h1>Members</h1>
--   
--   Receiving the <a>EventDataMainSessionVisibilityChangedEXTX</a> event
--   structure indicates that the main session has gained or lost
--   visibility. This can occur in many cases, one typical example is when
--   a user switches from one OpenXR application to another. See
--   <a>EventDataMainSessionVisibilityChangedEXTX</a> for more information
--   on the standard behavior. This structure contains additional
--   information on the main session including <tt>flags</tt> which
--   indicate additional state information of the main session. Currently,
--   the only flag value supplied is
--   <tt>XR_OVERLAY_MAIN_SESSION_ENABLED_COMPOSITION_LAYER_INFO_DEPTH_BIT_EXTX</tt>
--   which indicates if the main session has enabled the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XR_KHR_composition_layer_depth</a>
--   extension.
--   
--   <h2>Member Descriptions</h2>
--   
--   <ul>
--   <li><tt>type</tt> is the <a>StructureType</a> of this structure.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure
--   in a structure chain. No such structures are defined in core OpenXR or
--   this extension.</li>
--   <li><tt>visible</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>
--   which indicates if <tt>session</tt> is now visible or is not.</li>
--   <li><tt>flags</tt> is 0 or one or more
--   <a>XrOverlayMainSessionFlagBitsEXTX</a> which indicates various state
--   information for the main session.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>EventDataMainSessionVisibilityChangedEXTX</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_EVENT_DATA_MAIN_SESSION_VISIBILITY_CHANGED_EXTX</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>flags</tt> <i>must</i> be a valid combination of
--   <a>XrOverlayMainSessionFlagBitsEXTX</a> values</li>
--   <li><tt>flags</tt> <i>must</i> not be <tt>0</tt></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>OverlayMainSessionFlagsEXTX</a>, <a>StructureType</a>
data EventDataMainSessionVisibilityChangedEXTX
EventDataMainSessionVisibilityChangedEXTX :: Bool -> OverlayMainSessionFlagsEXTX -> EventDataMainSessionVisibilityChangedEXTX
[$sel:visible:EventDataMainSessionVisibilityChangedEXTX] :: EventDataMainSessionVisibilityChangedEXTX -> Bool
[$sel:flags:EventDataMainSessionVisibilityChangedEXTX] :: EventDataMainSessionVisibilityChangedEXTX -> OverlayMainSessionFlagsEXTX

-- | XrOverlayMainSessionFlagsEXTX - XrOverlayMainSessionFlagsEXTX
--   
--   <h1>See Also</h1>
--   
--   <a>EventDataMainSessionVisibilityChangedEXTX</a>
newtype OverlayMainSessionFlagsEXTX
OverlayMainSessionFlagsEXTX :: Flags64 -> OverlayMainSessionFlagsEXTX

-- | XrOverlaySessionCreateFlagsEXTX - XrOverlaySessionCreateFlagsEXTX
--   
--   <h1>See Also</h1>
--   
--   <a>SessionCreateInfoOverlayEXTX</a>
newtype OverlaySessionCreateFlagsEXTX
OverlaySessionCreateFlagsEXTX :: Flags64 -> OverlaySessionCreateFlagsEXTX
type EXTX_overlay_SPEC_VERSION = 4
pattern EXTX_overlay_SPEC_VERSION :: forall a. Integral a => a
type EXTX_OVERLAY_EXTENSION_NAME = "XR_EXTX_overlay"
pattern EXTX_OVERLAY_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXTX_overlay.SessionCreateInfoOverlayEXTX
instance Data.Bits.FiniteBits OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance Data.Bits.Bits OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXTX_overlay.EventDataMainSessionVisibilityChangedEXTX
instance Data.Bits.FiniteBits OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX
instance Data.Bits.Bits OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX
instance GHC.Classes.Ord OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX
instance GHC.Classes.Eq OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX
instance GHC.Show.Show OpenXR.Extensions.XR_EXTX_overlay.SessionCreateInfoOverlayEXTX
instance GHC.Show.Show OpenXR.Extensions.XR_EXTX_overlay.EventDataMainSessionVisibilityChangedEXTX
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXTX_overlay.SessionCreateInfoOverlayEXTX
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXTX_overlay.SessionCreateInfoOverlayEXTX
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXTX_overlay.SessionCreateInfoOverlayEXTX
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXTX_overlay.SessionCreateInfoOverlayEXTX
instance GHC.Show.Show OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance GHC.Read.Read OpenXR.Extensions.XR_EXTX_overlay.OverlaySessionCreateFlagsEXTX
instance OpenXR.Core10.OtherTypes.IsEventData OpenXR.Extensions.XR_EXTX_overlay.EventDataMainSessionVisibilityChangedEXTX
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EXTX_overlay.EventDataMainSessionVisibilityChangedEXTX
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EXTX_overlay.EventDataMainSessionVisibilityChangedEXTX
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EXTX_overlay.EventDataMainSessionVisibilityChangedEXTX
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EXTX_overlay.EventDataMainSessionVisibilityChangedEXTX
instance GHC.Show.Show OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX
instance GHC.Read.Read OpenXR.Extensions.XR_EXTX_overlay.OverlayMainSessionFlagsEXTX


-- | <h1>Name</h1>
--   
--   XR_EPIC_view_configuration_fov - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_EPIC_view_configuration_fov</a> in the main specification
--   for complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   60
--   
--   <h1>Revision</h1>
--   
--   2
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ViewConfigurationViewFovEPIC</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_EPIC_view_configuration_fov

-- | XrViewConfigurationViewFovEPIC - View Configuration Field-of-View
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>ViewConfigurationViewFovEPIC</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_VIEW_CONFIGURATION_VIEW_FOV_EPIC</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Fovf</a>, <a>StructureType</a>
data ViewConfigurationViewFovEPIC
ViewConfigurationViewFovEPIC :: Fovf -> Fovf -> ViewConfigurationViewFovEPIC

-- | <tt>recommendedFov</tt> is the recommended field-of-view based on the
--   current user IPD.
[$sel:recommendedFov:ViewConfigurationViewFovEPIC] :: ViewConfigurationViewFovEPIC -> Fovf

-- | <tt>maxMutableFov</tt> is the maximum field-of-view that the runtime
--   can display.
[$sel:maxMutableFov:ViewConfigurationViewFovEPIC] :: ViewConfigurationViewFovEPIC -> Fovf
type EPIC_view_configuration_fov_SPEC_VERSION = 2
pattern EPIC_view_configuration_fov_SPEC_VERSION :: forall a. Integral a => a
type EPIC_VIEW_CONFIGURATION_FOV_EXTENSION_NAME = "XR_EPIC_view_configuration_fov"
pattern EPIC_VIEW_CONFIGURATION_FOV_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Show.Show OpenXR.Extensions.XR_EPIC_view_configuration_fov.ViewConfigurationViewFovEPIC
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_EPIC_view_configuration_fov.ViewConfigurationViewFovEPIC
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_EPIC_view_configuration_fov.ViewConfigurationViewFovEPIC
instance Foreign.Storable.Storable OpenXR.Extensions.XR_EPIC_view_configuration_fov.ViewConfigurationViewFovEPIC
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_EPIC_view_configuration_fov.ViewConfigurationViewFovEPIC

module OpenXR.Core10.DisplayTiming

-- | xrBeginFrame - Marks a frame
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>beginFrame</a> is called prior to the start of frame rendering. The
--   application <i>should</i> still call <a>beginFrame</a> but omit
--   rendering work for the frame if
--   <a>FrameState</a>::<tt>shouldRender</tt> is <a>FALSE</a>.
--   
--   The runtime <i>must</i> return the error code
--   <a>ERROR_CALL_ORDER_INVALID</a> if there was no corresponding
--   successful call to <a>waitFrame</a>.
--   
--   The runtime <i>must</i> return the success code <a>FRAME_DISCARDED</a>
--   if a prior <a>beginFrame</a> has been called without an intervening
--   call to <a>endFrame</a>.
--   
--   The runtime <i>must</i> return <a>ERROR_SESSION_NOT_RUNNING</a> if the
--   <tt>session</tt> <a>is not running</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li>If <tt>frameBeginInfo</tt> is not <tt>NULL</tt>,
--   <tt>frameBeginInfo</tt> <i>must</i> be a pointer to a valid
--   <a>FrameBeginInfo</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li><li><a>FRAME_DISCARDED</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_CALL_ORDER_INVALID</a></li><li><a>ERROR_SESSION_NOT_RUNNING</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>FrameBeginInfo</a>, <a>Session</a>, <a>endFrame</a>,
--   <a>waitFrame</a>
beginFrame :: forall io. MonadIO io => Session -> ("frameBeginInfo" ::: Maybe FrameBeginInfo) -> io Result

-- | This function will call the supplied action between calls to
--   <a>beginFrame</a> and <a>endFrame</a>
--   
--   Note that <a>endFrame</a> is *not* called if an exception is thrown by
--   the inner action.
useFrame :: forall a io r. (Extendss FrameEndInfo a, PokeChain a, MonadIO io) => Session -> Maybe FrameBeginInfo -> FrameEndInfo a -> (Result -> io r) -> io (Result, r)

-- | xrLocateViews - Gets view and projection info
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>session</tt> is a handle to the provided <a>Session</a>.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>viewLocateInfo</tt> is a pointer to a valid
--   <a>ViewLocateInfo</a> structure.</li>
--   <li><tt>viewState</tt> is the output structure with the viewer state
--   information.</li>
--   <li><tt>viewCapacityInput</tt> is an input parameter which specifies
--   the capacity of the <tt>views</tt> array. The required capacity
--   <i>must</i> be same as defined by the corresponding
--   <a>ViewConfigurationType</a>.</li>
--   <li><tt>viewCountOutput</tt> is an output parameter which identifies
--   the valid count of <tt>views</tt>.</li>
--   <li><tt>views</tt> is an array of <a>View</a>.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>views</tt> size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   The <a>locateViews</a> function returns the view and projection info
--   for a particular display time. This time is typically the target
--   display time for a given frame. Repeatedly calling <a>locateViews</a>
--   with the same time <i>may</i> not necessarily return the same result.
--   Instead the prediction gets increasingly accurate as the function is
--   called closer to the given time for which a prediction is made. This
--   allows an application to get the predicted views as late as possible
--   in its pipeline to get the least amount of latency and prediction
--   error.
--   
--   <a>locateViews</a> returns an array of <a>View</a> elements, one for
--   each view of the specified view configuration type, along with an
--   <a>ViewState</a> containing additional state data shared across all
--   views. The eye each view corresponds to is statically defined in
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#view_configuration_type</a>
--   in case the application wants to apply eye-specific rendering traits.
--   The <a>ViewState</a> and <a>View</a> member data may change on
--   subsequent calls to <a>locateViews</a>, and so applications
--   <i>must</i> not assume it to be constant.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>viewLocateInfo</tt> <i>must</i> be a pointer to a valid
--   <a>ViewLocateInfo</a> structure</li>
--   <li><tt>viewState</tt> <i>must</i> be a pointer to an <a>ViewState</a>
--   structure</li>
--   <li><tt>viewCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>viewCapacityInput</tt> is not <tt>0</tt>, <tt>views</tt>
--   <i>must</i> be a pointer to an array of <tt>viewCapacityInput</tt>
--   <a>View</a> structures</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a></li><li><a>ERROR_TIME_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>View</a>, <a>ViewLocateInfo</a>, <a>ViewState</a>
locateViews :: forall io. MonadIO io => Session -> ViewLocateInfo -> io (Result, ViewState, "views" ::: Vector View)

-- | xrEndFrame - Marks a frame
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>endFrame</a> <i>may</i> return immediately to the application.
--   <a>FrameEndInfo</a>::<tt>displayTime</tt> <i>should</i> be computed
--   using values returned by <a>waitFrame</a>. The runtime <i>should</i>
--   be robust against variations in the timing of calls to
--   <a>waitFrame</a>, since a pipelined system may call <a>waitFrame</a>
--   on a separate thread from <a>beginFrame</a> and <a>endFrame</a>
--   without any synchronization guarantees.
--   
--   Note
--   
--   An accurate predicted display time is very important to avoid black
--   pull-in by reprojection and to reduce motion judder in case the
--   runtime does not implement a translational reprojection. Reprojection
--   should never display images before the display refresh period they
--   were predicted for, even if they are completed early, because this
--   will cause motion judder just the same. In other words, the better the
--   predicted display time, the less latency experienced by the user.
--   
--   Every call to <a>endFrame</a> <i>must</i> be preceded by a successful
--   call to <a>beginFrame</a>. Failure to do so <i>must</i> result in
--   <a>ERROR_CALL_ORDER_INVALID</a> being returned by <a>endFrame</a>.
--   <a>FrameEndInfo</a> <i>may</i> reference swapchains into which the
--   application has rendered for this frame. From each <a>Swapchain</a>
--   only one image index is implicitly referenced per frame, the one
--   corresponding to the last call to <a>releaseSwapchainImage</a>.
--   However, a specific swapchain (and by extension a specific swapchain
--   image index) <i>may</i> be referenced in <a>FrameEndInfo</a> multiple
--   times. This can be used for example to render a side by side image
--   into a single swapchain image and referencing it twice with differing
--   image rectangles in different layers.
--   
--   If no layers are provided then the display <i>must</i> be cleared.
--   
--   <a>ERROR_LAYER_INVALID</a> <i>must</i> be returned if an unknown,
--   unsupported layer type, or <tt>NULL</tt> pointer is passed as one of
--   the <a>FrameEndInfo</a>::layers.
--   
--   <a>ERROR_LAYER_INVALID</a> <i>must</i> be returned if a layer
--   references a swapchain that has no released swapchain image.
--   
--   <a>ERROR_LAYER_LIMIT_EXCEEDED</a> <i>must</i> be returned if
--   <a>FrameEndInfo</a>::layerCount exceeds
--   <a>SystemGraphicsProperties</a>::maxLayerCount or if the runtime is
--   unable to composite the specified layers due to resource constraints.
--   
--   <a>ERROR_SWAPCHAIN_RECT_INVALID</a> <i>must</i> be returned if
--   <a>FrameEndInfo</a>::layers contains a composition layer which
--   references pixels outside of the associated swapchain image or if
--   negatively sized.
--   
--   <a>ERROR_ENVIRONMENT_BLEND_MODE_UNSUPPORTED</a> <i>must</i> be
--   returned if <a>FrameEndInfo</a>::environmentBlendMode is not
--   supported.
--   
--   <a>ERROR_SESSION_NOT_RUNNING</a> <i>must</i> be returned if the
--   <tt>session</tt> <a>is not running</a>.
--   
--   Note
--   
--   Applications should discard frames for which <a>endFrame</a> returns a
--   recoverable error over attempting to resubmit the frame with different
--   frame parameters to provide a more consistent experience across
--   different runtime implementations.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_CALL_ORDER_INVALID</a></li><li><a>ERROR_LAYER_INVALID</a></li><li><a>ERROR_SWAPCHAIN_RECT_INVALID</a></li><li><a>ERROR_ENVIRONMENT_BLEND_MODE_UNSUPPORTED</a></li><li><a>ERROR_SESSION_NOT_RUNNING</a></li><li><a>ERROR_LAYER_LIMIT_EXCEEDED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_TIME_INVALID</a></li><li><a>ERROR_POSE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>FrameEndInfo</a>, <a>Session</a>, <a>beginFrame</a>,
--   <a>waitFrame</a>
endFrame :: forall a io. (Extendss FrameEndInfo a, PokeChain a, MonadIO io) => Session -> FrameEndInfo a -> io Result

-- | xrWaitFrame - Frame timing function
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>waitFrame</a> throttles the application frame loop in order to
--   synchronize application frame submissions with the display.
--   <a>waitFrame</a> returns a predicted display time for the next time
--   that the runtime predicts a composited frame will be displayed. The
--   runtime <i>may</i> affect this computation by changing the return
--   values and throttling of <a>waitFrame</a> in response to feedback from
--   frame submission and completion times in <a>endFrame</a>. An
--   application <i>must</i> eventually match each <a>waitFrame</a> call
--   with one call to <a>beginFrame</a>. A subsequent <a>waitFrame</a> call
--   <i>must</i> block until the previous frame has been begun with
--   <a>beginFrame</a> and <i>must</i> unblock independently of the
--   corresponding call to <a>endFrame</a>. When less than one frame
--   interval has passed since the previous return from <a>waitFrame</a>,
--   the runtime <i>should</i> block until the beginning of the next frame
--   interval. If more than one frame interval has passed since the last
--   return from <a>waitFrame</a>, the runtime <i>may</i> return
--   immediately or block until the beginning of the next frame interval.
--   
--   In the case that an application has pipelined frame submissions, the
--   application <i>should</i> compute the appropriate target display time
--   using both the predicted display time and predicted display interval.
--   The application <i>should</i> use the computed target display time
--   when requesting space and view locations for rendering.
--   
--   The <a>FrameState</a>::<tt>predictedDisplayTime</tt> returned by
--   <a>waitFrame</a> <i>must</i> be monotonically increasing.
--   
--   The runtime <i>may</i> dynamically adjust the start time of the frame
--   interval relative to the display hardware’s refresh cycle to minimize
--   graphics processor contention between the application and the
--   compositor.
--   
--   <a>waitFrame</a> <i>must</i> be callable from any thread, including a
--   different thread than <a>beginFrame</a>/<a>endFrame</a> are being
--   called from.
--   
--   Calling <a>waitFrame</a> <i>must</i> be externally synchronized by the
--   application, concurrent calls <i>may</i> result in undefined behavior.
--   
--   The runtime <i>must</i> return <a>ERROR_SESSION_NOT_RUNNING</a> if the
--   <tt>session</tt> <a>is not running</a>.
--   
--   Note
--   
--   The engine simulation <i>should</i> advance based on the display time.
--   Every stage in the engine pipeline should use the exact same display
--   time for one particular application-generated frame. An accurate and
--   consistent display time across all stages and threads in the engine
--   pipeline is important to avoid object motion judder. If the
--   application has multiple pipeline stages, the application should pass
--   its computed display time through its pipeline, as <a>waitFrame</a>
--   must be called only once per frame.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <ul>
--   <li>If <tt>frameWaitInfo</tt> is not <tt>NULL</tt>,
--   <tt>frameWaitInfo</tt> <i>must</i> be a pointer to a valid
--   <a>FrameWaitInfo</a> structure</li>
--   <li><tt>frameState</tt> <i>must</i> be a pointer to an
--   <a>FrameState</a> structure</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to the <tt>session</tt> parameter by any other
--   <a>waitFrame</a> call <i>must</i> be externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i>
--   <ul><li><a>SUCCESS</a></li><li><a>SESSION_LOSS_PENDING</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_SESSION_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SESSION_NOT_RUNNING</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>FrameState</a>, <a>FrameWaitInfo</a>, <a>Session</a>,
--   <a>beginFrame</a>, <a>endFrame</a>
waitFrame :: forall a io. (Extendss FrameState a, PokeChain a, PeekChain a, MonadIO io) => Session -> ("frameWaitInfo" ::: Maybe FrameWaitInfo) -> io (Result, FrameState a)

-- | A variant of <a>waitFrame</a> which makes a *safe* FFI call
waitFrameSafe :: forall a io. (Extendss FrameState a, PokeChain a, PeekChain a, MonadIO io) => Session -> ("frameWaitInfo" ::: Maybe FrameWaitInfo) -> io (Result, FrameState a)

-- | XrView - Struct containing view projection state
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>View</a> structure contains view pose and projection state
--   necessary to render a single projection view in the view
--   configuration.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Fovf</a>, <a>Posef</a>, <a>StructureType</a>,
--   <a>ViewLocateInfo</a>, <a>ViewState</a>, <a>locateViews</a>
data View
View :: Posef -> Fovf -> View

-- | <tt>pose</tt> is an <a>Posef</a> defining the location and orientation
--   of the view in the <tt>space</tt> specified by the <a>locateViews</a>
--   function.
[$sel:pose:View] :: View -> Posef

-- | <tt>fov</tt> is the <a>Fovf</a> for the four sides of the projection.
[$sel:fov:View] :: View -> Fovf

-- | XrViewLocateInfo - Struct containing view locate information
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>ViewLocateInfo</a> structure contains the display time and
--   space used to locate the view <a>View</a> structures.
--   
--   The runtime <i>must</i> return error
--   <a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a> if the given
--   <tt>viewConfigurationType</tt> is not one of the supported type
--   reported by <a>enumerateViewConfigurations</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>Space</a>, <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>View</a>, <a>ViewConfigurationType</a>, <a>ViewState</a>,
--   <a>locateViews</a>
data ViewLocateInfo
ViewLocateInfo :: ViewConfigurationType -> Time -> Ptr Space_T -> ViewLocateInfo

-- | <tt>viewConfigurationType</tt> is <a>ViewConfigurationType</a> to
--   query for.
--   
--   <tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value
[$sel:viewConfigurationType:ViewLocateInfo] :: ViewLocateInfo -> ViewConfigurationType

-- | <tt>displayTime</tt> is the time for which the view poses are
--   predicted.
[$sel:displayTime:ViewLocateInfo] :: ViewLocateInfo -> Time

-- | <tt>space</tt> is the <a>Space</a> in which the <tt>pose</tt> in each
--   <a>View</a> is expressed.
--   
--   <tt>space</tt> <i>must</i> be a valid <a>Space</a> handle
[$sel:space:ViewLocateInfo] :: ViewLocateInfo -> Ptr Space_T

-- | XrViewState - Struct containing additional view state
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>ViewState</a> contains additional view state from
--   <a>locateViews</a> common to all views of the active view
--   configuration.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>View</a>, <a>ViewStateFlags</a>,
--   <a>locateViews</a>
data ViewState
ViewState :: ViewStateFlags -> ViewState

-- | <tt>viewStateFlags</tt> is a bitmask of <a>XrViewStateFlagBits</a>
--   indicating state for all views.
--   
--   <tt>viewStateFlags</tt> <i>must</i> be <tt>0</tt> or a valid
--   combination of <a>XrViewStateFlagBits</a> values
[$sel:viewStateFlags:ViewState] :: ViewState -> ViewStateFlags

-- | XrFrameBeginInfo - Begin frame information
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Because this structure only exists to support extension-specific
--   structures, <a>beginFrame</a> will accept a <tt>NULL</tt> argument for
--   <tt>frameBeginInfo</tt> for applications that are not using any
--   relevant extensions.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>beginFrame</a>, <a>waitFrame</a>
data FrameBeginInfo
FrameBeginInfo :: FrameBeginInfo

-- | XrFrameEndInfo - End frame information
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be <a>TYPE_FRAME_END_INFO</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a>. See also:
--   <a>SecondaryViewConfigurationFrameEndInfoMSFT</a></li>
--   <li><tt>environmentBlendMode</tt> <i>must</i> be a valid
--   <a>EnvironmentBlendMode</a> value</li>
--   <li>If <tt>layerCount</tt> is not <tt>0</tt>, <tt>layers</tt>
--   <i>must</i> be a pointer to an array of <tt>layerCount</tt> valid
--   <a>CompositionLayerBaseHeader</a>-based structures. See also:
--   <a>CompositionLayerCubeKHR</a>, <a>CompositionLayerCylinderKHR</a>,
--   <a>CompositionLayerEquirect2KHR</a>,
--   <a>CompositionLayerEquirectKHR</a>, <a>CompositionLayerProjection</a>,
--   <a>CompositionLayerQuad</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>CompositionLayerBaseHeader</a>, <a>EnvironmentBlendMode</a>,
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>endFrame</a>
data FrameEndInfo (es :: [Type])
FrameEndInfo :: Chain es -> Time -> EnvironmentBlendMode -> Word32 -> Vector (SomeChild (CompositionLayerBaseHeader '[])) -> FrameEndInfo (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
[$sel:next:FrameEndInfo] :: FrameEndInfo (es :: [Type]) -> Chain es

-- | <tt>displayTime</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   at which this frame <i>should</i> be displayed.
[$sel:displayTime:FrameEndInfo] :: FrameEndInfo (es :: [Type]) -> Time

-- | <tt>environmentBlendMode</tt> is the <a>EnvironmentBlendMode</a> value
--   representing the desired <a>environment blend mode</a> for this frame.
[$sel:environmentBlendMode:FrameEndInfo] :: FrameEndInfo (es :: [Type]) -> EnvironmentBlendMode

-- | <tt>layerCount</tt> is the number of composition layers in this frame.
--   The maximum supported layer count is identified by
--   <a>SystemGraphicsProperties</a>::maxLayerCount. If layerCount is
--   greater than the maximum supported layer count then
--   <a>ERROR_LAYER_LIMIT_EXCEEDED</a> <i>must</i> be returned.
[$sel:layerCount:FrameEndInfo] :: FrameEndInfo (es :: [Type]) -> Word32

-- | <tt>layers</tt> is a pointer to an array of
--   <a>CompositionLayerBaseHeader</a> pointers.
[$sel:layers:FrameEndInfo] :: FrameEndInfo (es :: [Type]) -> Vector (SomeChild (CompositionLayerBaseHeader '[]))

-- | XrFrameWaitInfo - Wait frame information structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Because this structure only exists to support extension-specific
--   structures, <a>waitFrame</a> <i>must</i> accept a <tt>NULL</tt>
--   argument for <tt>frameWaitInfo</tt> for applications that are not
--   using any relevant extensions.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>FrameState</a>, <a>StructureType</a>, <a>waitFrame</a>
data FrameWaitInfo
FrameWaitInfo :: FrameWaitInfo

-- | XrFrameState - Frame prediction structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>FrameState</a> describes the time at which the next frame will be
--   displayed to the user. <tt>predictedDisplayTime</tt> <i>must</i> refer
--   to the midpoint of the interval during which the frame is displayed.
--   The runtime <i>may</i> report a different
--   <tt>predictedDisplayPeriod</tt> from the hardware’s refresh cycle.
--   
--   For any frame where <tt>shouldRender</tt> is <a>FALSE</a>, the
--   application <i>should</i> avoid heavy GPU work for that frame, for
--   example by not rendering its layers. This typically happens when the
--   application is transitioning into or out of a running session, or when
--   some system UI is fully covering the application at the moment. As
--   long as the session <a>is running</a>, the application <i>should</i>
--   keep running the frame loop to maintain the frame synchronization to
--   the runtime, even if this requires calling <a>endFrame</a> with all
--   layers omitted.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>,
--   <a>FrameWaitInfo</a>, <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>,
--   <a>waitFrame</a>
data FrameState (es :: [Type])
FrameState :: Chain es -> Time -> Duration -> Bool -> FrameState (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>SecondaryViewConfigurationFrameStateMSFT</a>
[$sel:next:FrameState] :: FrameState (es :: [Type]) -> Chain es

-- | <tt>predictedDisplayTime</tt> is the anticipated display
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrTime</a>
--   for the next application-generated frame.
[$sel:predictedDisplayTime:FrameState] :: FrameState (es :: [Type]) -> Time

-- | <tt>predictedDisplayPeriod</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrDuration</a>
--   of the display period for the next application-generated frame, for
--   use in predicting display times beyond the next one.
[$sel:predictedDisplayPeriod:FrameState] :: FrameState (es :: [Type]) -> Duration

-- | <tt>shouldRender</tt> is <a>TRUE</a> if the application <i>should</i>
--   render its layers as normal and submit them to <a>endFrame</a>. When
--   this value is <a>FALSE</a>, the application <i>should</i> avoid heavy
--   GPU work where possible, for example by skipping layer rendering and
--   then omitting those layers when calling <a>endFrame</a>.
[$sel:shouldRender:FrameState] :: FrameState (es :: [Type]) -> Bool
instance GHC.Classes.Eq OpenXR.Core10.DisplayTiming.FrameWaitInfo
instance GHC.Classes.Eq OpenXR.Core10.DisplayTiming.FrameBeginInfo
instance GHC.Classes.Eq OpenXR.Core10.DisplayTiming.ViewState
instance GHC.Classes.Eq OpenXR.Core10.DisplayTiming.ViewLocateInfo
instance GHC.Show.Show OpenXR.Core10.DisplayTiming.View
instance GHC.Show.Show OpenXR.Core10.DisplayTiming.ViewLocateInfo
instance GHC.Show.Show OpenXR.Core10.DisplayTiming.ViewState
instance GHC.Show.Show OpenXR.Core10.DisplayTiming.FrameBeginInfo
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.DisplayTiming.FrameEndInfo es)
instance GHC.Show.Show OpenXR.Core10.DisplayTiming.FrameWaitInfo
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.DisplayTiming.FrameState es)
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.DisplayTiming.FrameState
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.DisplayTiming.FrameState es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.DisplayTiming.FrameState es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.DisplayTiming.FrameState es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.DisplayTiming.FrameState es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.DisplayTiming.FrameState es)
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.DisplayTiming.FrameWaitInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.DisplayTiming.FrameWaitInfo
instance Foreign.Storable.Storable OpenXR.Core10.DisplayTiming.FrameWaitInfo
instance Vulkan.Zero.Zero OpenXR.Core10.DisplayTiming.FrameWaitInfo
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.DisplayTiming.FrameEndInfo
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.DisplayTiming.FrameEndInfo es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.DisplayTiming.FrameEndInfo es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.DisplayTiming.FrameEndInfo es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.DisplayTiming.FrameEndInfo es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.DisplayTiming.FrameEndInfo es)
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.DisplayTiming.FrameBeginInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.DisplayTiming.FrameBeginInfo
instance Foreign.Storable.Storable OpenXR.Core10.DisplayTiming.FrameBeginInfo
instance Vulkan.Zero.Zero OpenXR.Core10.DisplayTiming.FrameBeginInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.DisplayTiming.ViewState
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.DisplayTiming.ViewState
instance Foreign.Storable.Storable OpenXR.Core10.DisplayTiming.ViewState
instance Vulkan.Zero.Zero OpenXR.Core10.DisplayTiming.ViewState
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.DisplayTiming.ViewLocateInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.DisplayTiming.ViewLocateInfo
instance Foreign.Storable.Storable OpenXR.Core10.DisplayTiming.ViewLocateInfo
instance Vulkan.Zero.Zero OpenXR.Core10.DisplayTiming.ViewLocateInfo
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.DisplayTiming.View
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.DisplayTiming.View
instance Foreign.Storable.Storable OpenXR.Core10.DisplayTiming.View
instance Vulkan.Zero.Zero OpenXR.Core10.DisplayTiming.View

module OpenXR.Core10.Device

-- | xrGetSystem - Gets a system identifier
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   To get an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   an application specifies its desired <a>form factor</a> to
--   <a>getSystem</a> and gets the runtime’s
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   associated with that configuration.
--   
--   If the form factor is supported but temporarily unavailable,
--   <a>getSystem</a> <i>must</i> return
--   <a>ERROR_FORM_FACTOR_UNAVAILABLE</a>. A runtime <i>may</i> return
--   <a>SUCCESS</a> on a subsequent call for a form factor it previously
--   returned <a>ERROR_FORM_FACTOR_UNAVAILABLE</a>. For example, connecting
--   or warming up hardware might cause an unavailable form factor to
--   become available.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_FORM_FACTOR_UNAVAILABLE</a></li><li><a>ERROR_FORM_FACTOR_UNSUPPORTED</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>NULL_SYSTEM_ID</a>, <a>Instance</a>, <a>SystemGetInfo</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
getSystem :: forall io. MonadIO io => Instance -> SystemGetInfo -> io SystemId

-- | xrGetSystemProperties - Gets the properties of a particular system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   An application <i>can</i> call <a>getSystemProperties</a> to retrieve
--   information about the system such as vendor ID, system name, and
--   graphics and tracking properties.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>SystemProperties</a>
getSystemProperties :: forall a io. (Extendss SystemProperties a, PokeChain a, PeekChain a, MonadIO io) => Instance -> SystemId -> io (SystemProperties a)

-- | xrCreateSession - Creates an XrSession
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Creates a session using the provided <tt>createInfo</tt> and returns a
--   handle to that session. This session is created in the
--   <a>SESSION_STATE_IDLE</a> state, and a corresponding
--   <a>EventDataSessionStateChanged</a> event to the
--   <a>SESSION_STATE_IDLE</a> state <i>must</i> be generated as the first
--   such event for the new session.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_OUT_OF_MEMORY</a></li><li><a>ERROR_LIMIT_REACHED</a></li><li><a>ERROR_INITIALIZATION_FAILED</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_GRAPHICS_DEVICE_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>ExtensionProperties</a>, <a>Instance</a>, <a>Session</a>,
--   <a>SessionCreateFlags</a>, <a>SessionCreateInfo</a>,
--   <a>beginSession</a>, <a>destroySession</a>, <a>endSession</a>
createSession :: forall a io. (Extendss SessionCreateInfo a, PokeChain a, MonadIO io) => Instance -> SessionCreateInfo a -> io Session

-- | A convenience wrapper to make a compatible pair of calls to
--   <a>createSession</a> and <a>destroySession</a>
--   
--   To ensure that <a>destroySession</a> is always called: pass
--   <a>bracket</a> (or the allocate function from your favourite resource
--   management library) as the last argument. To just extract the pair
--   pass <tt>(,)</tt> as the last argument.
withSession :: forall a io r. (Extendss SessionCreateInfo a, PokeChain a, MonadIO io) => Instance -> SessionCreateInfo a -> (io Session -> (Session -> io ()) -> r) -> r

-- | xrDestroySession - Destroys an XrSession
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>Session</a> handles are destroyed using <a>destroySession</a>. When
--   an <a>Session</a> is destroyed, all handles that are children of that
--   <a>Session</a> are also destroyed.
--   
--   The application is responsible for ensuring that it has no calls using
--   <tt>session</tt> in progress when the session is destroyed.
--   
--   <a>destroySession</a> can be called when the session is in any session
--   state.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>session</tt> <i>must</i> be a valid <a>Session</a> handle</li>
--   </ul>
--   
--   <h2>Thread Safety</h2>
--   
--   <ul>
--   <li>Access to <tt>session</tt>, and any child handles, <i>must</i> be
--   externally synchronized</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Session</a>, <a>beginSession</a>, <a>createSession</a>,
--   <a>endSession</a>
destroySession :: forall io. MonadIO io => Session -> io ()

-- | xrEnumerateEnvironmentBlendModes - Lists environment blend modes
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>instance</tt> is the instance from which <tt>systemId</tt> was
--   retrieved.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>systemId</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   whose environment blend modes will be enumerated.</li>
--   <li><tt>viewConfigurationType</tt> is the <a>ViewConfigurationType</a>
--   to enumerate.</li>
--   <li><tt>environmentBlendModeCapacityInput</tt> is the capacity of the
--   <tt>environmentBlendModes</tt> array, or 0 to indicate a request to
--   retrieve the required capacity.</li>
--   <li><tt>environmentBlendModeCountOutput</tt> is a pointer to the count
--   of <tt>environmentBlendModes</tt> written, or a pointer to the
--   required capacity in the case that
--   <tt>environmentBlendModeCapacityInput</tt> is 0.</li>
--   <li><tt>environmentBlendModes</tt> is a pointer to an array of
--   <a>EnvironmentBlendMode</a> values, but <i>can</i> be <tt>NULL</tt> if
--   <tt>environmentBlendModeCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>environmentBlendModes</tt>
--   size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   Enumerates the set of environment blend modes that this runtime
--   supports for a given view configuration of the system. Environment
--   blend modes <i>should</i> be in order from highest to lowest runtime
--   preference.
--   
--   Runtimes <i>must</i> always return identical buffer contents from this
--   enumeration for the given <tt>systemId</tt> and
--   <tt>viewConfigurationType</tt> for the lifetime of the instance.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value</li>
--   <li><tt>environmentBlendModeCountOutput</tt> <i>must</i> be a pointer
--   to a <tt>uint32_t</tt> value</li>
--   <li>If <tt>environmentBlendModeCapacityInput</tt> is not <tt>0</tt>,
--   <tt>environmentBlendModes</tt> <i>must</i> be a pointer to an array of
--   <tt>environmentBlendModeCapacityInput</tt> <a>EnvironmentBlendMode</a>
--   values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>EnvironmentBlendMode</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>ViewConfigurationType</a>
enumerateEnvironmentBlendModes :: forall io. MonadIO io => Instance -> SystemId -> ViewConfigurationType -> io ("environmentBlendModes" ::: Vector EnvironmentBlendMode)

-- | XrSystemId - Identifier for a system
--   
--   <h1>Description</h1>
--   
--   An
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   is an opaque atom used by the runtime to identify a system. The value
--   <a>NULL_SYSTEM_ID</a> is considered an invalid system.
--   
--   <h1>See Also</h1>
--   
--   <a>NULL_SYSTEM_ID</a>, <a>SessionCreateInfo</a>,
--   <a>SystemProperties</a>, <a>VulkanDeviceCreateInfoKHR</a>,
--   <a>VulkanGraphicsDeviceGetInfoKHR</a>,
--   <a>VulkanInstanceCreateInfoKHR</a>,
--   <a>enumerateEnvironmentBlendModes</a>,
--   <a>enumerateViewConfigurationViews</a>,
--   <a>enumerateViewConfigurations</a>,
--   <a>getD3D11GraphicsRequirementsKHR</a>,
--   <a>getD3D12GraphicsRequirementsKHR</a>,
--   <a>getOpenGLESGraphicsRequirementsKHR</a>,
--   <a>getOpenGLGraphicsRequirementsKHR</a>, <a>getSystem</a>,
--   <a>getSystemProperties</a>, <a>getViewConfigurationProperties</a>,
--   <a>getVulkanDeviceExtensionsKHR</a>,
--   <a>getVulkanGraphicsDeviceKHR</a>,
--   <a>getVulkanGraphicsRequirements2KHR</a>,
--   <a>getVulkanGraphicsRequirementsKHR</a>,
--   <a>getVulkanInstanceExtensionsKHR</a>
newtype SystemId
SystemId :: Word64 -> SystemId

-- | XrSystemGetInfo - Specifies desired attributes of the system
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>SystemGetInfo</a> structure specifies attributes about a system
--   as desired by an application.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>FormFactor</a>, <a>StructureType</a>, <a>getSystem</a>
data SystemGetInfo
SystemGetInfo :: FormFactor -> SystemGetInfo

-- | <tt>formFactor</tt> is the <a>FormFactor</a> requested by the
--   application.
--   
--   <tt>formFactor</tt> <i>must</i> be a valid <a>FormFactor</a> value
[$sel:formFactor:SystemGetInfo] :: SystemGetInfo -> FormFactor

-- | XrSystemProperties - Properties of a particular system
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SystemGraphicsProperties</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>SystemTrackingProperties</a>, <a>getSystem</a>,
--   <a>getSystemProperties</a>
data SystemProperties (es :: [Type])
SystemProperties :: Chain es -> SystemId -> Word32 -> ByteString -> SystemGraphicsProperties -> SystemTrackingProperties -> SystemProperties (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>SystemEyeGazeInteractionPropertiesEXT</a>,
--   <a>SystemHandTrackingMeshPropertiesMSFT</a>,
--   <a>SystemHandTrackingPropertiesEXT</a>
[$sel:next:SystemProperties] :: SystemProperties (es :: [Type]) -> Chain es

-- | <tt>systemId</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   identifying the system.
[$sel:systemId:SystemProperties] :: SystemProperties (es :: [Type]) -> SystemId

-- | <tt>vendorId</tt> is a unique identifier for the vendor of the system.
[$sel:vendorId:SystemProperties] :: SystemProperties (es :: [Type]) -> Word32

-- | <tt>systemName</tt> is a string containing the name of the system.
[$sel:systemName:SystemProperties] :: SystemProperties (es :: [Type]) -> ByteString

-- | <tt>graphicsProperties</tt> is an <a>SystemGraphicsProperties</a>
--   structure specifying the system graphics properties.
[$sel:graphicsProperties:SystemProperties] :: SystemProperties (es :: [Type]) -> SystemGraphicsProperties

-- | <tt>trackingProperties</tt> is an <a>SystemTrackingProperties</a>
--   structure specifying system tracking properties.
[$sel:trackingProperties:SystemProperties] :: SystemProperties (es :: [Type]) -> SystemTrackingProperties

-- | XrSystemGraphicsProperties - Graphics-related properties of a
--   particular system
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>SystemProperties</a>, <a>SystemTrackingProperties</a>,
--   <a>getSystem</a>, <a>getSystemProperties</a>
data SystemGraphicsProperties
SystemGraphicsProperties :: Word32 -> Word32 -> Word32 -> SystemGraphicsProperties

-- | <tt>maxSwapchainImageHeight</tt> is the maximum swapchain image pixel
--   height supported by this system.
[$sel:maxSwapchainImageHeight:SystemGraphicsProperties] :: SystemGraphicsProperties -> Word32

-- | <tt>maxSwapchainImageWidth</tt> is the maximum swapchain image pixel
--   width supported by this system.
[$sel:maxSwapchainImageWidth:SystemGraphicsProperties] :: SystemGraphicsProperties -> Word32

-- | <tt>maxLayerCount</tt> is the maximum number of composition layers
--   supported by this system. The runtime <i>must</i> support at least
--   <a>MIN_COMPOSITION_LAYERS_SUPPORTED</a> layers.
[$sel:maxLayerCount:SystemGraphicsProperties] :: SystemGraphicsProperties -> Word32

-- | XrSystemTrackingProperties - Tracking-related properties of a
--   particular system
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>SystemGraphicsProperties</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>SystemProperties</a>, <a>getSystem</a>, <a>getSystemProperties</a>
data SystemTrackingProperties
SystemTrackingProperties :: Bool -> Bool -> SystemTrackingProperties

-- | <tt>orientationTracking</tt> is set to <a>TRUE</a> to indicate the
--   system supports orientational tracking of the view pose(s),
--   <a>FALSE</a> otherwise.
[$sel:orientationTracking:SystemTrackingProperties] :: SystemTrackingProperties -> Bool

-- | <tt>positionTracking</tt> is set to <a>TRUE</a> to indicate the system
--   supports positional tracking of the view pose(s), <a>FALSE</a>
--   otherwise.
[$sel:positionTracking:SystemTrackingProperties] :: SystemTrackingProperties -> Bool

-- | XrSessionCreateInfo - Creates a session
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>SessionCreateFlags</a>, <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>createSession</a>
data SessionCreateInfo (es :: [Type])
SessionCreateInfo :: Chain es -> SessionCreateFlags -> SystemId -> SessionCreateInfo (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR. Note
--   that in most cases one graphics API extension specific struct needs to
--   be in this next chain.
--   
--   <tt>next</tt>, unless otherwise specified via an extension,
--   <i>must</i> contain exactly one graphics API binding structure (a
--   structure whose name begins with <tt>"XrGraphicsBinding"</tt>) or
--   <a>ERROR_GRAPHICS_DEVICE_INVALID</a> <i>must</i> be returned.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>GraphicsBindingD3D11KHR</a>, <a>GraphicsBindingD3D12KHR</a>,
--   <a>GraphicsBindingEGLMNDX</a>,
--   <a>GraphicsBindingOpenGLESAndroidKHR</a>,
--   <a>GraphicsBindingOpenGLWaylandKHR</a>,
--   <a>GraphicsBindingOpenGLWin32KHR</a>,
--   <a>GraphicsBindingOpenGLXcbKHR</a>,
--   <a>GraphicsBindingOpenGLXlibKHR</a>, <a>GraphicsBindingVulkanKHR</a>,
--   <a>HolographicWindowAttachmentMSFT</a>,
--   <a>SessionCreateInfoOverlayEXTX</a>
[$sel:next:SessionCreateInfo] :: SessionCreateInfo (es :: [Type]) -> Chain es

-- | <tt>createFlags</tt> identifies <a>SessionCreateFlags</a> that apply
--   to the creation.
--   
--   <tt>createFlags</tt> <i>must</i> be <tt>0</tt>
[$sel:createFlags:SessionCreateInfo] :: SessionCreateInfo (es :: [Type]) -> SessionCreateFlags

-- | <tt>systemId</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   representing the system of devices to be used by this session.
--   
--   <tt>systemId</tt> <i>must</i> be a valid
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   or <a>ERROR_SYSTEM_INVALID</a> <i>must</i> be returned.
[$sel:systemId:SessionCreateInfo] :: SessionCreateInfo (es :: [Type]) -> SystemId
instance GHC.Classes.Eq OpenXR.Core10.Device.SystemTrackingProperties
instance GHC.Classes.Eq OpenXR.Core10.Device.SystemGraphicsProperties
instance GHC.Classes.Eq OpenXR.Core10.Device.SystemGetInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Device.SystemId
instance Foreign.Storable.Storable OpenXR.Core10.Device.SystemId
instance GHC.Classes.Ord OpenXR.Core10.Device.SystemId
instance GHC.Classes.Eq OpenXR.Core10.Device.SystemId
instance GHC.Show.Show OpenXR.Core10.Device.SystemGetInfo
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.Device.SystemProperties es)
instance GHC.Show.Show OpenXR.Core10.Device.SystemGraphicsProperties
instance GHC.Show.Show OpenXR.Core10.Device.SystemTrackingProperties
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.Device.SessionCreateInfo es)
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.Device.SessionCreateInfo
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Device.SessionCreateInfo es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.Device.SessionCreateInfo es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Device.SessionCreateInfo es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.Device.SessionCreateInfo es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.Device.SessionCreateInfo es)
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.Device.SystemProperties
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Device.SystemProperties es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.Device.SystemProperties es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.Device.SystemProperties es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.Device.SystemProperties es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.Device.SystemProperties es)
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Device.SystemTrackingProperties
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Device.SystemTrackingProperties
instance Foreign.Storable.Storable OpenXR.Core10.Device.SystemTrackingProperties
instance Vulkan.Zero.Zero OpenXR.Core10.Device.SystemTrackingProperties
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Device.SystemGraphicsProperties
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Device.SystemGraphicsProperties
instance Foreign.Storable.Storable OpenXR.Core10.Device.SystemGraphicsProperties
instance Vulkan.Zero.Zero OpenXR.Core10.Device.SystemGraphicsProperties
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.Device.SystemGetInfo
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.Device.SystemGetInfo
instance Foreign.Storable.Storable OpenXR.Core10.Device.SystemGetInfo
instance Vulkan.Zero.Zero OpenXR.Core10.Device.SystemGetInfo
instance GHC.Show.Show OpenXR.Core10.Device.SystemId


-- | <h1>Name</h1>
--   
--   XR_KHR_vulkan_enable - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_vulkan_enable</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   26
--   
--   <h1>Revision</h1>
--   
--   7
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsBindingVulkanKHR</a>, <a>GraphicsRequirementsVulkanKHR</a>,
--   <a>SwapchainImageVulkanKHR</a>, <a>getVulkanDeviceExtensionsKHR</a>,
--   <a>getVulkanGraphicsDeviceKHR</a>,
--   <a>getVulkanGraphicsRequirementsKHR</a>,
--   <a>getVulkanInstanceExtensionsKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_vulkan_enable

-- | xrGetVulkanInstanceExtensionsKHR - Get list of required Vulkan
--   instance extensions for an OpenXR instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>instance</tt> is an <a>Instance</a> handle previously created
--   with <a>createInstance</a>.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>systemId</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   handle for the system which will be used to create a session.</li>
--   <li><tt>bufferCapacityInput</tt> is the capacity of the
--   <tt>buffer</tt>, or 0 to indicate a request to retrieve the required
--   capacity.</li>
--   <li><tt>bufferCountOutput</tt> is a pointer to the count of characters
--   written (including terminating <tt>\0</tt>), or a pointer to the
--   required capacity in the case that <tt>bufferCapacityInput</tt> is
--   0.</li>
--   <li><tt>buffer</tt> is a pointer to an array of characters, but
--   <i>can</i> be <tt>NULL</tt> if <tt>bufferCapacityInput</tt> is 0. The
--   format of the output is a single space (ASCII <tt>0x20</tt>) delimited
--   string of extension names.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>buffer</tt> size.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVulkanInstanceExtensionsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>bufferCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>bufferCapacityInput</tt> is not <tt>0</tt>, <tt>buffer</tt>
--   <i>must</i> be a pointer to an array of <tt>bufferCapacityInput</tt>
--   null-terminated UTF-8 strings</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>getVulkanDeviceExtensionsKHR</a>
getVulkanInstanceExtensionsKHR :: forall io. MonadIO io => Instance -> SystemId -> io ("buffer" ::: ByteString)

-- | xrGetVulkanDeviceExtensionsKHR - Get list of required Vulkan device
--   extensions for an OpenXR instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>instance</tt> is an <a>Instance</a> handle previously created
--   with <a>createInstance</a>.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>systemId</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   handle for the system which will be used to create a session.</li>
--   <li><tt>bufferCapacityInput</tt> is the capacity of the
--   <tt>buffer</tt>, or 0 to indicate a request to retrieve the required
--   capacity.</li>
--   <li><tt>bufferCountOutput</tt> is a pointer to the count of characters
--   written (including terminating <tt>\0</tt>), or a pointer to the
--   required capacity in the case that <tt>bufferCapacityInput</tt> is
--   0.</li>
--   <li><tt>buffer</tt> is a pointer to an array of characters, but
--   <i>can</i> be <tt>NULL</tt> if <tt>bufferCapacityInput</tt> is 0. The
--   format of the output is a single space (ASCII <tt>0x20</tt>) delimited
--   string of extension names.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>buffer</tt> size.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVulkanDeviceExtensionsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>bufferCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>bufferCapacityInput</tt> is not <tt>0</tt>, <tt>buffer</tt>
--   <i>must</i> be a pointer to an array of <tt>bufferCapacityInput</tt>
--   null-terminated UTF-8 strings</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>getVulkanInstanceExtensionsKHR</a>
getVulkanDeviceExtensionsKHR :: forall io. MonadIO io => Instance -> SystemId -> io ("buffer" ::: ByteString)

-- | xrGetVulkanGraphicsDeviceKHR - Retrieve the Vulkan physical device
--   associated with an OpenXR instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>getVulkanGraphicsDeviceKHR</a> function identifies to the
--   application what graphics device (Vulkan <tt>VkPhysicalDevice</tt>)
--   needs to be used. <a>getVulkanGraphicsDeviceKHR</a> <i>must</i> be
--   called prior to calling <a>createSession</a>, and the
--   <tt>VkPhysicalDevice</tt> that <a>getVulkanGraphicsDeviceKHR</a>
--   returns should be passed to <a>createSession</a> in the
--   <a>GraphicsBindingVulkanKHR</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVulkanGraphicsDeviceKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>vkInstance</tt> <i>must</i> be a valid <tt>VkInstance</tt>
--   value</li>
--   <li><tt>vkPhysicalDevice</tt> <i>must</i> be a pointer to a
--   <tt>VkPhysicalDevice</tt> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
getVulkanGraphicsDeviceKHR :: forall io. MonadIO io => Instance -> SystemId -> ("vkInstance" ::: Ptr Instance_T) -> io ("vkPhysicalDevice" ::: Ptr PhysicalDevice_T)

-- | xrGetVulkanGraphicsRequirementsKHR - Retrieve the Vulkan version
--   requirements for an instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>getVulkanGraphicsRequirementsKHR</a> function identifies to the
--   application the minimum Vulkan version requirement and the highest
--   known tested Vulkan version. The runtime <i>must</i> return
--   <a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a>
--   (<a>ERROR_VALIDATION_FAILURE</a> <i>may</i> be returned due to legacy
--   behavior) on calls to <a>createSession</a> if
--   <a>getVulkanGraphicsRequirementsKHR</a> has not been called for the
--   same <tt>instance</tt> and <tt>systemId</tt>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVulkanGraphicsRequirementsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>graphicsRequirements</tt> <i>must</i> be a pointer to an
--   <a>GraphicsRequirementsVulkanKHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsRequirementsVulkanKHR</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
getVulkanGraphicsRequirementsKHR :: forall io. MonadIO io => Instance -> SystemId -> io GraphicsRequirementsVulkanKHR

-- | XrGraphicsBindingVulkanKHR - The graphics binding structure to be
--   passed at session creation to use Vulkan
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating a Vulkan-backed <a>Session</a>, the application will
--   provide a pointer to an <a>GraphicsBindingVulkanKHR</a> in the
--   <tt>next</tt> chain of the <a>SessionCreateInfo</a>.
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> have enabled a Vulkan API version in
--   the range specified by <a>GraphicsBindingVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> have enabled all the instance
--   extensions specified by <a>getVulkanInstanceExtensionsKHR</a></li>
--   <li><tt>physicalDevice</tt> <tt>VkPhysicalDevice</tt> <i>must</i>
--   match the device specified by <a>getVulkanGraphicsDeviceKHR</a></li>
--   <li><tt>device</tt> <i>must</i> have enabled all the device extensions
--   specified by <a>getVulkanDeviceExtensionsKHR</a></li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>instance</tt> <i>must</i> be a valid <tt>VkInstance</tt>
--   value</li>
--   <li><tt>physicalDevice</tt> <i>must</i> be a valid
--   <tt>VkPhysicalDevice</tt> value</li>
--   <li><tt>device</tt> <i>must</i> be a valid <tt>VkDevice</tt>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingVulkanKHR
GraphicsBindingVulkanKHR :: Ptr Instance_T -> Ptr PhysicalDevice_T -> Ptr Device_T -> Word32 -> Word32 -> GraphicsBindingVulkanKHR

-- | <tt>instance</tt> is a valid Vulkan <tt>VkInstance</tt>.
[$sel:instance':GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Ptr Instance_T

-- | <tt>physicalDevice</tt> is a valid Vulkan <tt>VkPhysicalDevice</tt>.
[$sel:physicalDevice:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Ptr PhysicalDevice_T

-- | <tt>device</tt> is a valid Vulkan <tt>VkDevice</tt>.
[$sel:device:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Ptr Device_T

-- | <tt>queueFamilyIndex</tt> is a valid queue family index on
--   <tt>device</tt>.
[$sel:queueFamilyIndex:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Word32

-- | <tt>queueIndex</tt> is a valid queue index on <tt>device</tt> to be
--   used for synchronization.
[$sel:queueIndex:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Word32

-- | XrSwapchainImageVulkanKHR - Vulkan-specific swapchain image structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a given session was created with <a>GraphicsBindingVulkanKHR</a>,
--   the following conditions <i>must</i> apply.
--   
--   <ul>
--   <li>Calls to <a>enumerateSwapchainImages</a> on an <a>Swapchain</a> in
--   that session <i>must</i> return an array of
--   <a>SwapchainImageVulkanKHR</a> structures.</li>
--   <li>Whenever an OpenXR function accepts an
--   <a>SwapchainImageBaseHeader</a> pointer as a parameter in that
--   session, the runtime <i>must</i> also accept a pointer to an
--   <a>SwapchainImageVulkanKHR</a>.</li>
--   </ul>
--   
--   The OpenXR runtime <i>must</i> interpret the top-left corner of the
--   swapchain image as the coordinate origin unless specified otherwise by
--   extension functionality.
--   
--   The OpenXR runtime <i>must</i> interpret the swapchain images in a
--   clip space of positive Y pointing down, near Z plane at 0, and far Z
--   plane at 1.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SwapchainImageVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>image</tt> <i>must</i> be a valid <tt>VkImage</tt> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SwapchainImageBaseHeader</a>
data SwapchainImageVulkanKHR
SwapchainImageVulkanKHR :: Image -> SwapchainImageVulkanKHR

-- | <tt>image</tt> is a valid Vulkan <tt>VkImage</tt> to use.
[$sel:image:SwapchainImageVulkanKHR] :: SwapchainImageVulkanKHR -> Image

-- | XrGraphicsRequirementsVulkanKHR - Vulkan API version requirements
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>GraphicsRequirementsVulkanKHR</a> is populated by
--   <a>getVulkanGraphicsRequirementsKHR</a> with the runtime’s Vulkan API
--   version requirements.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsRequirementsVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_REQUIREMENTS_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>,
--   <a>getVulkanGraphicsRequirements2KHR</a>,
--   <a>getVulkanGraphicsRequirementsKHR</a>
data GraphicsRequirementsVulkanKHR
GraphicsRequirementsVulkanKHR :: Version -> Version -> GraphicsRequirementsVulkanKHR

-- | <tt>minApiVersionSupported</tt> is the minimum Vulkan Instance API
--   version that the runtime supports. Uses <a>MAKE_VERSION</a> on major
--   and minor API version, ignoring any patch version component.
[$sel:minApiVersionSupported:GraphicsRequirementsVulkanKHR] :: GraphicsRequirementsVulkanKHR -> Version

-- | <tt>maxApiVersionSupported</tt> is the maximum Vulkan Instance API
--   version that the runtime has been tested on and is known to support.
--   Newer Vulkan Instance API versions might work if they are compatible.
--   Uses <a>MAKE_VERSION</a> on major and minor API version, ignoring any
--   patch version component.
[$sel:maxApiVersionSupported:GraphicsRequirementsVulkanKHR] :: GraphicsRequirementsVulkanKHR -> Version
type KHR_vulkan_enable_SPEC_VERSION = 7
pattern KHR_vulkan_enable_SPEC_VERSION :: forall a. Integral a => a
type KHR_VULKAN_ENABLE_EXTENSION_NAME = "XR_KHR_vulkan_enable"
pattern KHR_VULKAN_ENABLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsRequirementsVulkanKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable.SwapchainImageVulkanKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsBindingVulkanKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsBindingVulkanKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable.SwapchainImageVulkanKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsRequirementsVulkanKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsRequirementsVulkanKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsRequirementsVulkanKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsRequirementsVulkanKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsRequirementsVulkanKHR
instance OpenXR.Core10.Image.IsSwapchainImage OpenXR.Extensions.XR_KHR_vulkan_enable.SwapchainImageVulkanKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_vulkan_enable.SwapchainImageVulkanKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_vulkan_enable.SwapchainImageVulkanKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable.SwapchainImageVulkanKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable.SwapchainImageVulkanKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsBindingVulkanKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsBindingVulkanKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsBindingVulkanKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable.GraphicsBindingVulkanKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_vulkan_enable2 - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_vulkan_enable2</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   91
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsBindingVulkan2KHR</a>,
--   <a>GraphicsRequirementsVulkan2KHR</a>,
--   <a>SwapchainImageVulkan2KHR</a>, <a>VulkanDeviceCreateInfoKHR</a>,
--   <a>VulkanGraphicsDeviceGetInfoKHR</a>,
--   <a>VulkanInstanceCreateInfoKHR</a>, <a>createVulkanDeviceKHR</a>,
--   <a>createVulkanInstanceKHR</a>, <a>getVulkanGraphicsDevice2KHR</a>,
--   <a>getVulkanGraphicsRequirements2KHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_vulkan_enable2

-- | xrCreateVulkanInstanceKHR - Create an OpenXR compatible VkInstance
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createVulkanInstanceKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>VulkanInstanceCreateInfoKHR</a> structure</li>
--   <li><tt>vulkanInstance</tt> <i>must</i> be a pointer to a
--   <tt>VkInstance</tt> value</li>
--   <li><tt>vulkanResult</tt> <i>must</i> be a pointer to a
--   <tt>VkResult</tt> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>VulkanInstanceCreateInfoKHR</a>,
--   <a>createVulkanDeviceKHR</a>
createVulkanInstanceKHR :: forall io. MonadIO io => Instance -> VulkanInstanceCreateInfoKHR -> io ("vulkanInstance" ::: Ptr Instance_T, "vulkanResult" ::: Result)

-- | xrCreateVulkanDeviceKHR - Create an OpenXR compatible VkDevice
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>createVulkanDeviceKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>createInfo</tt> <i>must</i> be a pointer to a valid
--   <a>VulkanDeviceCreateInfoKHR</a> structure</li>
--   <li><tt>vulkanDevice</tt> <i>must</i> be a pointer to a
--   <tt>VkDevice</tt> value</li>
--   <li><tt>vulkanResult</tt> <i>must</i> be a pointer to a
--   <tt>VkResult</tt> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>VulkanDeviceCreateInfoKHR</a>,
--   <a>createVulkanInstanceKHR</a>
createVulkanDeviceKHR :: forall io. MonadIO io => Instance -> VulkanDeviceCreateInfoKHR -> io ("vulkanDevice" ::: Ptr Device_T, "vulkanResult" ::: Result)

-- | xrGetVulkanGraphicsDevice2KHR - Retrieve the Vulkan physical device
--   associated with an OpenXR instance and system
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVulkanGraphicsDevice2KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>getInfo</tt> <i>must</i> be a pointer to a valid
--   <a>VulkanGraphicsDeviceGetInfoKHR</a> structure</li>
--   <li><tt>vulkanPhysicalDevice</tt> <i>must</i> be a pointer to a
--   <tt>VkPhysicalDevice</tt> value</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>, <a>VulkanGraphicsDeviceGetInfoKHR</a>
getVulkanGraphicsDevice2KHR :: forall io. MonadIO io => Instance -> VulkanGraphicsDeviceGetInfoKHR -> io ("vulkanPhysicalDevice" ::: Ptr PhysicalDevice_T)
pattern TYPE_GRAPHICS_BINDING_VULKAN2_KHR :: StructureType
pattern TYPE_SWAPCHAIN_IMAGE_VULKAN2_KHR :: StructureType
pattern TYPE_GRAPHICS_REQUIREMENTS_VULKAN2_KHR :: StructureType

-- | xrGetVulkanGraphicsRequirements2KHR - Retrieve the Vulkan version
--   requirements for an instance and system
--   
--   <h1>Parameters</h1>
--   
--   The <a>getVulkanGraphicsRequirementsKHR</a> function identifies to the
--   application the runtime’s minimum Vulkan version requirement and the
--   highest known tested Vulkan version.
--   <a>getVulkanGraphicsRequirementsKHR</a> <i>must</i> be called prior to
--   calling <a>createSession</a>. The runtime <i>must</i> return
--   <a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a> on calls to
--   <a>createSession</a> if <a>getVulkanGraphicsRequirements2KHR</a> has
--   not been called for the same <tt>instance</tt> and <tt>systemId</tt>.
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>instance</tt> is an <a>Instance</a> handle previously created
--   with <a>createInstance</a>.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>systemId</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   handle for the system which will be used to create a session.</li>
--   <li><tt>graphicsRequirements</tt> is the
--   <a>GraphicsRequirementsVulkan2KHR</a> output structure.</li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVulkanGraphicsRequirements2KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>graphicsRequirements</tt> <i>must</i> be a pointer to an
--   <a>GraphicsRequirementsVulkanKHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsRequirementsVulkan2KHR</a>,
--   <a>GraphicsRequirementsVulkanKHR</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
getVulkanGraphicsRequirements2KHR :: MonadIO io => Instance -> SystemId -> io GraphicsRequirementsVulkanKHR

-- | XrVulkanInstanceCreateInfoKHR - Vulkan Instance Create Info
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>VulkanInstanceCreateInfoKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_VULKAN_INSTANCE_CREATE_INFO_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>createFlags</tt> <i>must</i> be <tt>0</tt></li>
--   <li><tt>pfnGetInstanceProcAddr</tt> <i>must</i> be a valid
--   <tt>PFN_vkGetInstanceProcAddr</tt> value</li>
--   <li><tt>vulkanCreateInfo</tt> <i>must</i> be a pointer to a valid
--   <tt>VkInstanceCreateInfo</tt> value</li>
--   <li><tt>vulkanAllocator</tt> <i>must</i> be a pointer to a valid
--   <tt>VkAllocationCallbacks</tt> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>VulkanInstanceCreateFlagsKHR</a>, <a>createVulkanInstanceKHR</a>
data VulkanInstanceCreateInfoKHR
VulkanInstanceCreateInfoKHR :: SystemId -> VulkanInstanceCreateFlagsKHR -> PFN_vkGetInstanceProcAddr -> Ptr (SomeStruct InstanceCreateInfo) -> Ptr AllocationCallbacks -> VulkanInstanceCreateInfoKHR

-- | <tt>systemId</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   handle for the system which will be used to create a session.
[$sel:systemId:VulkanInstanceCreateInfoKHR] :: VulkanInstanceCreateInfoKHR -> SystemId
[$sel:createFlags:VulkanInstanceCreateInfoKHR] :: VulkanInstanceCreateInfoKHR -> VulkanInstanceCreateFlagsKHR

-- | <tt>pfnGetInstanceProcAddr</tt> is a function pointer to
--   <tt>vkGetInstanceProcAddr</tt> or a compatible entry point.
[$sel:pfnGetInstanceProcAddr:VulkanInstanceCreateInfoKHR] :: VulkanInstanceCreateInfoKHR -> PFN_vkGetInstanceProcAddr

-- | <tt>vulkanCreateInfo</tt> is the <a>VkInstanceCreateInfo as specified
--   by Vulkan</a>.
[$sel:vulkanCreateInfo:VulkanInstanceCreateInfoKHR] :: VulkanInstanceCreateInfoKHR -> Ptr (SomeStruct InstanceCreateInfo)

-- | <tt>vulkanAllocator</tt> is the <a>VkAllocationCallbacks as specified
--   by Vulkan</a>.
[$sel:vulkanAllocator:VulkanInstanceCreateInfoKHR] :: VulkanInstanceCreateInfoKHR -> Ptr AllocationCallbacks

-- | XrVulkanDeviceCreateInfoKHR - Vulkan Device Create Info
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>VulkanDeviceCreateInfoKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_VULKAN_DEVICE_CREATE_INFO_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>createFlags</tt> <i>must</i> be <tt>0</tt></li>
--   <li><tt>pfnGetInstanceProcAddr</tt> <i>must</i> be a valid
--   <tt>PFN_vkGetInstanceProcAddr</tt> value</li>
--   <li><tt>vulkanPhysicalDevice</tt> <i>must</i> be a valid
--   <tt>VkPhysicalDevice</tt> value</li>
--   <li><tt>vulkanCreateInfo</tt> <i>must</i> be a pointer to a valid
--   <tt>VkDeviceCreateInfo</tt> value</li>
--   <li><tt>vulkanAllocator</tt> <i>must</i> be a pointer to a valid
--   <tt>VkAllocationCallbacks</tt> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>VulkanDeviceCreateFlagsKHR</a>, <a>createVulkanDeviceKHR</a>
data VulkanDeviceCreateInfoKHR
VulkanDeviceCreateInfoKHR :: SystemId -> VulkanDeviceCreateFlagsKHR -> PFN_vkGetInstanceProcAddr -> Ptr PhysicalDevice_T -> Ptr (SomeStruct DeviceCreateInfo) -> Ptr AllocationCallbacks -> VulkanDeviceCreateInfoKHR

-- | <tt>systemId</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   handle for the system which will be used to create a session.
[$sel:systemId:VulkanDeviceCreateInfoKHR] :: VulkanDeviceCreateInfoKHR -> SystemId
[$sel:createFlags:VulkanDeviceCreateInfoKHR] :: VulkanDeviceCreateInfoKHR -> VulkanDeviceCreateFlagsKHR

-- | <tt>pfnGetInstanceProcAddr</tt> is a function pointer to
--   <tt>vkGetInstanceProcAddr</tt> or a compatible entry point.
[$sel:pfnGetInstanceProcAddr:VulkanDeviceCreateInfoKHR] :: VulkanDeviceCreateInfoKHR -> PFN_vkGetInstanceProcAddr

-- | <tt>vulkanPhysicalDevice</tt> <i>must</i> match
--   <a>getVulkanGraphicsDeviceKHR</a>.
[$sel:vulkanPhysicalDevice:VulkanDeviceCreateInfoKHR] :: VulkanDeviceCreateInfoKHR -> Ptr PhysicalDevice_T

-- | <tt>vulkanCreateInfo</tt> is the <a>VkDeviceCreateInfo as specified by
--   Vulkan</a>.
[$sel:vulkanCreateInfo:VulkanDeviceCreateInfoKHR] :: VulkanDeviceCreateInfoKHR -> Ptr (SomeStruct DeviceCreateInfo)

-- | <tt>vulkanAllocator</tt> is the <a>VkAllocationCallbacks as specified
--   by Vulkan</a>.
[$sel:vulkanAllocator:VulkanDeviceCreateInfoKHR] :: VulkanDeviceCreateInfoKHR -> Ptr AllocationCallbacks

-- | XrVulkanGraphicsDeviceGetInfoKHR - Vulkan Graphics Device Get Info
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>VulkanGraphicsDeviceGetInfoKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_VULKAN_GRAPHICS_DEVICE_GET_INFO_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>vulkanInstance</tt> <i>must</i> be a valid <tt>VkInstance</tt>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>getVulkanGraphicsDevice2KHR</a>
data VulkanGraphicsDeviceGetInfoKHR
VulkanGraphicsDeviceGetInfoKHR :: SystemId -> Ptr Instance_T -> VulkanGraphicsDeviceGetInfoKHR

-- | <tt>systemId</tt> is an
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   handle for the system which will be used to create a session.
[$sel:systemId:VulkanGraphicsDeviceGetInfoKHR] :: VulkanGraphicsDeviceGetInfoKHR -> SystemId

-- | <tt>vulkanInstance</tt> is a valid Vulkan <tt>VkInstance</tt>.
[$sel:vulkanInstance:VulkanGraphicsDeviceGetInfoKHR] :: VulkanGraphicsDeviceGetInfoKHR -> Ptr Instance_T

-- | XrVulkanInstanceCreateFlagsKHR - Vulkan Instance Create Info Flags
--   
--   <h1>See Also</h1>
--   
--   <a>VulkanInstanceCreateInfoKHR</a>
newtype VulkanInstanceCreateFlagsKHR
VulkanInstanceCreateFlagsKHR :: Flags64 -> VulkanInstanceCreateFlagsKHR

-- | XrVulkanDeviceCreateFlagsKHR - Vulkan Device Create Info Flags
--   
--   <h1>See Also</h1>
--   
--   <a>VulkanDeviceCreateInfoKHR</a>
newtype VulkanDeviceCreateFlagsKHR
VulkanDeviceCreateFlagsKHR :: Flags64 -> VulkanDeviceCreateFlagsKHR

-- | XrGraphicsBindingVulkan2KHR - The graphics binding structure to be
--   passed at session creation to use Vulkan
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> have enabled a Vulkan API version in
--   the range specified by <a>getVulkanGraphicsRequirements2KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> have been created using
--   <a>createVulkanInstanceKHR</a></li>
--   <li><tt>physicalDevice</tt> <tt>VkPhysicalDevice</tt> <i>must</i>
--   match the device specified by <a>getVulkanGraphicsDevice2KHR</a></li>
--   <li><tt>device</tt> <i>must</i> have been created using
--   <a>createVulkanDeviceKHR</a></li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingVulkan2KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><b>Note:</b> <a>GraphicsBindingVulkan2KHR</a> is an alias for
--   <a>GraphicsBindingVulkanKHR</a>, so implicit valid usage for
--   <a>GraphicsBindingVulkanKHR</a> has been replicated below.</li>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>instance</tt> <i>must</i> be a valid <tt>VkInstance</tt>
--   value</li>
--   <li><tt>physicalDevice</tt> <i>must</i> be a valid
--   <tt>VkPhysicalDevice</tt> value</li>
--   <li><tt>device</tt> <i>must</i> be a valid <tt>VkDevice</tt>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>createSession</a>
type GraphicsBindingVulkan2KHR = GraphicsBindingVulkanKHR

-- | XrSwapchainImageVulkan2KHR - Vulkan-specific swapchain image structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a given session was created with <a>GraphicsBindingVulkan2KHR</a>,
--   the following conditions <i>must</i> apply.
--   
--   <ul>
--   <li>Calls to <a>enumerateSwapchainImages</a> on an <a>Swapchain</a> in
--   that session <i>must</i> return an array of
--   <a>SwapchainImageVulkan2KHR</a> structures.</li>
--   <li>Whenever an OpenXR function accepts an
--   <a>SwapchainImageBaseHeader</a> pointer as a parameter in that
--   session, the runtime <i>must</i> also accept a pointer to an
--   <a>SwapchainImageVulkan2KHR</a>.</li>
--   </ul>
--   
--   The OpenXR runtime <i>must</i> interpret the top-left corner of the
--   swapchain image as the coordinate origin unless specified otherwise by
--   extension functionality.
--   
--   The OpenXR runtime <i>must</i> interpret the swapchain images in a
--   clip space of positive Y pointing down, near Z plane at 0, and far Z
--   plane at 1.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SwapchainImageVulkan2KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><b>Note:</b> <a>SwapchainImageVulkan2KHR</a> is an alias for
--   <a>SwapchainImageVulkanKHR</a>, so implicit valid usage for
--   <a>SwapchainImageVulkanKHR</a> has been replicated below.</li>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>image</tt> <i>must</i> be a valid <tt>VkImage</tt> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>SwapchainImageBaseHeader</a>
type SwapchainImageVulkan2KHR = SwapchainImageVulkanKHR

-- | XrGraphicsRequirementsVulkan2KHR - Vulkan API version requirements
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsRequirementsVulkan2KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><b>Note:</b> <a>GraphicsRequirementsVulkan2KHR</a> is an alias for
--   <a>GraphicsRequirementsVulkanKHR</a>, so implicit valid usage for
--   <a>GraphicsRequirementsVulkanKHR</a> has been replicated below.</li>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_REQUIREMENTS_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>getVulkanGraphicsRequirements2KHR</a>
type GraphicsRequirementsVulkan2KHR = GraphicsRequirementsVulkanKHR
type KHR_vulkan_enable2_SPEC_VERSION = 1
pattern KHR_vulkan_enable2_SPEC_VERSION :: forall a. Integral a => a
type KHR_VULKAN_ENABLE2_EXTENSION_NAME = "XR_KHR_vulkan_enable2"
pattern KHR_VULKAN_ENABLE2_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a

-- | XrGraphicsBindingVulkanKHR - The graphics binding structure to be
--   passed at session creation to use Vulkan
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating a Vulkan-backed <a>Session</a>, the application will
--   provide a pointer to an <a>GraphicsBindingVulkanKHR</a> in the
--   <tt>next</tt> chain of the <a>SessionCreateInfo</a>.
--   
--   <h2>Valid Usage</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> have enabled a Vulkan API version in
--   the range specified by <a>GraphicsBindingVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> have enabled all the instance
--   extensions specified by <a>getVulkanInstanceExtensionsKHR</a></li>
--   <li><tt>physicalDevice</tt> <tt>VkPhysicalDevice</tt> <i>must</i>
--   match the device specified by <a>getVulkanGraphicsDeviceKHR</a></li>
--   <li><tt>device</tt> <i>must</i> have enabled all the device extensions
--   specified by <a>getVulkanDeviceExtensionsKHR</a></li>
--   </ul>
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>instance</tt> <i>must</i> be a valid <tt>VkInstance</tt>
--   value</li>
--   <li><tt>physicalDevice</tt> <i>must</i> be a valid
--   <tt>VkPhysicalDevice</tt> value</li>
--   <li><tt>device</tt> <i>must</i> be a valid <tt>VkDevice</tt>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingVulkanKHR
GraphicsBindingVulkanKHR :: Ptr Instance_T -> Ptr PhysicalDevice_T -> Ptr Device_T -> Word32 -> Word32 -> GraphicsBindingVulkanKHR

-- | <tt>instance</tt> is a valid Vulkan <tt>VkInstance</tt>.
[$sel:instance':GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Ptr Instance_T

-- | <tt>physicalDevice</tt> is a valid Vulkan <tt>VkPhysicalDevice</tt>.
[$sel:physicalDevice:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Ptr PhysicalDevice_T

-- | <tt>device</tt> is a valid Vulkan <tt>VkDevice</tt>.
[$sel:device:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Ptr Device_T

-- | <tt>queueFamilyIndex</tt> is a valid queue family index on
--   <tt>device</tt>.
[$sel:queueFamilyIndex:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Word32

-- | <tt>queueIndex</tt> is a valid queue index on <tt>device</tt> to be
--   used for synchronization.
[$sel:queueIndex:GraphicsBindingVulkanKHR] :: GraphicsBindingVulkanKHR -> Word32

-- | XrSwapchainImageVulkanKHR - Vulkan-specific swapchain image structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a given session was created with <a>GraphicsBindingVulkanKHR</a>,
--   the following conditions <i>must</i> apply.
--   
--   <ul>
--   <li>Calls to <a>enumerateSwapchainImages</a> on an <a>Swapchain</a> in
--   that session <i>must</i> return an array of
--   <a>SwapchainImageVulkanKHR</a> structures.</li>
--   <li>Whenever an OpenXR function accepts an
--   <a>SwapchainImageBaseHeader</a> pointer as a parameter in that
--   session, the runtime <i>must</i> also accept a pointer to an
--   <a>SwapchainImageVulkanKHR</a>.</li>
--   </ul>
--   
--   The OpenXR runtime <i>must</i> interpret the top-left corner of the
--   swapchain image as the coordinate origin unless specified otherwise by
--   extension functionality.
--   
--   The OpenXR runtime <i>must</i> interpret the swapchain images in a
--   clip space of positive Y pointing down, near Z plane at 0, and far Z
--   plane at 1.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SwapchainImageVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SWAPCHAIN_IMAGE_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>image</tt> <i>must</i> be a valid <tt>VkImage</tt> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SwapchainImageBaseHeader</a>
data SwapchainImageVulkanKHR
SwapchainImageVulkanKHR :: Image -> SwapchainImageVulkanKHR

-- | <tt>image</tt> is a valid Vulkan <tt>VkImage</tt> to use.
[$sel:image:SwapchainImageVulkanKHR] :: SwapchainImageVulkanKHR -> Image

-- | XrGraphicsRequirementsVulkanKHR - Vulkan API version requirements
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>GraphicsRequirementsVulkanKHR</a> is populated by
--   <a>getVulkanGraphicsRequirementsKHR</a> with the runtime’s Vulkan API
--   version requirements.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsRequirementsVulkanKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_REQUIREMENTS_VULKAN_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>,
--   <a>getVulkanGraphicsRequirements2KHR</a>,
--   <a>getVulkanGraphicsRequirementsKHR</a>
data GraphicsRequirementsVulkanKHR
GraphicsRequirementsVulkanKHR :: Version -> Version -> GraphicsRequirementsVulkanKHR

-- | <tt>minApiVersionSupported</tt> is the minimum Vulkan Instance API
--   version that the runtime supports. Uses <a>MAKE_VERSION</a> on major
--   and minor API version, ignoring any patch version component.
[$sel:minApiVersionSupported:GraphicsRequirementsVulkanKHR] :: GraphicsRequirementsVulkanKHR -> Version

-- | <tt>maxApiVersionSupported</tt> is the maximum Vulkan Instance API
--   version that the runtime has been tested on and is known to support.
--   Newer Vulkan Instance API versions might work if they are compatible.
--   Uses <a>MAKE_VERSION</a> on major and minor API version, ignoring any
--   patch version component.
[$sel:maxApiVersionSupported:GraphicsRequirementsVulkanKHR] :: GraphicsRequirementsVulkanKHR -> Version

-- | xrGetVulkanGraphicsRequirementsKHR - Retrieve the Vulkan version
--   requirements for an instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>getVulkanGraphicsRequirementsKHR</a> function identifies to the
--   application the minimum Vulkan version requirement and the highest
--   known tested Vulkan version. The runtime <i>must</i> return
--   <a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a>
--   (<a>ERROR_VALIDATION_FAILURE</a> <i>may</i> be returned due to legacy
--   behavior) on calls to <a>createSession</a> if
--   <a>getVulkanGraphicsRequirementsKHR</a> has not been called for the
--   same <tt>instance</tt> and <tt>systemId</tt>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getVulkanGraphicsRequirementsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>graphicsRequirements</tt> <i>must</i> be a pointer to an
--   <a>GraphicsRequirementsVulkanKHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsRequirementsVulkanKHR</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
getVulkanGraphicsRequirementsKHR :: forall io. MonadIO io => Instance -> SystemId -> io GraphicsRequirementsVulkanKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateInfoKHR
instance Data.Bits.FiniteBits OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance Data.Bits.Bits OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance GHC.Classes.Ord OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateInfoKHR
instance Data.Bits.FiniteBits OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance Data.Bits.Bits OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance GHC.Classes.Ord OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanGraphicsDeviceGetInfoKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateInfoKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateInfoKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanGraphicsDeviceGetInfoKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateInfoKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateInfoKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateInfoKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateInfoKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance GHC.Read.Read OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanDeviceCreateFlagsKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateInfoKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateInfoKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateInfoKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateInfoKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance GHC.Read.Read OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanInstanceCreateFlagsKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanGraphicsDeviceGetInfoKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanGraphicsDeviceGetInfoKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanGraphicsDeviceGetInfoKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_vulkan_enable2.VulkanGraphicsDeviceGetInfoKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_opengl_es_enable - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_opengl_es_enable</a> in the main specification for
--   complete information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   25
--   
--   <h1>Revision</h1>
--   
--   7
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsBindingOpenGLESAndroidKHR</a>,
--   <a>GraphicsRequirementsOpenGLESKHR</a>,
--   <a>SwapchainImageOpenGLESKHR</a>,
--   <a>getOpenGLESGraphicsRequirementsKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_opengl_es_enable

-- | xrGetOpenGLESGraphicsRequirementsKHR - Retrieve the OpenGL ES version
--   requirements for an instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>getOpenGLESGraphicsRequirementsKHR</a> function identifies to
--   the application the minimum OpenGL ES version requirement and the
--   highest known tested OpenGL ES version. The runtime <i>must</i> return
--   <a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a>
--   (<a>ERROR_VALIDATION_FAILURE</a> <i>may</i> be returned due to legacy
--   behavior) on calls to <a>createSession</a> if
--   <a>getOpenGLESGraphicsRequirementsKHR</a> has not been called for the
--   same <tt>instance</tt> and <tt>systemId</tt>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getOpenGLESGraphicsRequirementsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>graphicsRequirements</tt> <i>must</i> be a pointer to an
--   <a>GraphicsRequirementsOpenGLESKHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsRequirementsOpenGLESKHR</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
getOpenGLESGraphicsRequirementsKHR :: forall io. MonadIO io => Instance -> SystemId -> io GraphicsRequirementsOpenGLESKHR

-- | XrGraphicsBindingOpenGLESAndroidKHR - The graphics binding structure
--   to be passed at session creation to use OpenGL ES on Android
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating an OpenGL ES-backed <a>Session</a> on Android, the
--   application will provide a pointer to an
--   <a>GraphicsBindingOpenGLESAndroidKHR</a> structure in the
--   <tt>next</tt> chain of the <a>SessionCreateInfo</a>.
--   
--   The required window system configuration define to expose this
--   structure type is <a>XR_USE_PLATFORM_ANDROID</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingOpenGLESAndroidKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_OPENGL_ES_ANDROID_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>display</tt> <i>must</i> be a valid <a>EGLDisplay</a>
--   value</li>
--   <li><tt>config</tt> <i>must</i> be a valid <a>EGLConfig</a> value</li>
--   <li><tt>context</tt> <i>must</i> be a valid <a>EGLContext</a>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingOpenGLESAndroidKHR
GraphicsBindingOpenGLESAndroidKHR :: EGLDisplay -> EGLConfig -> EGLContext -> GraphicsBindingOpenGLESAndroidKHR

-- | <tt>display</tt> is a valid Android OpenGL ES <a>EGLDisplay</a>.
[$sel:display:GraphicsBindingOpenGLESAndroidKHR] :: GraphicsBindingOpenGLESAndroidKHR -> EGLDisplay

-- | <tt>config</tt> is a valid Android OpenGL ES <a>EGLConfig</a>.
[$sel:config:GraphicsBindingOpenGLESAndroidKHR] :: GraphicsBindingOpenGLESAndroidKHR -> EGLConfig

-- | <tt>context</tt> is a valid Android OpenGL ES <a>EGLContext</a>.
[$sel:context:GraphicsBindingOpenGLESAndroidKHR] :: GraphicsBindingOpenGLESAndroidKHR -> EGLContext

-- | XrSwapchainImageOpenGLESKHR - OpenGL ES-specific swapchain image
--   structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a given session was created with a
--   <tt>XrGraphicsBindingOpenGLES*KHR</tt>, the following conditions
--   <i>must</i> apply.
--   
--   <ul>
--   <li>Calls to <a>enumerateSwapchainImages</a> on an <a>Swapchain</a> in
--   that session <i>must</i> return an array of
--   <a>SwapchainImageOpenGLESKHR</a> structures.</li>
--   <li>Whenever an OpenXR function accepts an
--   <a>SwapchainImageBaseHeader</a> pointer as a parameter in that
--   session, the runtime <i>must</i> also accept a pointer to an
--   <a>SwapchainImageOpenGLESKHR</a> structure.</li>
--   </ul>
--   
--   The OpenXR runtime <i>must</i> interpret the bottom-left corner of the
--   swapchain image as the coordinate origin unless specified otherwise by
--   extension functionality.
--   
--   The OpenXR runtime <i>must</i> interpret the swapchain images in a
--   clip space of positive Y pointing up, near Z plane at -1, and far Z
--   plane at 1.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SwapchainImageOpenGLESKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SWAPCHAIN_IMAGE_OPENGL_ES_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SwapchainImageBaseHeader</a>
data SwapchainImageOpenGLESKHR
SwapchainImageOpenGLESKHR :: Word32 -> SwapchainImageOpenGLESKHR

-- | <tt>image</tt> is an index indicating the current OpenGL ES swapchain
--   image to use.
[$sel:image:SwapchainImageOpenGLESKHR] :: SwapchainImageOpenGLESKHR -> Word32

-- | XrGraphicsRequirementsOpenGLESKHR - OpenGL ES API version requirements
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>GraphicsRequirementsOpenGLESKHR</a> is populated by
--   <a>getOpenGLESGraphicsRequirementsKHR</a> with the runtime’s OpenGL ES
--   API version requirements.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsRequirementsOpenGLESKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_REQUIREMENTS_OPENGL_ES_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>,
--   <a>getOpenGLESGraphicsRequirementsKHR</a>
data GraphicsRequirementsOpenGLESKHR
GraphicsRequirementsOpenGLESKHR :: Version -> Version -> GraphicsRequirementsOpenGLESKHR

-- | <tt>minApiVersionSupported</tt> is the minimum version of OpenGL ES
--   that the runtime supports. Uses <a>MAKE_VERSION</a> on major and minor
--   API version, ignoring any patch version component.
[$sel:minApiVersionSupported:GraphicsRequirementsOpenGLESKHR] :: GraphicsRequirementsOpenGLESKHR -> Version

-- | <tt>maxApiVersionSupported</tt> is the maximum version of OpenGL ES
--   that the runtime has been tested on and is known to support. Newer
--   OpenGL ES versions might work if they are compatible. Uses
--   <a>MAKE_VERSION</a> on major and minor API version, ignoring any patch
--   version component.
[$sel:maxApiVersionSupported:GraphicsRequirementsOpenGLESKHR] :: GraphicsRequirementsOpenGLESKHR -> Version
type KHR_opengl_es_enable_SPEC_VERSION = 7
pattern KHR_opengl_es_enable_SPEC_VERSION :: forall a. Integral a => a
type KHR_OPENGL_ES_ENABLE_EXTENSION_NAME = "XR_KHR_opengl_es_enable"
pattern KHR_OPENGL_ES_ENABLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
type EGLDisplay = Ptr ()
type EGLConfig = Ptr ()
type EGLContext = Ptr ()
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsBindingOpenGLESAndroidKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsRequirementsOpenGLESKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_es_enable.SwapchainImageOpenGLESKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsBindingOpenGLESAndroidKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_es_enable.SwapchainImageOpenGLESKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsRequirementsOpenGLESKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsBindingOpenGLESAndroidKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsBindingOpenGLESAndroidKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsBindingOpenGLESAndroidKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsBindingOpenGLESAndroidKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsRequirementsOpenGLESKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsRequirementsOpenGLESKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsRequirementsOpenGLESKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_es_enable.GraphicsRequirementsOpenGLESKHR
instance OpenXR.Core10.Image.IsSwapchainImage OpenXR.Extensions.XR_KHR_opengl_es_enable.SwapchainImageOpenGLESKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_es_enable.SwapchainImageOpenGLESKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_es_enable.SwapchainImageOpenGLESKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_es_enable.SwapchainImageOpenGLESKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_es_enable.SwapchainImageOpenGLESKHR


-- | <h1>Name</h1>
--   
--   XR_MNDX_egl_enable - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_MNDX_egl_enable</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   49
--   
--   <h1>Revision</h1>
--   
--   1
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsBindingEGLMNDX</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_MNDX_egl_enable

-- | XrGraphicsBindingEGLMNDX - The graphics binding structure to be passed
--   at session creation to EGL
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating an EGL based <a>Session</a>, the application will
--   provide a pointer to an <a>GraphicsBindingEGLMNDX</a> structure in the
--   <tt>next</tt> chain of the <a>SessionCreateInfo</a>.
--   
--   The required window system configuration define to expose this
--   structure type is <a>XR_USE_PLATFORM_EGL</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingEGLMNDX</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_EGL_MNDX</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>getProcAddress</tt> <i>must</i> be a valid
--   <a>PFNEGLGETPROCADDRESSPROC</a> value</li>
--   <li><tt>display</tt> <i>must</i> be a valid <a>EGLDisplay</a>
--   value</li>
--   <li><tt>config</tt> <i>must</i> be a valid <a>EGLConfig</a> value</li>
--   <li><tt>context</tt> <i>must</i> be a valid <a>EGLContext</a>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingEGLMNDX
GraphicsBindingEGLMNDX :: PFNEGLGETPROCADDRESSPROC -> EGLDisplay -> EGLConfig -> EGLContext -> GraphicsBindingEGLMNDX

-- | <tt>getProcAddress</tt> is a valid function pointer to
--   <tt>eglGetProcAddress</tt>.
[$sel:getProcAddress:GraphicsBindingEGLMNDX] :: GraphicsBindingEGLMNDX -> PFNEGLGETPROCADDRESSPROC

-- | <tt>display</tt> is a valid EGL <a>EGLDisplay</a>.
[$sel:display:GraphicsBindingEGLMNDX] :: GraphicsBindingEGLMNDX -> EGLDisplay

-- | <tt>config</tt> is a valid EGL <a>EGLConfig</a>.
[$sel:config:GraphicsBindingEGLMNDX] :: GraphicsBindingEGLMNDX -> EGLConfig

-- | <tt>context</tt> is a valid EGL <a>EGLContext</a>.
[$sel:context:GraphicsBindingEGLMNDX] :: GraphicsBindingEGLMNDX -> EGLContext
type MNDX_egl_enable_SPEC_VERSION = 1
pattern MNDX_egl_enable_SPEC_VERSION :: forall a. Integral a => a
type MNDX_EGL_ENABLE_EXTENSION_NAME = "XR_MNDX_egl_enable"
pattern MNDX_EGL_ENABLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
type PFNEGLGETPROCADDRESSPROC = FunPtr (CString -> IO (FunPtr (IO ())))
type EGLDisplay = Ptr ()
type EGLConfig = Ptr ()
type EGLContext = Ptr ()
instance GHC.Classes.Eq OpenXR.Extensions.XR_MNDX_egl_enable.GraphicsBindingEGLMNDX
instance GHC.Show.Show OpenXR.Extensions.XR_MNDX_egl_enable.GraphicsBindingEGLMNDX
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_MNDX_egl_enable.GraphicsBindingEGLMNDX
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_MNDX_egl_enable.GraphicsBindingEGLMNDX
instance Foreign.Storable.Storable OpenXR.Extensions.XR_MNDX_egl_enable.GraphicsBindingEGLMNDX
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_MNDX_egl_enable.GraphicsBindingEGLMNDX


-- | <h1>Name</h1>
--   
--   XR_KHR_opengl_enable - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_opengl_enable</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   24
--   
--   <h1>Revision</h1>
--   
--   9
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsBindingOpenGLWaylandKHR</a>,
--   <a>GraphicsBindingOpenGLWin32KHR</a>,
--   <a>GraphicsBindingOpenGLXcbKHR</a>,
--   <a>GraphicsBindingOpenGLXlibKHR</a>,
--   <a>GraphicsRequirementsOpenGLKHR</a>, <a>SwapchainImageOpenGLKHR</a>,
--   <a>getOpenGLGraphicsRequirementsKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_opengl_enable

-- | xrGetOpenGLGraphicsRequirementsKHR - Retrieve the OpenGL version
--   requirements for an instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>getOpenGLGraphicsRequirementsKHR</a> function identifies to the
--   application the minimum OpenGL version requirement and the highest
--   known tested OpenGL version. The runtime <i>must</i> return
--   <a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a>
--   (<a>ERROR_VALIDATION_FAILURE</a> <i>may</i> be returned due to legacy
--   behavior) on calls to <a>createSession</a> if
--   <a>getOpenGLGraphicsRequirementsKHR</a> has not been called for the
--   same <tt>instance</tt> and <tt>systemId</tt>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getOpenGLGraphicsRequirementsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>graphicsRequirements</tt> <i>must</i> be a pointer to an
--   <a>GraphicsRequirementsOpenGLKHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsRequirementsOpenGLKHR</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
getOpenGLGraphicsRequirementsKHR :: forall io. MonadIO io => Instance -> SystemId -> io GraphicsRequirementsOpenGLKHR

-- | XrGraphicsBindingOpenGLWin32KHR - The graphics binding structure to be
--   passed at session creation to use OpenGL on Windows
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating an OpenGL-backed <a>Session</a> on Microsoft Windows,
--   the application will provide a pointer to an
--   <a>GraphicsBindingOpenGLWin32KHR</a> in the <tt>next</tt> chain of the
--   <a>SessionCreateInfo</a>. As no standardized way exists for OpenGL to
--   create the graphics context on a specific GPU, the runtime <i>must</i>
--   assume that the application uses the operating systems default GPU. If
--   the GPU used by the runtime does not match the GPU on which the OpenGL
--   context of the application got created, <a>createSession</a>
--   <i>must</i> return <a>ERROR_GRAPHICS_DEVICE_INVALID</a>.
--   
--   The required window system configuration define to expose this
--   structure type is <a>XR_USE_PLATFORM_WIN32</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingOpenGLWin32KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_OPENGL_WIN32_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>hDC</tt> <i>must</i> be a valid <a>HDC</a> value</li>
--   <li><tt>hGLRC</tt> <i>must</i> be a valid <a>HGLRC</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingOpenGLWin32KHR
GraphicsBindingOpenGLWin32KHR :: HDC -> HGLRC -> GraphicsBindingOpenGLWin32KHR

-- | <tt>hDC</tt> is a valid Windows HW device context handle.
[$sel:hDC:GraphicsBindingOpenGLWin32KHR] :: GraphicsBindingOpenGLWin32KHR -> HDC

-- | <tt>hGLRC</tt> is a valid Windows OpenGL rendering context handle.
[$sel:hGLRC:GraphicsBindingOpenGLWin32KHR] :: GraphicsBindingOpenGLWin32KHR -> HGLRC

-- | XrGraphicsBindingOpenGLXlibKHR - The graphics binding structure to be
--   passed at session creation to use OpenGL on X11 via Xlib
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating an OpenGL-backed <a>Session</a> on any Linux/Unix
--   platform that utilizes X11 and GLX, via the Xlib library, the
--   application will provide a pointer to an
--   <a>GraphicsBindingOpenGLXlibKHR</a> in the <tt>next</tt> chain of the
--   <a>SessionCreateInfo</a>.
--   
--   The required window system configuration define to expose this
--   structure type is <a>XR_USE_PLATFORM_XLIB</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingOpenGLXlibKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_OPENGL_XLIB_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>xDisplay</tt> <i>must</i> be a pointer to a <a>Display</a>
--   value</li>
--   <li><tt>glxFBConfig</tt> <i>must</i> be a valid <a>GLXFBConfig</a>
--   value</li>
--   <li><tt>glxDrawable</tt> <i>must</i> be a valid <a>GLXDrawable</a>
--   value</li>
--   <li><tt>glxContext</tt> <i>must</i> be a valid <a>GLXContext</a>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingOpenGLXlibKHR
GraphicsBindingOpenGLXlibKHR :: Ptr Display -> Word32 -> GLXFBConfig -> GLXDrawable -> GLXContext -> GraphicsBindingOpenGLXlibKHR

-- | <tt>xDisplay</tt> is a valid X11 <a>Display</a>.
[$sel:xDisplay:GraphicsBindingOpenGLXlibKHR] :: GraphicsBindingOpenGLXlibKHR -> Ptr Display

-- | <tt>visualid</tt> is a valid X11 visual identifier.
[$sel:visualid:GraphicsBindingOpenGLXlibKHR] :: GraphicsBindingOpenGLXlibKHR -> Word32

-- | <tt>glxFBConfig</tt> is a valid X11 OpenGL GLX <a>GLXFBConfig</a>.
[$sel:glxFBConfig:GraphicsBindingOpenGLXlibKHR] :: GraphicsBindingOpenGLXlibKHR -> GLXFBConfig

-- | <tt>glxDrawable</tt> is a valid X11 OpenGL GLX <a>GLXDrawable</a>.
[$sel:glxDrawable:GraphicsBindingOpenGLXlibKHR] :: GraphicsBindingOpenGLXlibKHR -> GLXDrawable

-- | <tt>glxContext</tt> is a valid X11 OpenGL GLX <a>GLXContext</a>.
[$sel:glxContext:GraphicsBindingOpenGLXlibKHR] :: GraphicsBindingOpenGLXlibKHR -> GLXContext

-- | XrGraphicsBindingOpenGLXcbKHR - The graphics binding structure to be
--   passed at session creation to use OpenGL on X11 via XCB
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating an OpenGL-backed <a>Session</a> on any Linux/Unix
--   platform that utilizes X11 and GLX, via the Xlib library, the
--   application will provide a pointer to an
--   <a>GraphicsBindingOpenGLXcbKHR</a> in the <tt>next</tt> chain of the
--   <a>SessionCreateInfo</a>.
--   
--   The required window system configuration define to expose this
--   structure type is <a>XR_USE_PLATFORM_XCB</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingOpenGLXcbKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_OPENGL_XCB_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>connection</tt> <i>must</i> be a pointer to an
--   <tt>xcb_connection_t</tt> value</li>
--   <li><tt>fbconfigid</tt> <i>must</i> be a valid
--   <tt>xcb_glx_fbconfig_t</tt> value</li>
--   <li><tt>visualid</tt> <i>must</i> be a valid <tt>xcb_visualid_t</tt>
--   value</li>
--   <li><tt>glxDrawable</tt> <i>must</i> be a valid
--   <tt>xcb_glx_drawable_t</tt> value</li>
--   <li><tt>glxContext</tt> <i>must</i> be a valid
--   <tt>xcb_glx_context_t</tt> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingOpenGLXcbKHR
GraphicsBindingOpenGLXcbKHR :: Ptr Xcb_connection_t -> Word32 -> Xcb_glx_fbconfig_t -> Xcb_visualid_t -> Xcb_glx_drawable_t -> Xcb_glx_context_t -> GraphicsBindingOpenGLXcbKHR

-- | <tt>connection</tt> is a valid <tt>xcb_connection_t</tt>.
[$sel:connection:GraphicsBindingOpenGLXcbKHR] :: GraphicsBindingOpenGLXcbKHR -> Ptr Xcb_connection_t

-- | <tt>screenNumber</tt> is an index indicating which screen should be
--   used for rendering.
[$sel:screenNumber:GraphicsBindingOpenGLXcbKHR] :: GraphicsBindingOpenGLXcbKHR -> Word32

-- | <tt>fbconfigid</tt> is a valid XCB OpenGL GLX
--   <tt>xcb_glx_fbconfig_t</tt>.
[$sel:fbconfigid:GraphicsBindingOpenGLXcbKHR] :: GraphicsBindingOpenGLXcbKHR -> Xcb_glx_fbconfig_t

-- | <tt>visualid</tt> is a valid XCB OpenGL GLX <tt>xcb_visualid_t</tt>.
[$sel:visualid:GraphicsBindingOpenGLXcbKHR] :: GraphicsBindingOpenGLXcbKHR -> Xcb_visualid_t

-- | <tt>glxDrawable</tt> is a valid XCB OpenGL GLX
--   <tt>xcb_glx_drawable_t</tt>.
[$sel:glxDrawable:GraphicsBindingOpenGLXcbKHR] :: GraphicsBindingOpenGLXcbKHR -> Xcb_glx_drawable_t

-- | <tt>glxContext</tt> is a valid XCB OpenGL GLX
--   <tt>xcb_glx_context_t</tt>.
[$sel:glxContext:GraphicsBindingOpenGLXcbKHR] :: GraphicsBindingOpenGLXcbKHR -> Xcb_glx_context_t

-- | XrGraphicsBindingOpenGLWaylandKHR - The graphics binding structure to
--   be passed at session creation to use OpenGL on Wayland
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating an OpenGL-backed <a>Session</a> on any Linux/Unix
--   platform that utilizes the Wayland protocol with its compositor, the
--   application will provide a pointer to an
--   <a>GraphicsBindingOpenGLWaylandKHR</a> in the <tt>next</tt> chain of
--   the <a>SessionCreateInfo</a>.
--   
--   The required window system configuration define to expose this
--   structure type is <a>XR_USE_PLATFORM_WAYLAND</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingOpenGLWaylandKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_OPENGL_WAYLAND_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>display</tt> <i>must</i> be a pointer to a <tt>wl_display</tt>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingOpenGLWaylandKHR
GraphicsBindingOpenGLWaylandKHR :: Ptr Wl_display -> GraphicsBindingOpenGLWaylandKHR

-- | <tt>display</tt> is a valid Wayland <tt>wl_display</tt>.
[$sel:display:GraphicsBindingOpenGLWaylandKHR] :: GraphicsBindingOpenGLWaylandKHR -> Ptr Wl_display

-- | XrSwapchainImageOpenGLKHR - OpenGL-specific swapchain image structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a given session was created with a
--   <tt>XrGraphicsBindingOpenGL*KHR</tt>, the following conditions
--   <i>must</i> apply.
--   
--   <ul>
--   <li>Calls to <a>enumerateSwapchainImages</a> on an <a>Swapchain</a> in
--   that session <i>must</i> return an array of
--   <a>SwapchainImageOpenGLKHR</a> structures.</li>
--   <li>Whenever an OpenXR function accepts an
--   <a>SwapchainImageBaseHeader</a> pointer as a parameter in that
--   session, the runtime <i>must</i> also accept a pointer to an
--   <a>SwapchainImageOpenGLKHR</a>.</li>
--   </ul>
--   
--   The OpenXR runtime <i>must</i> interpret the bottom-left corner of the
--   swapchain image as the coordinate origin unless specified otherwise by
--   extension functionality.
--   
--   The OpenXR runtime <i>must</i> interpret the swapchain images in a
--   clip space of positive Y pointing up, near Z plane at -1, and far Z
--   plane at 1.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SwapchainImageOpenGLKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SWAPCHAIN_IMAGE_OPENGL_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SwapchainImageBaseHeader</a>
data SwapchainImageOpenGLKHR
SwapchainImageOpenGLKHR :: Word32 -> SwapchainImageOpenGLKHR

-- | <tt>image</tt> is the OpenGL texture handle associated with this
--   swapchain image.
[$sel:image:SwapchainImageOpenGLKHR] :: SwapchainImageOpenGLKHR -> Word32

-- | XrGraphicsRequirementsOpenGLKHR - OpenGL API version requirements
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>GraphicsRequirementsOpenGLKHR</a> is populated by
--   <a>getOpenGLGraphicsRequirementsKHR</a> with the runtime’s OpenGL API
--   version requirements.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsRequirementsOpenGLKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_REQUIREMENTS_OPENGL_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrVersion</a>,
--   <a>getOpenGLGraphicsRequirementsKHR</a>
data GraphicsRequirementsOpenGLKHR
GraphicsRequirementsOpenGLKHR :: Version -> Version -> GraphicsRequirementsOpenGLKHR

-- | <tt>minApiVersionSupported</tt> is the minimum version of OpenGL that
--   the runtime supports. Uses <a>MAKE_VERSION</a> on major and minor API
--   version, ignoring any patch version component.
[$sel:minApiVersionSupported:GraphicsRequirementsOpenGLKHR] :: GraphicsRequirementsOpenGLKHR -> Version

-- | <tt>maxApiVersionSupported</tt> is the maximum version of OpenGL that
--   the runtime has been tested on and is known to support. Newer OpenGL
--   versions might work if they are compatible. Uses <a>MAKE_VERSION</a>
--   on major and minor API version, ignoring any patch version component.
[$sel:maxApiVersionSupported:GraphicsRequirementsOpenGLKHR] :: GraphicsRequirementsOpenGLKHR -> Version
type KHR_opengl_enable_SPEC_VERSION = 9
pattern KHR_opengl_enable_SPEC_VERSION :: forall a. Integral a => a
type KHR_OPENGL_ENABLE_EXTENSION_NAME = "XR_KHR_opengl_enable"
pattern KHR_OPENGL_ENABLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
type HDC = Ptr ()
type HGLRC = Ptr ()
type Display = Ptr ()
type Xcb_visualid_t = Word32
type Xcb_glx_fbconfig_t = Word32
type Xcb_glx_drawable_t = Word32
type Xcb_glx_context_t = Word32
type GLXFBConfig = Ptr ()
type GLXDrawable = Word64
type GLXContext = Ptr ()
data Xcb_connection_t
data Wl_display
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWaylandKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXcbKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXlibKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWin32KHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsRequirementsOpenGLKHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_opengl_enable.SwapchainImageOpenGLKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWin32KHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXlibKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXcbKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWaylandKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_enable.SwapchainImageOpenGLKHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsRequirementsOpenGLKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWaylandKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWaylandKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWaylandKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWaylandKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXcbKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXcbKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXcbKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXcbKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXlibKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXlibKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXlibKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLXlibKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWin32KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWin32KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWin32KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsBindingOpenGLWin32KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsRequirementsOpenGLKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsRequirementsOpenGLKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsRequirementsOpenGLKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_enable.GraphicsRequirementsOpenGLKHR
instance OpenXR.Core10.Image.IsSwapchainImage OpenXR.Extensions.XR_KHR_opengl_enable.SwapchainImageOpenGLKHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_opengl_enable.SwapchainImageOpenGLKHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_opengl_enable.SwapchainImageOpenGLKHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_opengl_enable.SwapchainImageOpenGLKHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_opengl_enable.SwapchainImageOpenGLKHR


-- | <h1>Name</h1>
--   
--   XR_KHR_D3D11_enable - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_D3D11_enable</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   28
--   
--   <h1>Revision</h1>
--   
--   5
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsBindingD3D11KHR</a>, <a>GraphicsRequirementsD3D11KHR</a>,
--   <a>SwapchainImageD3D11KHR</a>, <a>getD3D11GraphicsRequirementsKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_D3D11_enable

-- | xrGetD3D11GraphicsRequirementsKHR - Retrieve the D3D11 feature level
--   and graphics device requirements for an instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>getD3D11GraphicsRequirementsKHR</a> function identifies to the
--   application what graphics device (Windows LUID) needs to be used and
--   the minimum feature level to use. The runtime <i>must</i> return
--   <a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a>
--   (<a>ERROR_VALIDATION_FAILURE</a> <i>may</i> be returned due to legacy
--   behavior) on calls to <a>createSession</a> if
--   <a>getD3D11GraphicsRequirementsKHR</a> has not been called for the
--   same <tt>instance</tt> and <tt>systemId</tt>. The LUID and feature
--   level that <a>getD3D11GraphicsRequirementsKHR</a> returns should be
--   used to create the <a>ID3D11Device</a> that the application passes to
--   <a>createSession</a> in the <a>GraphicsBindingD3D11KHR</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getD3D11GraphicsRequirementsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>graphicsRequirements</tt> <i>must</i> be a pointer to an
--   <a>GraphicsRequirementsD3D11KHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsRequirementsD3D11KHR</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>createSession</a>
getD3D11GraphicsRequirementsKHR :: forall io. MonadIO io => Instance -> SystemId -> io GraphicsRequirementsD3D11KHR

-- | XrGraphicsBindingD3D11KHR - The graphics binding structure to be
--   passed at session creation to use D3D11
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating a D3D11-backed <a>Session</a>, the application will
--   provide a pointer to an <a>GraphicsBindingD3D11KHR</a> in the
--   <tt>next</tt> chain of the <a>SessionCreateInfo</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingD3D11KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_D3D11_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>device</tt> <i>must</i> be a pointer to an <a>ID3D11Device</a>
--   value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingD3D11KHR
GraphicsBindingD3D11KHR :: Ptr ID3D11Device -> GraphicsBindingD3D11KHR

-- | <tt>device</tt> is a pointer to a valid <a>ID3D11Device</a> to use.
[$sel:device:GraphicsBindingD3D11KHR] :: GraphicsBindingD3D11KHR -> Ptr ID3D11Device

-- | XrSwapchainImageD3D11KHR - D3D11-specific swapchain image structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a given session was created with <a>GraphicsBindingD3D11KHR</a>,
--   the following conditions <i>must</i> apply.
--   
--   <ul>
--   <li>Calls to <a>enumerateSwapchainImages</a> on an <a>Swapchain</a> in
--   that session <i>must</i> return an array of
--   <a>SwapchainImageD3D11KHR</a> structures.</li>
--   <li>Whenever an OpenXR function accepts an
--   <a>SwapchainImageBaseHeader</a> pointer as a parameter in that
--   session, the runtime <i>must</i> also accept a pointer to an
--   <a>SwapchainImageD3D11KHR</a>.</li>
--   </ul>
--   
--   The OpenXR runtime <i>must</i> interpret the top-left corner of the
--   swapchain image as the coordinate origin unless specified otherwise by
--   extension functionality.
--   
--   The OpenXR runtime <i>must</i> interpret the swapchain images in a
--   clip space of positive Y pointing up, near Z plane at 0, and far Z
--   plane at 1.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SwapchainImageD3D11KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SWAPCHAIN_IMAGE_D3D11_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>texture</tt> <i>must</i> be a pointer to an
--   <a>ID3D11Texture2D</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SwapchainImageBaseHeader</a>
data SwapchainImageD3D11KHR
SwapchainImageD3D11KHR :: Ptr ID3D11Texture2D -> SwapchainImageD3D11KHR

-- | <tt>texture</tt> is a pointer to a valid <a>ID3D11Texture2D</a> to
--   use.
[$sel:texture:SwapchainImageD3D11KHR] :: SwapchainImageD3D11KHR -> Ptr ID3D11Texture2D

-- | XrGraphicsRequirementsD3D11KHR - D3D11 feature level and LUID
--   requirements
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>GraphicsRequirementsD3D11KHR</a> is populated by
--   <a>getD3D11GraphicsRequirementsKHR</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsRequirementsD3D11KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_REQUIREMENTS_D3D11_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>adapterLuid</tt> <i>must</i> be a valid <a>LUID</a> value</li>
--   <li><tt>minFeatureLevel</tt> <i>must</i> be a valid
--   <a>D3D_FEATURE_LEVEL</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>getD3D11GraphicsRequirementsKHR</a>
data GraphicsRequirementsD3D11KHR
GraphicsRequirementsD3D11KHR :: LUID -> D3D_FEATURE_LEVEL -> GraphicsRequirementsD3D11KHR

-- | <tt>adapterLuid</tt> identifies what graphics device needs to be used.
[$sel:adapterLuid:GraphicsRequirementsD3D11KHR] :: GraphicsRequirementsD3D11KHR -> LUID

-- | <tt>minFeatureLevel</tt> is the minimum feature level that the D3D11
--   device must be initialized with.
[$sel:minFeatureLevel:GraphicsRequirementsD3D11KHR] :: GraphicsRequirementsD3D11KHR -> D3D_FEATURE_LEVEL
type KHR_D3D11_enable_SPEC_VERSION = 5
pattern KHR_D3D11_enable_SPEC_VERSION :: forall a. Integral a => a
type KHR_D3D11_ENABLE_EXTENSION_NAME = "XR_KHR_D3D11_enable"
pattern KHR_D3D11_ENABLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
type LUID = Word64
type D3D_FEATURE_LEVEL = Word32
data ID3D11Device
data ID3D11Texture2D
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_D3D11_enable.SwapchainImageD3D11KHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsBindingD3D11KHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsRequirementsD3D11KHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsBindingD3D11KHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_D3D11_enable.SwapchainImageD3D11KHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsRequirementsD3D11KHR
instance OpenXR.Core10.Image.IsSwapchainImage OpenXR.Extensions.XR_KHR_D3D11_enable.SwapchainImageD3D11KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_D3D11_enable.SwapchainImageD3D11KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_D3D11_enable.SwapchainImageD3D11KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_D3D11_enable.SwapchainImageD3D11KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_D3D11_enable.SwapchainImageD3D11KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsBindingD3D11KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsBindingD3D11KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsBindingD3D11KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsBindingD3D11KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsRequirementsD3D11KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsRequirementsD3D11KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsRequirementsD3D11KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_D3D11_enable.GraphicsRequirementsD3D11KHR


-- | <h1>Name</h1>
--   
--   XR_KHR_D3D12_enable - instance extension
--   
--   <h1>Specification</h1>
--   
--   See <a>XR_KHR_D3D12_enable</a> in the main specification for complete
--   information.
--   
--   <h1>Registered Extension Number</h1>
--   
--   29
--   
--   <h1>Revision</h1>
--   
--   7
--   
--   <h1>Extension and Version Dependencies</h1>
--   
--   <ul>
--   <li>Requires OpenXR 1.0</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsBindingD3D12KHR</a>, <a>GraphicsRequirementsD3D12KHR</a>,
--   <a>SwapchainImageD3D12KHR</a>, <a>getD3D12GraphicsRequirementsKHR</a>
--   
--   <h1>Document Notes</h1>
--   
--   For more information, see the <a>OpenXR Specification</a>
--   
--   This page is a generated document. Fixes and changes should be made to
--   the generator scripts, not directly.
module OpenXR.Extensions.XR_KHR_D3D12_enable

-- | xrGetD3D12GraphicsRequirementsKHR - Retrieve the D3D12 feature level
--   and graphics device requirements for an instance and system
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   The <a>getD3D12GraphicsRequirementsKHR</a> function identifies to the
--   application what graphics device (Windows LUID) needs to be used and
--   the minimum feature level to use. The runtime <i>must</i> return
--   <a>ERROR_GRAPHICS_REQUIREMENTS_CALL_MISSING</a>
--   (<a>ERROR_VALIDATION_FAILURE</a> <i>may</i> be returned due to legacy
--   behavior) on calls to <a>createSession</a> if
--   <a>getD3D12GraphicsRequirementsKHR</a> has not been called for the
--   same <tt>instance</tt> and <tt>systemId</tt>. The LUID and feature
--   level that <a>getD3D12GraphicsRequirementsKHR</a> returns should be
--   used to create the <a>ID3D12Device</a> that the application passes to
--   <a>createSession</a> in the <a>GraphicsBindingD3D12KHR</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to calling
--   <a>getD3D12GraphicsRequirementsKHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   <li><tt>graphicsRequirements</tt> <i>must</i> be a pointer to an
--   <a>GraphicsRequirementsD3D12KHR</a> structure</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_FUNCTION_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>GraphicsRequirementsD3D12KHR</a>, <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>createSession</a>
getD3D12GraphicsRequirementsKHR :: forall io. MonadIO io => Instance -> SystemId -> io GraphicsRequirementsD3D12KHR

-- | XrGraphicsBindingD3D12KHR - The graphics binding structure to be
--   passed at session creation to use D3D12
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   When creating a D3D12-backed <a>Session</a>, the application will
--   provide a pointer to an <a>GraphicsBindingD3D12KHR</a> in the
--   <tt>next</tt> chain of the <a>SessionCreateInfo</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsBindingD3D12KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_BINDING_D3D12_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>device</tt> <i>must</i> be a pointer to an <a>ID3D12Device</a>
--   value</li>
--   <li><tt>queue</tt> <i>must</i> be a pointer to an
--   <a>ID3D12CommandQueue</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>createSession</a>
data GraphicsBindingD3D12KHR
GraphicsBindingD3D12KHR :: Ptr ID3D12Device -> Ptr ID3D12CommandQueue -> GraphicsBindingD3D12KHR

-- | <tt>device</tt> is a pointer to a valid <a>ID3D12Device</a> to use.
[$sel:device:GraphicsBindingD3D12KHR] :: GraphicsBindingD3D12KHR -> Ptr ID3D12Device

-- | <tt>queue</tt> is a pointer to a valid <a>ID3D12CommandQueue</a> to
--   use.
[$sel:queue:GraphicsBindingD3D12KHR] :: GraphicsBindingD3D12KHR -> Ptr ID3D12CommandQueue

-- | XrSwapchainImageD3D12KHR - D3D12-specific swapchain image structure
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   If a given session was created with <a>GraphicsBindingD3D12KHR</a>,
--   the following conditions <i>must</i> apply.
--   
--   <ul>
--   <li>Calls to <a>enumerateSwapchainImages</a> on an <a>Swapchain</a> in
--   that session <i>must</i> return an array of
--   <a>SwapchainImageD3D12KHR</a> structures.</li>
--   <li>Whenever an OpenXR function accepts an
--   <a>SwapchainImageBaseHeader</a> pointer as a parameter in that
--   session, the runtime <i>must</i> also accept a pointer to an
--   <a>SwapchainImageD3D12KHR</a>.</li>
--   </ul>
--   
--   The OpenXR runtime <i>must</i> interpret the top-left corner of the
--   swapchain image as the coordinate origin unless specified otherwise by
--   extension functionality.
--   
--   The OpenXR runtime <i>must</i> interpret the swapchain images in a
--   clip space of positive Y pointing up, near Z plane at 0, and far Z
--   plane at 1.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>SwapchainImageD3D12KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_SWAPCHAIN_IMAGE_D3D12_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>texture</tt> <i>must</i> be a pointer to an
--   <a>ID3D12Resource</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>SwapchainImageBaseHeader</a>
data SwapchainImageD3D12KHR
SwapchainImageD3D12KHR :: Ptr ID3D12Resource -> SwapchainImageD3D12KHR

-- | <tt>texture</tt> is a pointer to a valid <tt>ID3D12Texture2D</tt> to
--   use.
[$sel:texture:SwapchainImageD3D12KHR] :: SwapchainImageD3D12KHR -> Ptr ID3D12Resource

-- | XrGraphicsRequirementsD3D12KHR - D3D12 feature level and LUID
--   requirements
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>GraphicsRequirementsD3D12KHR</a> is populated by
--   <a>getD3D12GraphicsRequirementsKHR</a>.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li>The @@ extension <i>must</i> be enabled prior to using
--   <a>GraphicsRequirementsD3D12KHR</a></li>
--   </ul>
--   
--   <ul>
--   <li><tt>type</tt> <i>must</i> be
--   <a>TYPE_GRAPHICS_REQUIREMENTS_D3D12_KHR</a></li>
--   <li><tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to
--   the <a>next structure in a structure chain</a></li>
--   <li><tt>adapterLuid</tt> <i>must</i> be a valid <a>LUID</a> value</li>
--   <li><tt>minFeatureLevel</tt> <i>must</i> be a valid
--   <a>D3D_FEATURE_LEVEL</a> value</li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>getD3D12GraphicsRequirementsKHR</a>
data GraphicsRequirementsD3D12KHR
GraphicsRequirementsD3D12KHR :: LUID -> D3D_FEATURE_LEVEL -> GraphicsRequirementsD3D12KHR

-- | <tt>adapterLuid</tt> identifies what graphics device needs to be used.
[$sel:adapterLuid:GraphicsRequirementsD3D12KHR] :: GraphicsRequirementsD3D12KHR -> LUID

-- | <tt>minFeatureLevel</tt> is the minimum feature level that the D3D12
--   device must be initialized with.
[$sel:minFeatureLevel:GraphicsRequirementsD3D12KHR] :: GraphicsRequirementsD3D12KHR -> D3D_FEATURE_LEVEL
type KHR_D3D12_enable_SPEC_VERSION = 7
pattern KHR_D3D12_enable_SPEC_VERSION :: forall a. Integral a => a
type KHR_D3D12_ENABLE_EXTENSION_NAME = "XR_KHR_D3D12_enable"
pattern KHR_D3D12_ENABLE_EXTENSION_NAME :: forall a. (Eq a, IsString a) => a
data ID3D12CommandQueue
data ID3D12Device
data ID3D12Resource
type LUID = Word64
type D3D_FEATURE_LEVEL = Word32
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_D3D12_enable.SwapchainImageD3D12KHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsBindingD3D12KHR
instance GHC.Classes.Eq OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsRequirementsD3D12KHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsBindingD3D12KHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_D3D12_enable.SwapchainImageD3D12KHR
instance GHC.Show.Show OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsRequirementsD3D12KHR
instance OpenXR.Core10.Image.IsSwapchainImage OpenXR.Extensions.XR_KHR_D3D12_enable.SwapchainImageD3D12KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_D3D12_enable.SwapchainImageD3D12KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_D3D12_enable.SwapchainImageD3D12KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_D3D12_enable.SwapchainImageD3D12KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_D3D12_enable.SwapchainImageD3D12KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsBindingD3D12KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsBindingD3D12KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsBindingD3D12KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsBindingD3D12KHR
instance Vulkan.CStruct.ToCStruct OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsRequirementsD3D12KHR
instance Vulkan.CStruct.FromCStruct OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsRequirementsD3D12KHR
instance Foreign.Storable.Storable OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsRequirementsD3D12KHR
instance Vulkan.Zero.Zero OpenXR.Extensions.XR_KHR_D3D12_enable.GraphicsRequirementsD3D12KHR

module OpenXR.Core10.ViewConfigurations

-- | xrEnumerateViewConfigurations - Enumerates supported view
--   configurations
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <ul>
--   <li><tt>instance</tt> is the instance from which <tt>systemId</tt> was
--   retrieved.</li>
--   </ul>
--   
--   <ul>
--   <li><tt>systemId</tt> is the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>
--   whose view configurations will be enumerated.</li>
--   <li><tt>viewConfigurationsTypeCapacityInput</tt> is the capacity of
--   the <tt>viewConfigurations</tt> array, or 0 to indicate a request to
--   retrieve the required capacity.</li>
--   <li><tt>viewConfigurationsTypeCountOutput</tt> is a pointer to the
--   count of <tt>viewConfigurations</tt> written, or a pointer to the
--   required capacity in the case that
--   <tt>viewConfigurationsTypeCapacityInput</tt> is 0.</li>
--   <li><tt>viewConfigurationsTypes</tt> is a pointer to an array of
--   <a>ViewConfigurationType</a> values, but <i>can</i> be <tt>NULL</tt>
--   if <tt>viewConfigurationsTypeCapacityInput</tt> is 0.</li>
--   <li>See <a>Buffer Size Parameters</a> chapter for a detailed
--   description of retrieving the required <tt>viewConfigurations</tt>
--   size.</li>
--   </ul>
--   
--   <h1>Description</h1>
--   
--   <a>enumerateViewConfigurations</a> enumerates the view configuration
--   types supported by the
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>.
--   The supported set for that system <i>must</i> not change during the
--   lifetime of its <a>Instance</a>. The returned list of primary view
--   configurations <i>should</i> be in order from what the runtime
--   considered highest to lowest user preference. Thus the first
--   enumerated view configuration type <i>should</i> be the one the
--   runtime prefers the application to use if possible.
--   
--   Runtimes <i>must</i> always return identical buffer contents from this
--   enumeration for the given <tt>systemId</tt> and for the lifetime of
--   the instance.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>viewConfigurationTypeCountOutput</tt> <i>must</i> be a pointer
--   to a <tt>uint32_t</tt> value</li>
--   <li>If <tt>viewConfigurationTypeCapacityInput</tt> is not <tt>0</tt>,
--   <tt>viewConfigurationTypes</tt> <i>must</i> be a pointer to an array
--   of <tt>viewConfigurationTypeCapacityInput</tt>
--   <a>ViewConfigurationType</a> values</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>ViewConfigurationType</a>
enumerateViewConfigurations :: forall io. MonadIO io => Instance -> SystemId -> io ("viewConfigurationTypes" ::: Vector ViewConfigurationType)

-- | xrGetViewConfigurationProperties - Gets information for a view
--   configuration
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   <a>getViewConfigurationProperties</a> queries properties of an
--   individual view configuration. Applications <i>must</i> use one of the
--   supported view configuration types returned by
--   <a>enumerateViewConfigurations</a>. If <tt>viewConfigurationType</tt>
--   is not supported by this <a>Instance</a> the runtime <i>must</i>
--   return <a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a>.
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>ViewConfigurationProperties</a>, <a>ViewConfigurationType</a>
getViewConfigurationProperties :: forall io. MonadIO io => Instance -> SystemId -> ViewConfigurationType -> io ViewConfigurationProperties

-- | xrEnumerateViewConfigurationViews - Gets view configuration views
--   
--   <h2>Parameter Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   Each <a>ViewConfigurationType</a> defines the number of views
--   associated with it. Applications can query more details of each view
--   element using <a>enumerateViewConfigurationViews</a>. If the supplied
--   <tt>viewConfigurationType</tt> is not supported by this
--   <a>Instance</a> and
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   the runtime <i>must</i> return
--   <a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a>.
--   
--   Runtimes <i>must</i> always return identical buffer contents from this
--   enumeration for the given <tt>systemId</tt> and
--   <tt>viewConfigurationType</tt> for the lifetime of the instance.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <ul>
--   <li><tt>instance</tt> <i>must</i> be a valid <a>Instance</a>
--   handle</li>
--   </ul>
--   
--   <ul>
--   <li><tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value</li>
--   <li><tt>viewCountOutput</tt> <i>must</i> be a pointer to a
--   <tt>uint32_t</tt> value</li>
--   <li>If <tt>viewCapacityInput</tt> is not <tt>0</tt>, <tt>views</tt>
--   <i>must</i> be a pointer to an array of <tt>viewCapacityInput</tt>
--   <a>ViewConfigurationView</a> structures</li>
--   </ul>
--   
--   <h2>Return Codes</h2>
--   
--   <ul>
--   <li><i><a>Success</a></i> <ul><li><a>SUCCESS</a></li></ul></li>
--   </ul>
--   
--   <ul>
--   <li><i><a>Failure</a></i>
--   <ul><li><a>ERROR_INSTANCE_LOST</a></li><li><a>ERROR_RUNTIME_FAILURE</a></li><li><a>ERROR_HANDLE_INVALID</a></li><li><a>ERROR_SYSTEM_INVALID</a></li><li><a>ERROR_VALIDATION_FAILURE</a></li><li><a>ERROR_VIEW_CONFIGURATION_TYPE_UNSUPPORTED</a></li><li><a>ERROR_SIZE_INSUFFICIENT</a></li></ul></li>
--   </ul>
--   
--   <h1>See Also</h1>
--   
--   <a>Instance</a>,
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrSystemId</a>,
--   <a>ViewConfigurationType</a>, <a>ViewConfigurationView</a>,
--   <a>getViewConfigurationProperties</a>
enumerateViewConfigurationViews :: forall a io. (Extendss ViewConfigurationView a, PokeChain a, PeekChain a, MonadIO io) => Instance -> SystemId -> ViewConfigurationType -> io ("views" ::: Vector (ViewConfigurationView a))

-- | XrViewConfigurationView - Individual view configuration
--   
--   <h2>Member Descriptions</h2>
--   
--   <h1>Description</h1>
--   
--   See <a>SwapchainSubImage</a> for more information about
--   <tt>imageRect</tt> values, and <a>SwapchainCreateInfo</a> for more
--   information about creating swapchains appropriately sized to support
--   those <tt>imageRect</tt> values.
--   
--   The array of <a>ViewConfigurationView</a> returned by the runtime
--   <i>must</i> adhere to the rules defined in
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#view_configuration_type</a>,
--   such as the count and association to the left and right eyes.
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   <a>StructureType</a>, <a>ViewConfigurationProperties</a>,
--   <a>ViewConfigurationType</a>, <a>enumerateViewConfigurationViews</a>
data ViewConfigurationView (es :: [Type])
ViewConfigurationView :: Chain es -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> Word32 -> ViewConfigurationView (es :: [Type])

-- | <tt>next</tt> is <tt>NULL</tt> or a pointer to the next structure in a
--   structure chain. No such structures are defined in core OpenXR.
--   
--   <tt>next</tt> <i>must</i> be <tt>NULL</tt> or a valid pointer to the
--   <a>next structure in a structure chain</a>. See also:
--   <a>ViewConfigurationDepthRangeEXT</a>,
--   <a>ViewConfigurationViewFovEPIC</a>
[$sel:next:ViewConfigurationView] :: ViewConfigurationView (es :: [Type]) -> Chain es

-- | <tt>recommendedImageRectWidth</tt> is the optimal width of
--   <tt>imageRect</tt> to use when rendering this view into a swapchain.
[$sel:recommendedImageRectWidth:ViewConfigurationView] :: ViewConfigurationView (es :: [Type]) -> Word32

-- | <tt>maxImageRectWidth</tt> is the maximum width of <tt>imageRect</tt>
--   supported when rendering this view into a swapchain.
[$sel:maxImageRectWidth:ViewConfigurationView] :: ViewConfigurationView (es :: [Type]) -> Word32

-- | <tt>recommendedImageRectHeight</tt> is the optimal height of
--   <tt>imageRect</tt> to use when rendering this view into a swapchain.
[$sel:recommendedImageRectHeight:ViewConfigurationView] :: ViewConfigurationView (es :: [Type]) -> Word32

-- | <tt>maxImageRectHeight</tt> is the maximum height of
--   <tt>imageRect</tt> supported when rendering this view into a
--   swapchain.
[$sel:maxImageRectHeight:ViewConfigurationView] :: ViewConfigurationView (es :: [Type]) -> Word32

-- | <tt>recommendedSwapchainSampleCount</tt> is the recommended number of
--   sub-data element samples to create for each swapchain image that will
--   be rendered into for this view.
[$sel:recommendedSwapchainSampleCount:ViewConfigurationView] :: ViewConfigurationView (es :: [Type]) -> Word32

-- | <tt>maxSwapchainSampleCount</tt> is the maximum number of sub-data
--   element samples supported for swapchain images that will be rendered
--   into for this view.
[$sel:maxSwapchainSampleCount:ViewConfigurationView] :: ViewConfigurationView (es :: [Type]) -> Word32

-- | XrViewConfigurationProperties - Detailed configuration properties for
--   an XrViewConfigurationProperties
--   
--   <h2>Valid Usage (Implicit)</h2>
--   
--   <h1>See Also</h1>
--   
--   
--   <a>https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#XrBool32</a>,
--   <a>StructureType</a>, <a>ViewConfigurationType</a>,
--   <a>ViewConfigurationView</a>, <a>getViewConfigurationProperties</a>
data ViewConfigurationProperties
ViewConfigurationProperties :: ViewConfigurationType -> Bool -> ViewConfigurationProperties

-- | <tt>viewConfigurationType</tt> is the <a>ViewConfigurationType</a> of
--   the configuration.
--   
--   <tt>viewConfigurationType</tt> <i>must</i> be a valid
--   <a>ViewConfigurationType</a> value
[$sel:viewConfigurationType:ViewConfigurationProperties] :: ViewConfigurationProperties -> ViewConfigurationType

-- | <tt>fovMutable</tt> indicates if the view field of view can be
--   modified by the application.
[$sel:fovMutable:ViewConfigurationProperties] :: ViewConfigurationProperties -> Bool
instance GHC.Classes.Eq OpenXR.Core10.ViewConfigurations.ViewConfigurationProperties
instance GHC.Show.Show (OpenXR.CStruct.Extends.Chain es) => GHC.Show.Show (OpenXR.Core10.ViewConfigurations.ViewConfigurationView es)
instance GHC.Show.Show OpenXR.Core10.ViewConfigurations.ViewConfigurationProperties
instance Vulkan.CStruct.ToCStruct OpenXR.Core10.ViewConfigurations.ViewConfigurationProperties
instance Vulkan.CStruct.FromCStruct OpenXR.Core10.ViewConfigurations.ViewConfigurationProperties
instance Foreign.Storable.Storable OpenXR.Core10.ViewConfigurations.ViewConfigurationProperties
instance Vulkan.Zero.Zero OpenXR.Core10.ViewConfigurations.ViewConfigurationProperties
instance OpenXR.CStruct.Extends.Extensible OpenXR.Core10.ViewConfigurations.ViewConfigurationView
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.ViewConfigurations.ViewConfigurationView es, OpenXR.CStruct.Extends.PokeChain es) => Vulkan.CStruct.ToCStruct (OpenXR.Core10.ViewConfigurations.ViewConfigurationView es)
instance (OpenXR.CStruct.Extends.Extendss OpenXR.Core10.ViewConfigurations.ViewConfigurationView es, OpenXR.CStruct.Extends.PeekChain es) => Vulkan.CStruct.FromCStruct (OpenXR.Core10.ViewConfigurations.ViewConfigurationView es)
instance (es GHC.Types.~ '[]) => Vulkan.Zero.Zero (OpenXR.Core10.ViewConfigurations.ViewConfigurationView es)

module OpenXR.Core10
pattern API_VERSION_1_0 :: Version

module OpenXR.Extensions.Dependencies

-- | The set of other extensions required to use this extension
extensionDependencies :: ("extensionName" ::: ByteString) -> [ByteString]

-- | The minimum required API version to use this extension
extensionCoreRequirement :: ("extensionName" ::: ByteString) -> Version

module OpenXR.Extensions

module OpenXR
